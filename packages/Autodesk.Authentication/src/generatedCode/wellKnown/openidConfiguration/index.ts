/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOidcSpecFromDiscriminatorValue, type OidcSpec } from '../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /.well-known/openid-configuration
 */
export interface OpenidConfigurationRequestBuilder extends BaseRequestBuilder<OpenidConfigurationRequestBuilder> {
    /**
     * Openid-configuration is a Well-known URI Discovery Mechanism for the Provider Configuration URI and is defined in OpenID Connect (OIDC). Openid-configuration is a URI defined within OpenID Connect which provides configuration information about the Identity Provider (IDP).This endpoint retrieves the metadata as a JSON listing of OpenID/OAuth endpoints, supported scopes and claims, public keys used to sign the tokens, and other details.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OidcSpec>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OidcSpec | undefined>;
    /**
     * Openid-configuration is a Well-known URI Discovery Mechanism for the Provider Configuration URI and is defined in OpenID Connect (OIDC). Openid-configuration is a URI defined within OpenID Connect which provides configuration information about the Identity Provider (IDP).This endpoint retrieves the metadata as a JSON listing of OpenID/OAuth endpoints, supported scopes and claims, public keys used to sign the tokens, and other details.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const OpenidConfigurationRequestBuilderUriTemplate = "{+baseurl}/.well-known/openid-configuration";
/**
 * Metadata for all the requests in the request builder.
 */
export const OpenidConfigurationRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: OpenidConfigurationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createOidcSpecFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
