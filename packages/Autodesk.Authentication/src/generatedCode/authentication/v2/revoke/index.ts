/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, type ErrorEscaped } from '../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RevokePostRequestBody}
 */
// @ts-ignore
export function createRevokePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRevokePostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RevokePostResponse}
 */
// @ts-ignore
export function createRevokePostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRevokePostResponse;
}
/**
 * The deserialization information for the current model
 * @param RevokePostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRevokePostRequestBody(revokePostRequestBody: Partial<RevokePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "client_id": n => { revokePostRequestBody.clientId = n.getStringValue(); },
        "token": n => { revokePostRequestBody.token = n.getStringValue(); },
        "token_type_hint": n => { revokePostRequestBody.tokenTypeHint = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RevokePostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRevokePostResponse(revokePostResponse: Partial<RevokePostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
export interface RevokePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * This field is required for public client.
     */
    clientId?: string | null;
    /**
     * The token to be revoked.
     */
    token?: string | null;
    /**
     * Should be either 'access_token', 'refresh_token' or 'device_secret'.
     */
    tokenTypeHint?: string | null;
}
export interface RevokePostResponse extends AdditionalDataHolder, Parsable {
}
/**
 * Builds and executes requests for operations under /authentication/v2/revoke
 */
export interface RevokeRequestBuilder extends BaseRequestBuilder<RevokeRequestBuilder> {
    /**
     * This API endpoint takes an access token or refresh token and revokes it. Once the token is revoked, it becomes inactive and returns no body response.A client can only revoke its own tokens.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RevokePostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 400 status code
     */
     post(body: RevokePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RevokePostResponse | undefined>;
    /**
     * This API endpoint takes an access token or refresh token and revokes it. Once the token is revoked, it becomes inactive and returns no body response.A client can only revoke its own tokens.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RevokePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RevokePostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRevokePostRequestBody(writer: SerializationWriter, revokePostRequestBody: Partial<RevokePostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!revokePostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("client_id", revokePostRequestBody.clientId);
    writer.writeStringValue("token", revokePostRequestBody.token);
    writer.writeStringValue("token_type_hint", revokePostRequestBody.tokenTypeHint);
    writer.writeAdditionalData(revokePostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RevokePostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRevokePostResponse(writer: SerializationWriter, revokePostResponse: Partial<RevokePostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!revokePostResponse || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(revokePostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const RevokeRequestBuilderUriTemplate = "{+baseurl}/authentication/v2/revoke";
/**
 * Metadata for all the requests in the request builder.
 */
export const RevokeRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: RevokeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRevokePostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/x-www-form-urlencoded",
        requestBodySerializer: serializeRevokePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
