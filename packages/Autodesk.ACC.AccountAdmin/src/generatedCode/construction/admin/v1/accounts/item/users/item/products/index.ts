/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProductsGetResponse_pagination}
 */
// @ts-ignore
export function createProductsGetResponse_paginationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProductsGetResponse_pagination;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProductsGetResponse_results}
 */
// @ts-ignore
export function createProductsGetResponse_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProductsGetResponse_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProductsGetResponse}
 */
// @ts-ignore
export function createProductsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProductsGetResponse;
}
/**
 * The deserialization information for the current model
 * @param ProductsGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProductsGetResponse(productsGetResponse: Partial<ProductsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { productsGetResponse.pagination = n.getObjectValue<ProductsGetResponse_pagination>(createProductsGetResponse_paginationFromDiscriminatorValue); },
        "results": n => { productsGetResponse.results = n.getCollectionOfObjectValues<ProductsGetResponse_results>(createProductsGetResponse_resultsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ProductsGetResponse_pagination The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProductsGetResponse_pagination(productsGetResponse_pagination: Partial<ProductsGetResponse_pagination> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "limit": n => { productsGetResponse_pagination.limit = n.getNumberValue(); },
        "nextUrl": n => { productsGetResponse_pagination.nextUrl = n.getStringValue(); },
        "offset": n => { productsGetResponse_pagination.offset = n.getNumberValue(); },
        "previousUrl": n => { productsGetResponse_pagination.previousUrl = n.getStringValue(); },
        "totalResults": n => { productsGetResponse_pagination.totalResults = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ProductsGetResponse_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProductsGetResponse_results(productsGetResponse_results: Partial<ProductsGetResponse_results> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "icon": n => { productsGetResponse_results.icon = n.getStringValue(); },
        "key": n => { productsGetResponse_results.key = n.getEnumValue<ProductsGetResponse_results_key>(ProductsGetResponse_results_keyObject); },
        "name": n => { productsGetResponse_results.name = n.getStringValue(); },
        "projectIds": n => { productsGetResponse_results.projectIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface ProductsGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Contains pagination details for the records returned by the endpoint.
     */
    pagination?: ProductsGetResponse_pagination | null;
    /**
     * A list of ACC products the user is associated with.
     */
    results?: ProductsGetResponse_results[] | null;
}
/**
 * Contains pagination details for the records returned by the endpoint.
 */
export interface ProductsGetResponse_pagination extends AdditionalDataHolder, Parsable {
    /**
     * The maximum number of records returned per page. The last page may contain fewer records than the specified limit.
     */
    limit?: number | null;
    /**
     * The URL for the next page of records, if more results are available. Max length: 2000 characters.Max length: 2000
     */
    nextUrl?: string | null;
    /**
     * The index of the first record in the returned page. Used for pagination.
     */
    offset?: number | null;
    /**
     * The URL for the previous page of records, if applicable. Max length: 2000 characters.Max length: 2000
     */
    previousUrl?: string | null;
    /**
     * The total number of records matching the request.
     */
    totalResults?: number | null;
}
export interface ProductsGetResponse_results extends AdditionalDataHolder, Parsable {
    /**
     * The URL of the icon associated with the product.
     */
    icon?: string | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: ProductsGetResponse_results_key | null;
    /**
     * The name of the product.
     */
    name?: string | null;
    /**
     * The list of projects IDs where the user is associated with the product.
     */
    projectIds?: string[] | null;
}
export type ProductsGetResponse_results_key = (typeof ProductsGetResponse_results_keyObject)[keyof typeof ProductsGetResponse_results_keyObject];
/**
 * Builds and executes requests for operations under /construction/admin/v1/accounts/{accountId}/users/{userId}/products
 */
export interface ProductsRequestBuilder extends BaseRequestBuilder<ProductsRequestBuilder> {
    /**
     * Returns a list of ACC products the user is associated with in their assigned projects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ProductsGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<ProductsRequestBuilderGetQueryParameters> | undefined) : Promise<ProductsGetResponse | undefined>;
    /**
     * Returns a list of ACC products the user is associated with in their assigned projects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ProductsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Returns a list of ACC products the user is associated with in their assigned projects.
 */
export interface ProductsRequestBuilderGetQueryParameters {
    /**
     * List of fields to return in the response. Defaults to all fields.Possible values: ``projectIds``, ``name`` and ``icon``.
     */
    fields?: string[];
    /**
     * Filters the list of products by product key — a machine-readable identifier for an ACC product (such as ``docs``, ``build``, or ``cost``).You can specify one or more keys to return only those products the user is associated with.Example: ``filter[key]=docs,build``Possible values: ``accountAdministration``, ``autoSpecs``, ``build``, ``buildingConnected``, ``capitalPlanning``, ``cloudWorksharing``, ``cost``, ``designCollaboration``, ``docs``, ``financials``, ``insight``, ``modelCoordination``, ``projectAdministration``, ``takeoff``, and ``workshopxr``.
     */
    filterkey?: string[];
    /**
     * A list of project IDs. Only results where the user is associated with one or more of the specified projects are returned.
     */
    filterprojectId?: string[];
    /**
     * The maximum number of records to return in the response.Default: ``20``Minimum: ``1``Maximum: ``200`` (If a larger value is provided, only 200 records are returned)
     */
    limit?: number;
    /**
     * The index of the first record to return.Used for pagination in combination with the ``limit`` parameter.Example: ``limit=20`` and ``offset=40`` returns records 41–60.
     */
    offset?: number;
    /**
     * The list of fields to sort by.Each property can be followed by a direction modifier of either ``asc`` (ascending) or ``desc`` (descending). The default is ``asc``.Possible values:  ``name``.Default is the order in database.
     */
    sort?: string[];
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProductsGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProductsGetResponse(writer: SerializationWriter, productsGetResponse: Partial<ProductsGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!productsGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ProductsGetResponse_pagination>("pagination", productsGetResponse.pagination, serializeProductsGetResponse_pagination);
    writer.writeCollectionOfObjectValues<ProductsGetResponse_results>("results", productsGetResponse.results, serializeProductsGetResponse_results);
    writer.writeAdditionalData(productsGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProductsGetResponse_pagination The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProductsGetResponse_pagination(writer: SerializationWriter, productsGetResponse_pagination: Partial<ProductsGetResponse_pagination> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!productsGetResponse_pagination || isSerializingDerivedType) { return; }
    writer.writeNumberValue("limit", productsGetResponse_pagination.limit);
    writer.writeStringValue("nextUrl", productsGetResponse_pagination.nextUrl);
    writer.writeNumberValue("offset", productsGetResponse_pagination.offset);
    writer.writeStringValue("previousUrl", productsGetResponse_pagination.previousUrl);
    writer.writeNumberValue("totalResults", productsGetResponse_pagination.totalResults);
    writer.writeAdditionalData(productsGetResponse_pagination.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProductsGetResponse_results The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProductsGetResponse_results(writer: SerializationWriter, productsGetResponse_results: Partial<ProductsGetResponse_results> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!productsGetResponse_results || isSerializingDerivedType) { return; }
    writer.writeStringValue("icon", productsGetResponse_results.icon);
    writer.writeEnumValue<ProductsGetResponse_results_key>("key", productsGetResponse_results.key);
    writer.writeStringValue("name", productsGetResponse_results.name);
    writer.writeCollectionOfPrimitiveValues<string>("projectIds", productsGetResponse_results.projectIds);
    writer.writeAdditionalData(productsGetResponse_results.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const ProductsRequestBuilderUriTemplate = "{+baseurl}/construction/admin/v1/accounts/{accountId}/users/{userId}/products{?fields*,filter%5Bkey%5D*,filter%5BprojectId%5D*,limit*,offset*,sort*}";
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const ProductsGetResponse_results_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ProductsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "filterkey": "filter%5Bkey%5D",
    "filterprojectId": "filter%5BprojectId%5D",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ProductsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ProductsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createProductsGetResponseFromDiscriminatorValue,
        queryParametersMapper: ProductsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
