/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RolesGetResponse_pagination}
 */
// @ts-ignore
export function createRolesGetResponse_paginationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRolesGetResponse_pagination;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RolesGetResponse_results}
 */
// @ts-ignore
export function createRolesGetResponse_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRolesGetResponse_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RolesGetResponse}
 */
// @ts-ignore
export function createRolesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRolesGetResponse;
}
/**
 * The deserialization information for the current model
 * @param RolesGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRolesGetResponse(rolesGetResponse: Partial<RolesGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { rolesGetResponse.pagination = n.getObjectValue<RolesGetResponse_pagination>(createRolesGetResponse_paginationFromDiscriminatorValue); },
        "results": n => { rolesGetResponse.results = n.getCollectionOfObjectValues<RolesGetResponse_results>(createRolesGetResponse_resultsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param RolesGetResponse_pagination The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRolesGetResponse_pagination(rolesGetResponse_pagination: Partial<RolesGetResponse_pagination> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "limit": n => { rolesGetResponse_pagination.limit = n.getNumberValue(); },
        "nextUrl": n => { rolesGetResponse_pagination.nextUrl = n.getStringValue(); },
        "offset": n => { rolesGetResponse_pagination.offset = n.getNumberValue(); },
        "previousUrl": n => { rolesGetResponse_pagination.previousUrl = n.getStringValue(); },
        "totalResults": n => { rolesGetResponse_pagination.totalResults = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RolesGetResponse_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRolesGetResponse_results(rolesGetResponse_results: Partial<RolesGetResponse_results> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createdAt": n => { rolesGetResponse_results.createdAt = n.getDateValue(); },
        "id": n => { rolesGetResponse_results.id = n.getGuidValue(); },
        "key": n => { rolesGetResponse_results.key = n.getStringValue(); },
        "name": n => { rolesGetResponse_results.name = n.getStringValue(); },
        "projectIds": n => { rolesGetResponse_results.projectIds = n.getCollectionOfPrimitiveValues<string>(); },
        "status": n => { rolesGetResponse_results.status = n.getStringValue(); },
        "updatedAt": n => { rolesGetResponse_results.updatedAt = n.getDateValue(); },
    }
}
export type GetFilterTextMatchQueryParameterType = (typeof GetFilterTextMatchQueryParameterTypeObject)[keyof typeof GetFilterTextMatchQueryParameterTypeObject];
export interface RolesGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Contains pagination details for the records returned by the endpoint.
     */
    pagination?: RolesGetResponse_pagination | null;
    /**
     * The requested page of roles associated with the user.
     */
    results?: RolesGetResponse_results[] | null;
}
/**
 * Contains pagination details for the records returned by the endpoint.
 */
export interface RolesGetResponse_pagination extends AdditionalDataHolder, Parsable {
    /**
     * The maximum number of records returned per page. The last page may contain fewer records than the specified limit.
     */
    limit?: number | null;
    /**
     * The URL for the next page of records, if more results are available. Max length: 2000 characters.Max length: 2000
     */
    nextUrl?: string | null;
    /**
     * The index of the first record in the returned page. Used for pagination.
     */
    offset?: number | null;
    /**
     * The URL for the previous page of records, if applicable. Max length: 2000 characters.Max length: 2000
     */
    previousUrl?: string | null;
    /**
     * The total number of records matching the request.
     */
    totalResults?: number | null;
}
export interface RolesGetResponse_results extends AdditionalDataHolder, Parsable {
    /**
     * The timestamp when the role was created.
     */
    createdAt?: Date | null;
    /**
     * The unique ID of the role.
     */
    id?: Guid | null;
    /**
     * The internal key used for translating predefined role names.Max length: 255
     */
    key?: string | null;
    /**
     * The name of the role. Predefined roles are localized based on the request language.Max length: 255
     */
    name?: string | null;
    /**
     * The list of projects where the user is associated with this role.
     */
    projectIds?: string[] | null;
    /**
     * The role status. Possible values: active, inactive.
     */
    status?: string | null;
    /**
     * The timestamp when the role was last updated.
     */
    updatedAt?: Date | null;
}
/**
 * Builds and executes requests for operations under /construction/admin/v1/accounts/{accountId}/users/{userId}/roles
 */
export interface RolesRequestBuilder extends BaseRequestBuilder<RolesRequestBuilder> {
    /**
     * Returns the roles assigned to a specific user across the projects they belong to.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RolesGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<RolesRequestBuilderGetQueryParameters> | undefined) : Promise<RolesGetResponse | undefined>;
    /**
     * Returns the roles assigned to a specific user across the projects they belong to.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<RolesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Returns the roles assigned to a specific user across the projects they belong to.
 */
export interface RolesRequestBuilderGetQueryParameters {
    /**
     * A comma-separated list of response fields to include.Defaults to all fields if not specified.Use this parameter to reduce the response size by retrieving only the fields you need.Possible values:``projectIds`` – Projects where the user holds this role``name`` – Role name``status`` – Role status (active or inactive)``key`` – Internal key used to translate the role name``createdAt`` – Timestamp when the role was created``updatedAt`` – Timestamp when the role was last updated
     */
    fields?: string[];
    /**
     * Filters roles by name.By default, this performs a partial match (case-insensitive).You can control how the match behaves by using the ``filterTextMatch`` parameter. For example, to match only names that start with (`startsWith`), end with (`endsWith`), or exactly equal (`equals`) the provided value.
     */
    filtername?: string;
    /**
     * A list of project IDs. Only results where the user is associated with one or more of the specified projects are returned.
     */
    filterprojectId?: string[];
    /**
     * Filters roles by their status. Accepts one or more of the following values:``active`` – The role is currently in use.``inactive`` – The role has been removed or is no longer in use.
     */
    filterstatus?: string[];
    /**
     * Specifies how text-based filters should match values in supported fields.This parameter can be used in any endpoint that supports text-based filtering (e.g., ``filter[name]``, ``filter[jobNumber]``, ``filter[companyName]``, etc.).Possible values:``contains`` (default) – Matches if the field contains the specified text anywhere``startsWith`` – Matches if the field starts with the specified text``endsWith`` – Matches if the field ends with the specified text``equals`` – Matches only if the field exactly matches the specified textMatching is case-insensitive.Wildcards and regular expressions are not supported.
     */
    filterTextMatch?: GetFilterTextMatchQueryParameterType;
    /**
     * The maximum number of records to return in the response.Default: ``20``Minimum: ``1``Maximum: ``200`` (If a larger value is provided, only 200 records are returned)
     */
    limit?: number;
    /**
     * The index of the first record to return.Used for pagination in combination with the ``limit`` parameter.Example: ``limit=20`` and ``offset=40`` returns records 41–60.
     */
    offset?: number;
    /**
     * Sorts the results by one or more fields.Each field can be followed by a direction modifier:``asc`` – Ascending order (default)``desc`` – Descending orderPossible values: ``name``, ``createdAt``, ``updatedAt``.Default sort: ``name asc``Example: ``sort=name,updatedAt desc``
     */
    sort?: string[];
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RolesGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRolesGetResponse(writer: SerializationWriter, rolesGetResponse: Partial<RolesGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!rolesGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<RolesGetResponse_pagination>("pagination", rolesGetResponse.pagination, serializeRolesGetResponse_pagination);
    writer.writeCollectionOfObjectValues<RolesGetResponse_results>("results", rolesGetResponse.results, serializeRolesGetResponse_results);
    writer.writeAdditionalData(rolesGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RolesGetResponse_pagination The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRolesGetResponse_pagination(writer: SerializationWriter, rolesGetResponse_pagination: Partial<RolesGetResponse_pagination> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!rolesGetResponse_pagination || isSerializingDerivedType) { return; }
    writer.writeNumberValue("limit", rolesGetResponse_pagination.limit);
    writer.writeStringValue("nextUrl", rolesGetResponse_pagination.nextUrl);
    writer.writeNumberValue("offset", rolesGetResponse_pagination.offset);
    writer.writeStringValue("previousUrl", rolesGetResponse_pagination.previousUrl);
    writer.writeNumberValue("totalResults", rolesGetResponse_pagination.totalResults);
    writer.writeAdditionalData(rolesGetResponse_pagination.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RolesGetResponse_results The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRolesGetResponse_results(writer: SerializationWriter, rolesGetResponse_results: Partial<RolesGetResponse_results> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!rolesGetResponse_results || isSerializingDerivedType) { return; }
    writer.writeDateValue("createdAt", rolesGetResponse_results.createdAt);
    writer.writeGuidValue("id", rolesGetResponse_results.id);
    writer.writeStringValue("key", rolesGetResponse_results.key);
    writer.writeStringValue("name", rolesGetResponse_results.name);
    writer.writeCollectionOfPrimitiveValues<string>("projectIds", rolesGetResponse_results.projectIds);
    writer.writeStringValue("status", rolesGetResponse_results.status);
    writer.writeDateValue("updatedAt", rolesGetResponse_results.updatedAt);
    writer.writeAdditionalData(rolesGetResponse_results.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const RolesRequestBuilderUriTemplate = "{+baseurl}/construction/admin/v1/accounts/{accountId}/users/{userId}/roles{?fields*,filterTextMatch*,filter%5Bname%5D*,filter%5BprojectId%5D*,filter%5Bstatus%5D*,limit*,offset*,sort*}";
export const GetFilterTextMatchQueryParameterTypeObject = {
    FilterName: "filter[name]",
    FilterJobNumber: "filter[jobNumber]",
    FilterCompanyName: "filter[companyName]",
    Contains: "contains",
    StartsWith: "startsWith",
    EndsWith: "endsWith",
    Equals: "equals",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const RolesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "filtername": "filter%5Bname%5D",
    "filterprojectId": "filter%5BprojectId%5D",
    "filterstatus": "filter%5Bstatus%5D",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const RolesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: RolesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createRolesGetResponseFromDiscriminatorValue,
        queryParametersMapper: RolesRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
