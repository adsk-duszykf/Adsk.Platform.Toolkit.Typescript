/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type WithUserItemRequestBuilder, WithUserItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse_pagination}
 */
// @ts-ignore
export function createUsersGetResponse_paginationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse_pagination;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse_results_accessLevels}
 */
// @ts-ignore
export function createUsersGetResponse_results_accessLevelsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse_results_accessLevels;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse_results_phone}
 */
// @ts-ignore
export function createUsersGetResponse_results_phoneFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse_results_phone;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse_results_products}
 */
// @ts-ignore
export function createUsersGetResponse_results_productsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse_results_products;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse_results_roles}
 */
// @ts-ignore
export function createUsersGetResponse_results_rolesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse_results_roles;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse_results}
 */
// @ts-ignore
export function createUsersGetResponse_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse}
 */
// @ts-ignore
export function createUsersGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostRequestBody_products}
 */
// @ts-ignore
export function createUsersPostRequestBody_productsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostRequestBody_products;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostRequestBody}
 */
// @ts-ignore
export function createUsersPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostResponse_accessLevels}
 */
// @ts-ignore
export function createUsersPostResponse_accessLevelsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostResponse_accessLevels;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostResponse_phone}
 */
// @ts-ignore
export function createUsersPostResponse_phoneFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostResponse_phone;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostResponse_products}
 */
// @ts-ignore
export function createUsersPostResponse_productsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostResponse_products;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostResponse_roles}
 */
// @ts-ignore
export function createUsersPostResponse_rolesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostResponse_roles;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostResponse}
 */
// @ts-ignore
export function createUsersPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostResponse;
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse(usersGetResponse: Partial<UsersGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { usersGetResponse.pagination = n.getObjectValue<UsersGetResponse_pagination>(createUsersGetResponse_paginationFromDiscriminatorValue); },
        "results": n => { usersGetResponse.results = n.getCollectionOfObjectValues<UsersGetResponse_results>(createUsersGetResponse_resultsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse_pagination The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse_pagination(usersGetResponse_pagination: Partial<UsersGetResponse_pagination> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "limit": n => { usersGetResponse_pagination.limit = n.getNumberValue(); },
        "nextUrl": n => { usersGetResponse_pagination.nextUrl = n.getStringValue(); },
        "offset": n => { usersGetResponse_pagination.offset = n.getNumberValue(); },
        "previousUrl": n => { usersGetResponse_pagination.previousUrl = n.getStringValue(); },
        "totalResults": n => { usersGetResponse_pagination.totalResults = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse_results(usersGetResponse_results: Partial<UsersGetResponse_results> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aboutMe": n => { usersGetResponse_results.aboutMe = n.getStringValue(); },
        "accessLevels": n => { usersGetResponse_results.accessLevels = n.getObjectValue<UsersGetResponse_results_accessLevels>(createUsersGetResponse_results_accessLevelsFromDiscriminatorValue); },
        "addedOn": n => { usersGetResponse_results.addedOn = n.getDateValue(); },
        "addressLine1": n => { usersGetResponse_results.addressLine1 = n.getStringValue(); },
        "addressLine2": n => { usersGetResponse_results.addressLine2 = n.getStringValue(); },
        "analyticsId": n => { usersGetResponse_results.analyticsId = n.getStringValue(); },
        "autodeskId": n => { usersGetResponse_results.autodeskId = n.getStringValue(); },
        "city": n => { usersGetResponse_results.city = n.getStringValue(); },
        "companyId": n => { usersGetResponse_results.companyId = n.getStringValue(); },
        "companyName": n => { usersGetResponse_results.companyName = n.getStringValue(); },
        "country": n => { usersGetResponse_results.country = n.getStringValue(); },
        "email": n => { usersGetResponse_results.email = n.getStringValue(); },
        "firstName": n => { usersGetResponse_results.firstName = n.getStringValue(); },
        "id": n => { usersGetResponse_results.id = n.getGuidValue(); },
        "imageUrl": n => { usersGetResponse_results.imageUrl = n.getStringValue(); },
        "industry": n => { usersGetResponse_results.industry = n.getStringValue(); },
        "jobTitle": n => { usersGetResponse_results.jobTitle = n.getStringValue(); },
        "lastName": n => { usersGetResponse_results.lastName = n.getStringValue(); },
        "name": n => { usersGetResponse_results.name = n.getStringValue(); },
        "phone": n => { usersGetResponse_results.phone = n.getObjectValue<UsersGetResponse_results_phone>(createUsersGetResponse_results_phoneFromDiscriminatorValue); },
        "postalCode": n => { usersGetResponse_results.postalCode = n.getStringValue(); },
        "products": n => { usersGetResponse_results.products = n.getCollectionOfObjectValues<UsersGetResponse_results_products>(createUsersGetResponse_results_productsFromDiscriminatorValue); },
        "roleIds": n => { usersGetResponse_results.roleIds = n.getCollectionOfPrimitiveValues<string>(); },
        "roles": n => { usersGetResponse_results.roles = n.getCollectionOfObjectValues<UsersGetResponse_results_roles>(createUsersGetResponse_results_rolesFromDiscriminatorValue); },
        "stateOrProvince": n => { usersGetResponse_results.stateOrProvince = n.getStringValue(); },
        "status": n => { usersGetResponse_results.status = n.getStringValue(); },
        "updatedAt": n => { usersGetResponse_results.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse_results_accessLevels The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse_results_accessLevels(usersGetResponse_results_accessLevels: Partial<UsersGetResponse_results_accessLevels> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountAdmin": n => { usersGetResponse_results_accessLevels.accountAdmin = n.getBooleanValue(); },
        "executive": n => { usersGetResponse_results_accessLevels.executive = n.getBooleanValue(); },
        "projectAdmin": n => { usersGetResponse_results_accessLevels.projectAdmin = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse_results_phone The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse_results_phone(usersGetResponse_results_phone: Partial<UsersGetResponse_results_phone> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "extension": n => { usersGetResponse_results_phone.extension = n.getStringValue(); },
        "number": n => { usersGetResponse_results_phone.number = n.getStringValue(); },
        "phoneType": n => { usersGetResponse_results_phone.phoneType = n.getEnumValue<UsersGetResponse_results_phone_phoneType>(UsersGetResponse_results_phone_phoneTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse_results_products The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse_results_products(usersGetResponse_results_products: Partial<UsersGetResponse_results_products> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access": n => { usersGetResponse_results_products.access = n.getEnumValue<UsersGetResponse_results_products_access>(UsersGetResponse_results_products_accessObject); },
        "key": n => { usersGetResponse_results_products.key = n.getEnumValue<UsersGetResponse_results_products_key>(UsersGetResponse_results_products_keyObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse_results_roles The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse_results_roles(usersGetResponse_results_roles: Partial<UsersGetResponse_results_roles> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { usersGetResponse_results_roles.id = n.getGuidValue(); },
        "name": n => { usersGetResponse_results_roles.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostRequestBody(usersPostRequestBody: Partial<UsersPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "companyId": n => { usersPostRequestBody.companyId = n.getStringValue(); },
        "email": n => { usersPostRequestBody.email = n.getStringValue(); },
        "products": n => { usersPostRequestBody.products = n.getCollectionOfObjectValues<UsersPostRequestBody_products>(createUsersPostRequestBody_productsFromDiscriminatorValue); },
        "roleIds": n => { usersPostRequestBody.roleIds = n.getCollectionOfPrimitiveValues<string>(); },
        "suppressAdministrativeEmails": n => { usersPostRequestBody.suppressAdministrativeEmails = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostRequestBody_products The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostRequestBody_products(usersPostRequestBody_products: Partial<UsersPostRequestBody_products> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access": n => { usersPostRequestBody_products.access = n.getEnumValue<UsersPostRequestBody_products_access>(UsersPostRequestBody_products_accessObject); },
        "key": n => { usersPostRequestBody_products.key = n.getEnumValue<UsersPostRequestBody_products_key>(UsersPostRequestBody_products_keyObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostResponse(usersPostResponse: Partial<UsersPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aboutMe": n => { usersPostResponse.aboutMe = n.getStringValue(); },
        "accessLevels": n => { usersPostResponse.accessLevels = n.getObjectValue<UsersPostResponse_accessLevels>(createUsersPostResponse_accessLevelsFromDiscriminatorValue); },
        "addedOn": n => { usersPostResponse.addedOn = n.getDateValue(); },
        "addressLine1": n => { usersPostResponse.addressLine1 = n.getStringValue(); },
        "addressLine2": n => { usersPostResponse.addressLine2 = n.getStringValue(); },
        "analyticsId": n => { usersPostResponse.analyticsId = n.getStringValue(); },
        "autodeskId": n => { usersPostResponse.autodeskId = n.getStringValue(); },
        "city": n => { usersPostResponse.city = n.getStringValue(); },
        "companyId": n => { usersPostResponse.companyId = n.getStringValue(); },
        "companyName": n => { usersPostResponse.companyName = n.getStringValue(); },
        "country": n => { usersPostResponse.country = n.getStringValue(); },
        "email": n => { usersPostResponse.email = n.getStringValue(); },
        "firstName": n => { usersPostResponse.firstName = n.getStringValue(); },
        "id": n => { usersPostResponse.id = n.getGuidValue(); },
        "imageUrl": n => { usersPostResponse.imageUrl = n.getStringValue(); },
        "industry": n => { usersPostResponse.industry = n.getStringValue(); },
        "jobId": n => { usersPostResponse.jobId = n.getGuidValue(); },
        "jobTitle": n => { usersPostResponse.jobTitle = n.getStringValue(); },
        "lastName": n => { usersPostResponse.lastName = n.getStringValue(); },
        "name": n => { usersPostResponse.name = n.getStringValue(); },
        "phone": n => { usersPostResponse.phone = n.getObjectValue<UsersPostResponse_phone>(createUsersPostResponse_phoneFromDiscriminatorValue); },
        "postalCode": n => { usersPostResponse.postalCode = n.getStringValue(); },
        "products": n => { usersPostResponse.products = n.getCollectionOfObjectValues<UsersPostResponse_products>(createUsersPostResponse_productsFromDiscriminatorValue); },
        "roleIds": n => { usersPostResponse.roleIds = n.getCollectionOfPrimitiveValues<string>(); },
        "roles": n => { usersPostResponse.roles = n.getCollectionOfObjectValues<UsersPostResponse_roles>(createUsersPostResponse_rolesFromDiscriminatorValue); },
        "stateOrProvince": n => { usersPostResponse.stateOrProvince = n.getStringValue(); },
        "status": n => { usersPostResponse.status = n.getStringValue(); },
        "updatedAt": n => { usersPostResponse.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostResponse_accessLevels The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostResponse_accessLevels(usersPostResponse_accessLevels: Partial<UsersPostResponse_accessLevels> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountAdmin": n => { usersPostResponse_accessLevels.accountAdmin = n.getBooleanValue(); },
        "executive": n => { usersPostResponse_accessLevels.executive = n.getBooleanValue(); },
        "projectAdmin": n => { usersPostResponse_accessLevels.projectAdmin = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostResponse_phone The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostResponse_phone(usersPostResponse_phone: Partial<UsersPostResponse_phone> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "extension": n => { usersPostResponse_phone.extension = n.getStringValue(); },
        "number": n => { usersPostResponse_phone.number = n.getStringValue(); },
        "phoneType": n => { usersPostResponse_phone.phoneType = n.getEnumValue<UsersPostResponse_phone_phoneType>(UsersPostResponse_phone_phoneTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostResponse_products The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostResponse_products(usersPostResponse_products: Partial<UsersPostResponse_products> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access": n => { usersPostResponse_products.access = n.getEnumValue<UsersPostResponse_products_access>(UsersPostResponse_products_accessObject); },
        "key": n => { usersPostResponse_products.key = n.getEnumValue<UsersPostResponse_products_key>(UsersPostResponse_products_keyObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostResponse_roles The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostResponse_roles(usersPostResponse_roles: Partial<UsersPostResponse_roles> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { usersPostResponse_roles.id = n.getGuidValue(); },
        "name": n => { usersPostResponse_roles.name = n.getStringValue(); },
    }
}
export type GetFilterTextMatchQueryParameterType = (typeof GetFilterTextMatchQueryParameterTypeObject)[keyof typeof GetFilterTextMatchQueryParameterTypeObject];
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse(writer: SerializationWriter, usersGetResponse: Partial<UsersGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<UsersGetResponse_pagination>("pagination", usersGetResponse.pagination, serializeUsersGetResponse_pagination);
    writer.writeCollectionOfObjectValues<UsersGetResponse_results>("results", usersGetResponse.results, serializeUsersGetResponse_results);
    writer.writeAdditionalData(usersGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse_pagination The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse_pagination(writer: SerializationWriter, usersGetResponse_pagination: Partial<UsersGetResponse_pagination> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse_pagination || isSerializingDerivedType) { return; }
    writer.writeNumberValue("limit", usersGetResponse_pagination.limit);
    writer.writeStringValue("nextUrl", usersGetResponse_pagination.nextUrl);
    writer.writeNumberValue("offset", usersGetResponse_pagination.offset);
    writer.writeStringValue("previousUrl", usersGetResponse_pagination.previousUrl);
    writer.writeNumberValue("totalResults", usersGetResponse_pagination.totalResults);
    writer.writeAdditionalData(usersGetResponse_pagination.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse_results The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse_results(writer: SerializationWriter, usersGetResponse_results: Partial<UsersGetResponse_results> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse_results || isSerializingDerivedType) { return; }
    writer.writeStringValue("aboutMe", usersGetResponse_results.aboutMe);
    writer.writeObjectValue<UsersGetResponse_results_accessLevels>("accessLevels", usersGetResponse_results.accessLevels, serializeUsersGetResponse_results_accessLevels);
    writer.writeDateValue("addedOn", usersGetResponse_results.addedOn);
    writer.writeStringValue("addressLine1", usersGetResponse_results.addressLine1);
    writer.writeStringValue("addressLine2", usersGetResponse_results.addressLine2);
    writer.writeStringValue("analyticsId", usersGetResponse_results.analyticsId);
    writer.writeStringValue("autodeskId", usersGetResponse_results.autodeskId);
    writer.writeStringValue("city", usersGetResponse_results.city);
    writer.writeStringValue("companyId", usersGetResponse_results.companyId);
    writer.writeStringValue("companyName", usersGetResponse_results.companyName);
    writer.writeStringValue("country", usersGetResponse_results.country);
    writer.writeStringValue("email", usersGetResponse_results.email);
    writer.writeStringValue("firstName", usersGetResponse_results.firstName);
    writer.writeGuidValue("id", usersGetResponse_results.id);
    writer.writeStringValue("imageUrl", usersGetResponse_results.imageUrl);
    writer.writeStringValue("industry", usersGetResponse_results.industry);
    writer.writeStringValue("jobTitle", usersGetResponse_results.jobTitle);
    writer.writeStringValue("lastName", usersGetResponse_results.lastName);
    writer.writeStringValue("name", usersGetResponse_results.name);
    writer.writeObjectValue<UsersGetResponse_results_phone>("phone", usersGetResponse_results.phone, serializeUsersGetResponse_results_phone);
    writer.writeStringValue("postalCode", usersGetResponse_results.postalCode);
    writer.writeCollectionOfObjectValues<UsersGetResponse_results_products>("products", usersGetResponse_results.products, serializeUsersGetResponse_results_products);
    writer.writeCollectionOfPrimitiveValues<string>("roleIds", usersGetResponse_results.roleIds);
    writer.writeCollectionOfObjectValues<UsersGetResponse_results_roles>("roles", usersGetResponse_results.roles, serializeUsersGetResponse_results_roles);
    writer.writeStringValue("stateOrProvince", usersGetResponse_results.stateOrProvince);
    writer.writeStringValue("status", usersGetResponse_results.status);
    writer.writeDateValue("updatedAt", usersGetResponse_results.updatedAt);
    writer.writeAdditionalData(usersGetResponse_results.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse_results_accessLevels The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse_results_accessLevels(writer: SerializationWriter, usersGetResponse_results_accessLevels: Partial<UsersGetResponse_results_accessLevels> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse_results_accessLevels || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("accountAdmin", usersGetResponse_results_accessLevels.accountAdmin);
    writer.writeBooleanValue("executive", usersGetResponse_results_accessLevels.executive);
    writer.writeBooleanValue("projectAdmin", usersGetResponse_results_accessLevels.projectAdmin);
    writer.writeAdditionalData(usersGetResponse_results_accessLevels.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse_results_phone The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse_results_phone(writer: SerializationWriter, usersGetResponse_results_phone: Partial<UsersGetResponse_results_phone> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse_results_phone || isSerializingDerivedType) { return; }
    writer.writeStringValue("extension", usersGetResponse_results_phone.extension);
    writer.writeStringValue("number", usersGetResponse_results_phone.number);
    writer.writeEnumValue<UsersGetResponse_results_phone_phoneType>("phoneType", usersGetResponse_results_phone.phoneType);
    writer.writeAdditionalData(usersGetResponse_results_phone.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse_results_products The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse_results_products(writer: SerializationWriter, usersGetResponse_results_products: Partial<UsersGetResponse_results_products> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse_results_products || isSerializingDerivedType) { return; }
    writer.writeEnumValue<UsersGetResponse_results_products_access>("access", usersGetResponse_results_products.access);
    writer.writeEnumValue<UsersGetResponse_results_products_key>("key", usersGetResponse_results_products.key);
    writer.writeAdditionalData(usersGetResponse_results_products.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse_results_roles The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse_results_roles(writer: SerializationWriter, usersGetResponse_results_roles: Partial<UsersGetResponse_results_roles> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse_results_roles || isSerializingDerivedType) { return; }
    writer.writeGuidValue("id", usersGetResponse_results_roles.id);
    writer.writeStringValue("name", usersGetResponse_results_roles.name);
    writer.writeAdditionalData(usersGetResponse_results_roles.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostRequestBody(writer: SerializationWriter, usersPostRequestBody: Partial<UsersPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("companyId", usersPostRequestBody.companyId);
    writer.writeStringValue("email", usersPostRequestBody.email);
    writer.writeCollectionOfObjectValues<UsersPostRequestBody_products>("products", usersPostRequestBody.products, serializeUsersPostRequestBody_products);
    writer.writeCollectionOfPrimitiveValues<string>("roleIds", usersPostRequestBody.roleIds);
    writer.writeBooleanValue("suppressAdministrativeEmails", usersPostRequestBody.suppressAdministrativeEmails);
    writer.writeAdditionalData(usersPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostRequestBody_products The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostRequestBody_products(writer: SerializationWriter, usersPostRequestBody_products: Partial<UsersPostRequestBody_products> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostRequestBody_products || isSerializingDerivedType) { return; }
    writer.writeEnumValue<UsersPostRequestBody_products_access>("access", usersPostRequestBody_products.access);
    writer.writeEnumValue<UsersPostRequestBody_products_key>("key", usersPostRequestBody_products.key);
    writer.writeAdditionalData(usersPostRequestBody_products.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostResponse(writer: SerializationWriter, usersPostResponse: Partial<UsersPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("aboutMe", usersPostResponse.aboutMe);
    writer.writeObjectValue<UsersPostResponse_accessLevels>("accessLevels", usersPostResponse.accessLevels, serializeUsersPostResponse_accessLevels);
    writer.writeDateValue("addedOn", usersPostResponse.addedOn);
    writer.writeStringValue("addressLine1", usersPostResponse.addressLine1);
    writer.writeStringValue("addressLine2", usersPostResponse.addressLine2);
    writer.writeStringValue("analyticsId", usersPostResponse.analyticsId);
    writer.writeStringValue("autodeskId", usersPostResponse.autodeskId);
    writer.writeStringValue("city", usersPostResponse.city);
    writer.writeStringValue("companyId", usersPostResponse.companyId);
    writer.writeStringValue("companyName", usersPostResponse.companyName);
    writer.writeStringValue("country", usersPostResponse.country);
    writer.writeStringValue("email", usersPostResponse.email);
    writer.writeStringValue("firstName", usersPostResponse.firstName);
    writer.writeGuidValue("id", usersPostResponse.id);
    writer.writeStringValue("imageUrl", usersPostResponse.imageUrl);
    writer.writeStringValue("industry", usersPostResponse.industry);
    writer.writeGuidValue("jobId", usersPostResponse.jobId);
    writer.writeStringValue("jobTitle", usersPostResponse.jobTitle);
    writer.writeStringValue("lastName", usersPostResponse.lastName);
    writer.writeStringValue("name", usersPostResponse.name);
    writer.writeObjectValue<UsersPostResponse_phone>("phone", usersPostResponse.phone, serializeUsersPostResponse_phone);
    writer.writeStringValue("postalCode", usersPostResponse.postalCode);
    writer.writeCollectionOfObjectValues<UsersPostResponse_products>("products", usersPostResponse.products, serializeUsersPostResponse_products);
    writer.writeCollectionOfPrimitiveValues<string>("roleIds", usersPostResponse.roleIds);
    writer.writeCollectionOfObjectValues<UsersPostResponse_roles>("roles", usersPostResponse.roles, serializeUsersPostResponse_roles);
    writer.writeStringValue("stateOrProvince", usersPostResponse.stateOrProvince);
    writer.writeStringValue("status", usersPostResponse.status);
    writer.writeDateValue("updatedAt", usersPostResponse.updatedAt);
    writer.writeAdditionalData(usersPostResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostResponse_accessLevels The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostResponse_accessLevels(writer: SerializationWriter, usersPostResponse_accessLevels: Partial<UsersPostResponse_accessLevels> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostResponse_accessLevels || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("accountAdmin", usersPostResponse_accessLevels.accountAdmin);
    writer.writeBooleanValue("executive", usersPostResponse_accessLevels.executive);
    writer.writeBooleanValue("projectAdmin", usersPostResponse_accessLevels.projectAdmin);
    writer.writeAdditionalData(usersPostResponse_accessLevels.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostResponse_phone The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostResponse_phone(writer: SerializationWriter, usersPostResponse_phone: Partial<UsersPostResponse_phone> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostResponse_phone || isSerializingDerivedType) { return; }
    writer.writeStringValue("extension", usersPostResponse_phone.extension);
    writer.writeStringValue("number", usersPostResponse_phone.number);
    writer.writeEnumValue<UsersPostResponse_phone_phoneType>("phoneType", usersPostResponse_phone.phoneType);
    writer.writeAdditionalData(usersPostResponse_phone.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostResponse_products The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostResponse_products(writer: SerializationWriter, usersPostResponse_products: Partial<UsersPostResponse_products> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostResponse_products || isSerializingDerivedType) { return; }
    writer.writeEnumValue<UsersPostResponse_products_access>("access", usersPostResponse_products.access);
    writer.writeEnumValue<UsersPostResponse_products_key>("key", usersPostResponse_products.key);
    writer.writeAdditionalData(usersPostResponse_products.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostResponse_roles The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostResponse_roles(writer: SerializationWriter, usersPostResponse_roles: Partial<UsersPostResponse_roles> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostResponse_roles || isSerializingDerivedType) { return; }
    writer.writeGuidValue("id", usersPostResponse_roles.id);
    writer.writeStringValue("name", usersPostResponse_roles.name);
    writer.writeAdditionalData(usersPostResponse_roles.additionalData);
}
export interface UsersGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Contains pagination details for the records returned by the endpoint.
     */
    pagination?: UsersGetResponse_pagination | null;
    /**
     * The requested page of project users.
     */
    results?: UsersGetResponse_results[] | null;
}
/**
 * Contains pagination details for the records returned by the endpoint.
 */
export interface UsersGetResponse_pagination extends AdditionalDataHolder, Parsable {
    /**
     * The maximum number of records returned per page. The last page may contain fewer records than the specified limit.
     */
    limit?: number | null;
    /**
     * The URL for the next page of records, if more results are available. Max length: 2000 characters.Max length: 2000
     */
    nextUrl?: string | null;
    /**
     * The index of the first record in the returned page. Used for pagination.
     */
    offset?: number | null;
    /**
     * The URL for the previous page of records, if applicable. Max length: 2000 characters.Max length: 2000
     */
    previousUrl?: string | null;
    /**
     * The total number of records matching the request.
     */
    totalResults?: number | null;
}
export interface UsersGetResponse_results extends AdditionalDataHolder, Parsable {
    /**
     * A short bio about the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    aboutMe?: string | null;
    /**
     * Flags that identify a returned user's access levels in the account or project.
     */
    accessLevels?: UsersGetResponse_results_accessLevels | null;
    /**
     * The timestamp when the user was first given access to any product on the project.
     */
    addedOn?: Date | null;
    /**
     * The user's address line 1. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine1?: string | null;
    /**
     * The user's address line 2. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine2?: string | null;
    /**
     * Not relevant
     */
    analyticsId?: string | null;
    /**
     * The ID of the user's Autodesk profile.Max length: 255
     */
    autodeskId?: string | null;
    /**
     * The User's city. This data syncs from the user's Autodesk profile.Max length: 255
     */
    city?: string | null;
    /**
     * The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies </en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/>`_.
     */
    companyId?: string | null;
    /**
     * The name of the company to which the user belongs.Max length: 255
     */
    companyName?: string | null;
    /**
     * The user's country. This data syncs from the user's Autodesk profile.Max length: 255
     */
    country?: string | null;
    /**
     * The email of the user.Max length: 255
     */
    email?: string | null;
    /**
     * The user's first name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    firstName?: string | null;
    /**
     * The ACC ID of the user.
     */
    id?: Guid | null;
    /**
     * The URL of the user's avatar. This data syncs from the user's Autodesk profile.Max length: 255
     */
    imageUrl?: string | null;
    /**
     * The industry the user works in. This data syncs from the user's Autodesk profile.Max length: 255
     */
    industry?: string | null;
    /**
     * The user's job title. This data syncs from the user's Autodesk profile.Max length: 255
     */
    jobTitle?: string | null;
    /**
     * The user's last name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    lastName?: string | null;
    /**
     * The full name of the user.Max length: 255
     */
    name?: string | null;
    /**
     * The user's phone number. This data syncs from the user's Autodesk profile.
     */
    phone?: UsersGetResponse_results_phone | null;
    /**
     * The zip or postal code of the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    postalCode?: string | null;
    /**
     * Information about the products activated in the specified project for this user.
     */
    products?: UsersGetResponse_results_products[] | null;
    /**
     * A list of IDs of the roles that the user belongs to in the project.
     */
    roleIds?: string[] | null;
    /**
     * A list of the role IDs and names that are associated with the user in the project.
     */
    roles?: UsersGetResponse_results_roles[] | null;
    /**
     * The state or province of the user. The accepted values here change depending on which country is provided. This data syncs from the user's Autodesk profile.Max length: 255
     */
    stateOrProvince?: string | null;
    /**
     * The status of the user in the project. A pending user could be waiting for their products to activate, or the user hasn't accepted an email to create an account with Autodesk.Possible values:- ``active``: The user has been added to the project.- ``pending``: The user is in the process of being added to the project.- ``disabled``: The user has been temporarily suspended from the project.- ``deleted``: The user has been removed from the project.
     */
    status?: string | null;
    /**
     * The timestamp when the project user was last updated, in ISO 8601 format.
     */
    updatedAt?: Date | null;
}
/**
 * Flags that identify a returned user's access levels in the account or project.
 */
export interface UsersGetResponse_results_accessLevels extends AdditionalDataHolder, Parsable {
    /**
     * Indicates whether the user is an account administrator for the account. Possible values:- ``true``: The user is an account administrator.- ``false``: The user is not an account administrator.
     */
    accountAdmin?: boolean | null;
    /**
     * Indicates whether the user is an executive in the account. Possible values:- ``true``: The user is an executive.- ``false``: The user is not an executive.
     */
    executive?: boolean | null;
    /**
     * Indicates whether the user is a project administrator for the project. Possible values:- ``true``: The user is a project administrator.- ``false``: The user is not a project administrator.
     */
    projectAdmin?: boolean | null;
}
/**
 * The user's phone number. This data syncs from the user's Autodesk profile.
 */
export interface UsersGetResponse_results_phone extends AdditionalDataHolder, Parsable {
    /**
     * User's phone extension.
     */
    extension?: string | null;
    /**
     * User's phone number
     */
    number?: string | null;
    /**
     * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
     */
    phoneType?: UsersGetResponse_results_phone_phoneType | null;
}
export type UsersGetResponse_results_phone_phoneType = (typeof UsersGetResponse_results_phone_phoneTypeObject)[keyof typeof UsersGetResponse_results_phone_phoneTypeObject];
export interface UsersGetResponse_results_products extends AdditionalDataHolder, Parsable {
    /**
     * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
     */
    access?: UsersGetResponse_results_products_access | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: UsersGetResponse_results_products_key | null;
}
export type UsersGetResponse_results_products_access = (typeof UsersGetResponse_results_products_accessObject)[keyof typeof UsersGetResponse_results_products_accessObject];
export type UsersGetResponse_results_products_key = (typeof UsersGetResponse_results_products_keyObject)[keyof typeof UsersGetResponse_results_products_keyObject];
export interface UsersGetResponse_results_roles extends AdditionalDataHolder, Parsable {
    /**
     * The ID of a role that the user belongs to in the project.
     */
    id?: Guid | null;
    /**
     * The name of a role that the user belongs to in the project.
     */
    name?: string | null;
}
export interface UsersPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies </en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/>`_.
     */
    companyId?: string | null;
    /**
     * The email address of the user.Max length: 255
     */
    email?: string | null;
    /**
     * Information about the products activated in the specified project for this user.
     */
    products?: UsersPostRequestBody_products[] | null;
    /**
     * A list of IDs of the roles that the user belongs to in the project.
     */
    roleIds?: string[] | null;
    /**
     * Suppresses project invite emails to the invited users. Defaults to false.
     */
    suppressAdministrativeEmails?: boolean | null;
}
export interface UsersPostRequestBody_products extends AdditionalDataHolder, Parsable {
    /**
     * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
     */
    access?: UsersPostRequestBody_products_access | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: UsersPostRequestBody_products_key | null;
}
export type UsersPostRequestBody_products_access = (typeof UsersPostRequestBody_products_accessObject)[keyof typeof UsersPostRequestBody_products_accessObject];
export type UsersPostRequestBody_products_key = (typeof UsersPostRequestBody_products_keyObject)[keyof typeof UsersPostRequestBody_products_keyObject];
export interface UsersPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * A short bio about the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    aboutMe?: string | null;
    /**
     * Flags that identify a returned user's access levels in the account or project.
     */
    accessLevels?: UsersPostResponse_accessLevels | null;
    /**
     * The timestamp when the user was first given access to any product on the project.
     */
    addedOn?: Date | null;
    /**
     * The user's address line 1. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine1?: string | null;
    /**
     * The user's address line 2. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine2?: string | null;
    /**
     * Not relevant
     */
    analyticsId?: string | null;
    /**
     * The ID of the user's Autodesk profile.Max length: 255
     */
    autodeskId?: string | null;
    /**
     * The User's city. This data syncs from the user's Autodesk profile.Max length: 255
     */
    city?: string | null;
    /**
     * The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies </en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/>`_.
     */
    companyId?: string | null;
    /**
     * The name of the company to which the user belongs.Max length: 255
     */
    companyName?: string | null;
    /**
     * The user's country. This data syncs from the user's Autodesk profile.Max length: 255
     */
    country?: string | null;
    /**
     * The email of the user.Max length: 255
     */
    email?: string | null;
    /**
     * The user's first name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    firstName?: string | null;
    /**
     * The ACC ID of the user.
     */
    id?: Guid | null;
    /**
     * The URL of the user's avatar. This data syncs from the user's Autodesk profile.Max length: 255
     */
    imageUrl?: string | null;
    /**
     * The industry the user works in. This data syncs from the user's Autodesk profile.Max length: 255
     */
    industry?: string | null;
    /**
     * Not relevant - we don't currently support this field.
     */
    jobId?: Guid | null;
    /**
     * The user's job title. This data syncs from the user's Autodesk profile.Max length: 255
     */
    jobTitle?: string | null;
    /**
     * The user's last name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    lastName?: string | null;
    /**
     * The full name of the user.Max length: 255
     */
    name?: string | null;
    /**
     * The user's phone number. This data syncs from the user's Autodesk profile.
     */
    phone?: UsersPostResponse_phone | null;
    /**
     * The zip or postal code of the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    postalCode?: string | null;
    /**
     * Information about the products activated in the specified project for this user.
     */
    products?: UsersPostResponse_products[] | null;
    /**
     * A list of IDs of the roles that the user belongs to in the project.
     */
    roleIds?: string[] | null;
    /**
     * A list of the role IDs and names that are associated with the user in the project.
     */
    roles?: UsersPostResponse_roles[] | null;
    /**
     * The state or province of the user. The accepted values here change depending on which country is provided. This data syncs from the user's Autodesk profile.Max length: 255
     */
    stateOrProvince?: string | null;
    /**
     * The status of the user in the project. A pending user could be waiting for their products to activate, or the user hasn't accepted an email to create an account with Autodesk.Possible values:- ``active``: The user has been added to the project.- ``pending``: The user is in the process of being added to the project.- ``disabled``: The user has been temporarily suspended from the project.- ``deleted``: The user has been removed from the project.
     */
    status?: string | null;
    /**
     * The timestamp when the project user was last updated, in ISO 8601 format.
     */
    updatedAt?: Date | null;
}
/**
 * Flags that identify a returned user's access levels in the account or project.
 */
export interface UsersPostResponse_accessLevels extends AdditionalDataHolder, Parsable {
    /**
     * Indicates whether the user is an account administrator for the account. Possible values:- ``true``: The user is an account administrator.- ``false``: The user is not an account administrator.
     */
    accountAdmin?: boolean | null;
    /**
     * Indicates whether the user is an executive in the account. Possible values:- ``true``: The user is an executive.- ``false``: The user is not an executive.
     */
    executive?: boolean | null;
    /**
     * Indicates whether the user is a project administrator for the project. Possible values:- ``true``: The user is a project administrator.- ``false``: The user is not a project administrator.
     */
    projectAdmin?: boolean | null;
}
/**
 * The user's phone number. This data syncs from the user's Autodesk profile.
 */
export interface UsersPostResponse_phone extends AdditionalDataHolder, Parsable {
    /**
     * User's phone extension.
     */
    extension?: string | null;
    /**
     * User's phone number
     */
    number?: string | null;
    /**
     * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
     */
    phoneType?: UsersPostResponse_phone_phoneType | null;
}
export type UsersPostResponse_phone_phoneType = (typeof UsersPostResponse_phone_phoneTypeObject)[keyof typeof UsersPostResponse_phone_phoneTypeObject];
export interface UsersPostResponse_products extends AdditionalDataHolder, Parsable {
    /**
     * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
     */
    access?: UsersPostResponse_products_access | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: UsersPostResponse_products_key | null;
}
export type UsersPostResponse_products_access = (typeof UsersPostResponse_products_accessObject)[keyof typeof UsersPostResponse_products_accessObject];
export type UsersPostResponse_products_key = (typeof UsersPostResponse_products_keyObject)[keyof typeof UsersPostResponse_products_keyObject];
export interface UsersPostResponse_roles extends AdditionalDataHolder, Parsable {
    /**
     * The ID of a role that the user belongs to in the project.
     */
    id?: Guid | null;
    /**
     * The name of a role that the user belongs to in the project.
     */
    name?: string | null;
}
/**
 * Builds and executes requests for operations under /construction/admin/v1/projects/{projectId}/users
 */
export interface UsersRequestBuilder extends BaseRequestBuilder<UsersRequestBuilder> {
    /**
     * Gets an item from the Autodesk.ACC.AccountAdmin.construction.admin.v1.projects.item.users.item collection
     * @param userId The ID of the user. To find the ID call `GET users </en/docs/acc/v1/reference/http/admin-projectsprojectId-users-GET/>`_. You can use either the ACC ID (``id``) or the Autodesk ID (``autodeskId``).
     * @returns {WithUserItemRequestBuilder}
     */
     byUserId(userId: string) : WithUserItemRequestBuilder;
    /**
     * Retrieves information about a filtered subset of users in the specified project.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UsersGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<UsersRequestBuilderGetQueryParameters> | undefined) : Promise<UsersGetResponse | undefined>;
    /**
     * Assigns a user to the specified project.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UsersPostResponse>}
     */
     post(body: UsersPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UsersPostResponse | undefined>;
    /**
     * Retrieves information about a filtered subset of users in the specified project.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UsersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Assigns a user to the specified project.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UsersPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieves information about a filtered subset of users in the specified project.
 */
export interface UsersRequestBuilderGetQueryParameters {
    /**
     * A list of the project fields to include in the response. Default value: all fields.Possible values: ``name``, ``email``, ``firstName``, ``lastName``, ``autodeskId``, ``analyticsId``, ``addressLine1``, ``addressLine2``, ``city``, ``stateOrProvince``, ``postalCode``, ``country``, ``imageUrl``, ``phone``, ``jobTitle``, ``industry``, ``aboutMe``, ``companyId``, ``accessLevels``, ``roleIds``, ``roles``, ``status``, ``addedOn`` and ``products``.
     */
    fields?: string[];
    /**
     * A list of user access levels that the returned users must have.Possible values: ``accouantAdmin``, ``projectAdmin``, ``executive``.Max length: 255
     */
    filteraccessLevels?: string[];
    /**
     * A list of the Autodesk IDs of users to retrieve.
     */
    filterautodeskId?: string[];
    /**
     * The ID of a company that the returned users must represent.Max length: 255
     */
    filtercompanyId?: string;
    /**
     * The name of a company that returned users must be associated with. Can be a partial match based on the value of ``filterTextMatch`` that you provide.For example: ``filter[companyName]=Sample filterTextMatch=startsWith``Max length: 255
     */
    filtercompanyName?: string;
    /**
     * A user email address or address pattern that the returned users must have. This can be a partial match based on the value of ``filterTextMatch`` that you provide.For example:``filter[email]=sample filterTextMatch=startsWith``Max length: 255
     */
    filteremail?: string;
    /**
     * A list of the ACC IDs of users to retrieve.
     */
    filterid?: string[];
    /**
     * A user name or name pattern that the returned users must have. Can be a partial match based on the value of ``filterTextMatch`` that you provide.For example:``filter[name]=Sample filterTextMatch=startsWith``Max length: 255
     */
    filtername?: string;
    /**
     * A comma-separated list of the products that the returned users must have access to in the specified project. Only users that have access to one or more of the specified products are returned.Note that every product in the same account as the project is activated for the project, and a separate subset of these products is active for each user. This endpoint can retrieve users from ACC or BIM 360 projects.Some products are exclusive to ACC or to BIM 360, others are available on both platforms. Specify only the products on the appropriate platform for the users you want to retrieve.Possible ACC values: ``accountAdministration``, ``autoSpecs``, ``build``, ``buildingConnected``, ``capitalPlanning``, ``cloudWorksharing``, ``cost``, ``designCollaboration``, ``docs``, ``financials``, ``insight``, ``modelCoordination``, ``projectAdministration``, ``takeoff``, and ``workshopxr``.Possible BIM 360 values: ``accountAdministration``, ``assets``, ``cloudWorksharing``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.
     */
    filterproducts?: string[];
    /**
     * The ID of a user role that the returned users must have.To obtain a role ID for this filter, you can inspect the ``roleId`` field in previous responses to this endpoint or to the `GET projects/:projectId/users/:userId </en/docs/acc/v1/reference/http/admin-projects-projectId-users-userId-GET/>`_ endpoint.Max length: 255
     */
    filterroleId?: Guid;
    /**
     * A list of the IDs of user roles that the returned users must have.To obtain a role ID for this filter, you can inspect the ``roleId`` field in previous responses to this endpoint or to the `GET projects/:projectId/users/:userId </en/docs/acc/v1/reference/http/admin-projects-projectId-users-userId-GET/>`_ endpoint.
     */
    filterroleIds?: string[];
    /**
     * A list of statuses that the returned project users must be in. The default values are ``active`` and ``pending``.Possible values: ``active``, ``pending``, and ``deleted``.
     */
    filterstatus?: string[];
    /**
     * Specifies how text-based filters should match values in supported fields.This parameter can be used in any endpoint that supports text-based filtering (e.g., ``filter[name]``, ``filter[jobNumber]``, ``filter[companyName]``, etc.).Possible values:``contains`` (default) – Matches if the field contains the specified text anywhere``startsWith`` – Matches if the field starts with the specified text``endsWith`` – Matches if the field ends with the specified text``equals`` – Matches only if the field exactly matches the specified textMatching is case-insensitive.Wildcards and regular expressions are not supported.
     */
    filterTextMatch?: GetFilterTextMatchQueryParameterType;
    /**
     * The maximum number of records to return in the response.Default: ``20``Minimum: ``1``Maximum: ``200`` (If a larger value is provided, only 200 records are returned)
     */
    limit?: number;
    /**
     * The index of the first record to return.Used for pagination in combination with the ``limit`` parameter.Example: ``limit=20`` and ``offset=40`` returns records 41–60.
     */
    offset?: number;
    /**
     * A list of user fields to combine with the SQL *OR* operator for filtering the returned project users. The *OR* is automatically incorporated between the fields; any one of them can produce a valid match.Possible values: ``id``, ``name``, ``email``, ``autodeskId``, ``status`` and ``accessLevels``.
     */
    orFilters?: string[];
    /**
     * A list of fields to sort the returned users by. Multiple sort fields are applied in sequence order - each sort field produces groupings of projects with the same values of that field; the next sort field applies within the groupings produced by the previous sort field.Each property can be followed by a direction modifier of either ``asc`` (ascending) or ``desc`` (descending). The default is ``asc``.Possible values: ``name``, ``email``, ``firstName``, ``lastName``, ``addressLine1``, ``addressLine2``, ``city``, ``companyName``, ``stateOrProvince``, ``status``, ``phone``, ``postalCode``, ``country`` and ``addedOn``. Default value: ``name``.
     */
    sort?: string[];
}
/**
 * Uri template for the request builder.
 */
export const UsersRequestBuilderUriTemplate = "{+baseurl}/construction/admin/v1/projects/{projectId}/users{?fields*,filterTextMatch*,filter%5BaccessLevels%5D*,filter%5BautodeskId%5D*,filter%5BcompanyId%5D*,filter%5BcompanyName%5D*,filter%5Bemail%5D*,filter%5Bid%5D*,filter%5Bname%5D*,filter%5Bproducts%5D*,filter%5BroleId%5D*,filter%5BroleIds%5D*,filter%5Bstatus%5D*,limit*,offset*,orFilters*,sort*}";
export const GetFilterTextMatchQueryParameterTypeObject = {
    FilterName: "filter[name]",
    FilterJobNumber: "filter[jobNumber]",
    FilterCompanyName: "filter[companyName]",
    Contains: "contains",
    StartsWith: "startsWith",
    EndsWith: "endsWith",
    Equals: "equals",
} as const;
/**
 * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
 */
export const UsersGetResponse_results_phone_phoneTypeObject = {
    Home: "home",
    Mobile: "mobile",
    Office: "office",
} as const;
/**
 * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
 */
export const UsersGetResponse_results_products_accessObject = {
    Key: "key",
    Administrator: "administrator",
    Member: "member",
    None: "none",
    ProjectAdministration: "projectAdministration",
    Access: "access",
} as const;
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const UsersGetResponse_results_products_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/**
 * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
 */
export const UsersPostRequestBody_products_accessObject = {
    Key: "key",
    Administrator: "administrator",
    Member: "member",
    None: "none",
    ProjectAdministration: "projectAdministration",
    Access: "access",
} as const;
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const UsersPostRequestBody_products_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/**
 * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
 */
export const UsersPostResponse_phone_phoneTypeObject = {
    Home: "home",
    Mobile: "mobile",
    Office: "office",
} as const;
/**
 * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
 */
export const UsersPostResponse_products_accessObject = {
    Key: "key",
    Administrator: "administrator",
    Member: "member",
    None: "none",
    ProjectAdministration: "projectAdministration",
    Access: "access",
} as const;
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const UsersPostResponse_products_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UsersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "filteraccessLevels": "filter%5BaccessLevels%5D",
    "filterautodeskId": "filter%5BautodeskId%5D",
    "filtercompanyId": "filter%5BcompanyId%5D",
    "filtercompanyName": "filter%5BcompanyName%5D",
    "filteremail": "filter%5Bemail%5D",
    "filterid": "filter%5Bid%5D",
    "filtername": "filter%5Bname%5D",
    "filterproducts": "filter%5Bproducts%5D",
    "filterroleId": "filter%5BroleId%5D",
    "filterroleIds": "filter%5BroleIds%5D",
    "filterstatus": "filter%5Bstatus%5D",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UsersRequestBuilderNavigationMetadata: Record<Exclude<keyof UsersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byUserId: {
        requestsMetadata: WithUserItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["userId"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UsersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createUsersGetResponseFromDiscriminatorValue,
        queryParametersMapper: UsersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createUsersPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUsersPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
