/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchGetResponse}
 */
// @ts-ignore
export function createSearchGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchGetResponse;
}
/**
 * The deserialization information for the current model
 * @param SearchGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchGetResponse(searchGetResponse: Partial<SearchGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { searchGetResponse.aboutMe = n.getStringValue(); },
        "account_id": n => { searchGetResponse.accountId = n.getGuidValue(); },
        "address_line_1": n => { searchGetResponse.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { searchGetResponse.addressLine2 = n.getStringValue(); },
        "city": n => { searchGetResponse.city = n.getStringValue(); },
        "company": n => { searchGetResponse.company = n.getStringValue(); },
        "company_id": n => { searchGetResponse.companyId = n.getGuidValue(); },
        "company_name": n => { searchGetResponse.companyName = n.getStringValue(); },
        "country": n => { searchGetResponse.country = n.getEnumValue<SearchGetResponse_country>(SearchGetResponse_countryObject); },
        "created_at": n => { searchGetResponse.createdAt = n.getDateValue(); },
        "default_role": n => { searchGetResponse.defaultRole = n.getStringValue(); },
        "default_role_id": n => { searchGetResponse.defaultRoleId = n.getStringValue(); },
        "email": n => { searchGetResponse.email = n.getStringValue(); },
        "first_name": n => { searchGetResponse.firstName = n.getStringValue(); },
        "id": n => { searchGetResponse.id = n.getGuidValue(); },
        "image_url": n => { searchGetResponse.imageUrl = n.getStringValue(); },
        "industry": n => { searchGetResponse.industry = n.getStringValue(); },
        "job_title": n => { searchGetResponse.jobTitle = n.getStringValue(); },
        "last_name": n => { searchGetResponse.lastName = n.getStringValue(); },
        "last_sign_in": n => { searchGetResponse.lastSignIn = n.getDateValue(); },
        "name": n => { searchGetResponse.name = n.getStringValue(); },
        "nickname": n => { searchGetResponse.nickname = n.getStringValue(); },
        "phone": n => { searchGetResponse.phone = n.getStringValue(); },
        "postal_code": n => { searchGetResponse.postalCode = n.getStringValue(); },
        "role": n => { searchGetResponse.role = n.getStringValue(); },
        "state_or_province": n => { searchGetResponse.stateOrProvince = n.getEnumValue<SearchGetResponse_state_or_province>(SearchGetResponse_state_or_provinceObject); },
        "status": n => { searchGetResponse.status = n.getStringValue(); },
        "uid": n => { searchGetResponse.uid = n.getStringValue(); },
        "updated_at": n => { searchGetResponse.updatedAt = n.getDateValue(); },
    }
}
export type GetOperatorQueryParameterType = (typeof GetOperatorQueryParameterTypeObject)[keyof typeof GetOperatorQueryParameterTypeObject];
export interface SearchGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * | Short description about the user|| Max length: 25
     */
    aboutMe?: string | null;
    /**
     * Account ID
     */
    accountId?: Guid | null;
    /**
     * | User's address line 1|| Max length: 255
     */
    addressLine1?: string | null;
    /**
     * | User's address line 2|| Max length: 255
     */
    addressLine2?: string | null;
    /**
     * | City in which user is located|| Max length: 255
     */
    city?: string | null;
    /**
     * | Company information from the Autodesk user profile|| Max length: 255|| Note that this is different from company in BIM 360.
     */
    company?: string | null;
    /**
     * The user's default company ID in BIM 360
     */
    companyId?: Guid | null;
    /**
     * The name of the user's default company name in BIM 360
     */
    companyName?: string | null;
    /**
     * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    country?: SearchGetResponse_country | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    createdAt?: Date | null;
    /**
     * | The user's default role.|
     */
    defaultRole?: string | null;
    /**
     * | The ID of the default role.|
     */
    defaultRoleId?: string | null;
    /**
     * | User's email|| Max length: 255
     */
    email?: string | null;
    /**
     * | User's first name|| Max length: 255
     */
    firstName?: string | null;
    /**
     * User ID
     */
    id?: Guid | null;
    /**
     * | URL for user's profile image|| Max length: 255
     */
    imageUrl?: string | null;
    /**
     * | Industry information for user|| Max length: 255
     */
    industry?: string | null;
    /**
     * | User's job title|| Max length: 255
     */
    jobTitle?: string | null;
    /**
     * | User's last name|| Max length: 255
     */
    lastName?: string | null;
    /**
     * The time and date of the user's most recent sign-in, in ISO 8601 format (``YYYY-MM-DDThh:mm:ss.sssZ``). Note t
     */
    lastSignIn?: Date | null;
    /**
     * | Default display name|| Max length: 255
     */
    name?: string | null;
    /**
     * | Nick name for user|| Max length: 255
     */
    nickname?: string | null;
    /**
     * | Contact phone number for the user|| Max length: 255
     */
    phone?: string | null;
    /**
     * | Postal code for the user's location|| Max length: 255
     */
    postalCode?: string | null;
    /**
     * | The role of the user in the account|| Possible values:| ``account_admin``: user has BIM 360 account administration access| ``account_user`` : normal project user| ``project_admin``: user has Project administration privileges at a service level
     */
    role?: string | null;
    /**
     * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    stateOrProvince?: SearchGetResponse_state_or_province | null;
    /**
     * | Status of the user in the system|| Possible values:| ``active``: user is active and has logged into the system sucessfully| ``inactive``: user is disabled| ``pending``: user is invited and is yet to accept the invitation| ``not_invited``: user is not invited
     */
    status?: string | null;
    /**
     * | User's Autodesk ID
     */
    uid?: string | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    updatedAt?: Date | null;
}
export type SearchGetResponse_country = (typeof SearchGetResponse_countryObject)[keyof typeof SearchGetResponse_countryObject];
export type SearchGetResponse_state_or_province = (typeof SearchGetResponse_state_or_provinceObject)[keyof typeof SearchGetResponse_state_or_provinceObject];
/**
 * Builds and executes requests for operations under /hq/v1/accounts/{account_id}/users/search
 */
export interface SearchRequestBuilder extends BaseRequestBuilder<SearchRequestBuilder> {
    /**
     * Search users in the master member directory of a specific BIM 360 account by specified fields.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SearchGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<SearchRequestBuilderGetQueryParameters> | undefined) : Promise<SearchGetResponse | undefined>;
    /**
     * Search users in the master member directory of a specific BIM 360 account by specified fields.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SearchRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Search users in the master member directory of a specific BIM 360 account by specified fields.
 */
export interface SearchRequestBuilderGetQueryParameters {
    /**
     * | User company to match| Max length: 255
     */
    companyName?: string;
    /**
     * | User email to match| Max length: 255
     */
    email?: string;
    /**
     * | Comma-separated fields to include in response|| ``id`` will always be returned.| Invalid fields will be ignored.
     */
    field?: string;
    /**
     * | Response array's size| Default value: ``10``| Max limit: ``100``
     */
    limit?: number;
    /**
     * | User name to match| Max length: 255
     */
    name?: string;
    /**
     * | Offset of response array| Default value: ``0``
     */
    offset?: number;
    /**
     * | Boolean operator to use: ``OR`` (default)or ``AND``
     */
    operator?: GetOperatorQueryParameterType;
    /**
     * | If ``true`` (default), perform a fuzzy match
     */
    partial?: boolean;
    /**
     * | Comma-separated fields to sort by in ascending order|| Prepending a field with ``-`` sorts in descending order.| Invalid fields and whitespaces will be ignored.
     */
    sort?: string;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchGetResponse(writer: SerializationWriter, searchGetResponse: Partial<SearchGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchGetResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", searchGetResponse.aboutMe);
    writer.writeGuidValue("account_id", searchGetResponse.accountId);
    writer.writeStringValue("address_line_1", searchGetResponse.addressLine1);
    writer.writeStringValue("address_line_2", searchGetResponse.addressLine2);
    writer.writeStringValue("city", searchGetResponse.city);
    writer.writeStringValue("company", searchGetResponse.company);
    writer.writeGuidValue("company_id", searchGetResponse.companyId);
    writer.writeStringValue("company_name", searchGetResponse.companyName);
    writer.writeEnumValue<SearchGetResponse_country>("country", searchGetResponse.country);
    writer.writeDateValue("created_at", searchGetResponse.createdAt);
    writer.writeStringValue("default_role", searchGetResponse.defaultRole);
    writer.writeStringValue("default_role_id", searchGetResponse.defaultRoleId);
    writer.writeStringValue("email", searchGetResponse.email);
    writer.writeStringValue("first_name", searchGetResponse.firstName);
    writer.writeGuidValue("id", searchGetResponse.id);
    writer.writeStringValue("image_url", searchGetResponse.imageUrl);
    writer.writeStringValue("industry", searchGetResponse.industry);
    writer.writeStringValue("job_title", searchGetResponse.jobTitle);
    writer.writeStringValue("last_name", searchGetResponse.lastName);
    writer.writeDateValue("last_sign_in", searchGetResponse.lastSignIn);
    writer.writeStringValue("name", searchGetResponse.name);
    writer.writeStringValue("nickname", searchGetResponse.nickname);
    writer.writeStringValue("phone", searchGetResponse.phone);
    writer.writeStringValue("postal_code", searchGetResponse.postalCode);
    writer.writeStringValue("role", searchGetResponse.role);
    writer.writeEnumValue<SearchGetResponse_state_or_province>("state_or_province", searchGetResponse.stateOrProvince);
    writer.writeStringValue("status", searchGetResponse.status);
    writer.writeStringValue("uid", searchGetResponse.uid);
    writer.writeDateValue("updated_at", searchGetResponse.updatedAt);
    writer.writeAdditionalData(searchGetResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const SearchRequestBuilderUriTemplate = "{+baseurl}/hq/v1/accounts/{account_id}/users/search{?company_name*,email*,field*,limit*,name*,offset*,operator*,partial*,sort*}";
export const GetOperatorQueryParameterTypeObject = {
    OR: "OR",
    AND: "AND",
} as const;
/**
 * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const SearchGetResponse_countryObject = {
    Country: "country",
} as const;
/**
 * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const SearchGetResponse_state_or_provinceObject = {
    State_or_province: "state_or_province",
    Country: "country",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SearchRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "companyName": "company_name",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SearchRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SearchRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createSearchGetResponseFromDiscriminatorValue,
        queryParametersMapper: SearchRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
