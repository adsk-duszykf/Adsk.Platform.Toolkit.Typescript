/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { ImportRequestBuilderRequestsMetadata, type ImportRequestBuilder } from './importEscaped/index.js';
// @ts-ignore
import { type WithUser_ItemRequestBuilder, WithUser_ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { SearchRequestBuilderRequestsMetadata, type SearchRequestBuilder } from './search/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersGetResponse}
 */
// @ts-ignore
export function createUsersGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostRequestBody}
 */
// @ts-ignore
export function createUsersPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UsersPostResponse}
 */
// @ts-ignore
export function createUsersPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUsersPostResponse;
}
/**
 * The deserialization information for the current model
 * @param UsersGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersGetResponse(usersGetResponse: Partial<UsersGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { usersGetResponse.aboutMe = n.getStringValue(); },
        "account_id": n => { usersGetResponse.accountId = n.getGuidValue(); },
        "address_line_1": n => { usersGetResponse.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { usersGetResponse.addressLine2 = n.getStringValue(); },
        "city": n => { usersGetResponse.city = n.getStringValue(); },
        "company": n => { usersGetResponse.company = n.getStringValue(); },
        "company_id": n => { usersGetResponse.companyId = n.getGuidValue(); },
        "company_name": n => { usersGetResponse.companyName = n.getStringValue(); },
        "country": n => { usersGetResponse.country = n.getEnumValue<UsersGetResponse_country>(UsersGetResponse_countryObject); },
        "created_at": n => { usersGetResponse.createdAt = n.getDateValue(); },
        "default_role": n => { usersGetResponse.defaultRole = n.getStringValue(); },
        "default_role_id": n => { usersGetResponse.defaultRoleId = n.getStringValue(); },
        "email": n => { usersGetResponse.email = n.getStringValue(); },
        "first_name": n => { usersGetResponse.firstName = n.getStringValue(); },
        "id": n => { usersGetResponse.id = n.getGuidValue(); },
        "image_url": n => { usersGetResponse.imageUrl = n.getStringValue(); },
        "industry": n => { usersGetResponse.industry = n.getStringValue(); },
        "job_title": n => { usersGetResponse.jobTitle = n.getStringValue(); },
        "last_name": n => { usersGetResponse.lastName = n.getStringValue(); },
        "last_sign_in": n => { usersGetResponse.lastSignIn = n.getDateValue(); },
        "name": n => { usersGetResponse.name = n.getStringValue(); },
        "nickname": n => { usersGetResponse.nickname = n.getStringValue(); },
        "phone": n => { usersGetResponse.phone = n.getStringValue(); },
        "postal_code": n => { usersGetResponse.postalCode = n.getStringValue(); },
        "role": n => { usersGetResponse.role = n.getStringValue(); },
        "state_or_province": n => { usersGetResponse.stateOrProvince = n.getEnumValue<UsersGetResponse_state_or_province>(UsersGetResponse_state_or_provinceObject); },
        "status": n => { usersGetResponse.status = n.getStringValue(); },
        "uid": n => { usersGetResponse.uid = n.getStringValue(); },
        "updated_at": n => { usersGetResponse.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostRequestBody(usersPostRequestBody: Partial<UsersPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { usersPostRequestBody.aboutMe = n.getStringValue(); },
        "address_line_1": n => { usersPostRequestBody.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { usersPostRequestBody.addressLine2 = n.getStringValue(); },
        "city": n => { usersPostRequestBody.city = n.getStringValue(); },
        "company": n => { usersPostRequestBody.company = n.getStringValue(); },
        "company_id": n => { usersPostRequestBody.companyId = n.getGuidValue(); },
        "country": n => { usersPostRequestBody.country = n.getEnumValue<UsersPostRequestBody_country>(UsersPostRequestBody_countryObject); },
        "default_role": n => { usersPostRequestBody.defaultRole = n.getStringValue(); },
        "email": n => { usersPostRequestBody.email = n.getStringValue(); },
        "first_name": n => { usersPostRequestBody.firstName = n.getStringValue(); },
        "image_url": n => { usersPostRequestBody.imageUrl = n.getStringValue(); },
        "industry": n => { usersPostRequestBody.industry = n.getStringValue(); },
        "job_title": n => { usersPostRequestBody.jobTitle = n.getStringValue(); },
        "last_name": n => { usersPostRequestBody.lastName = n.getStringValue(); },
        "nickname": n => { usersPostRequestBody.nickname = n.getStringValue(); },
        "phone": n => { usersPostRequestBody.phone = n.getStringValue(); },
        "postal_code": n => { usersPostRequestBody.postalCode = n.getStringValue(); },
        "state_or_province": n => { usersPostRequestBody.stateOrProvince = n.getEnumValue<UsersPostRequestBody_state_or_province>(UsersPostRequestBody_state_or_provinceObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UsersPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUsersPostResponse(usersPostResponse: Partial<UsersPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { usersPostResponse.aboutMe = n.getStringValue(); },
        "account_id": n => { usersPostResponse.accountId = n.getGuidValue(); },
        "address_line_1": n => { usersPostResponse.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { usersPostResponse.addressLine2 = n.getStringValue(); },
        "city": n => { usersPostResponse.city = n.getStringValue(); },
        "company": n => { usersPostResponse.company = n.getStringValue(); },
        "company_id": n => { usersPostResponse.companyId = n.getGuidValue(); },
        "company_name": n => { usersPostResponse.companyName = n.getStringValue(); },
        "country": n => { usersPostResponse.country = n.getEnumValue<UsersPostResponse_country>(UsersPostResponse_countryObject); },
        "created_at": n => { usersPostResponse.createdAt = n.getDateValue(); },
        "default_role": n => { usersPostResponse.defaultRole = n.getStringValue(); },
        "default_role_id": n => { usersPostResponse.defaultRoleId = n.getStringValue(); },
        "email": n => { usersPostResponse.email = n.getStringValue(); },
        "first_name": n => { usersPostResponse.firstName = n.getStringValue(); },
        "id": n => { usersPostResponse.id = n.getGuidValue(); },
        "image_url": n => { usersPostResponse.imageUrl = n.getStringValue(); },
        "industry": n => { usersPostResponse.industry = n.getStringValue(); },
        "job_title": n => { usersPostResponse.jobTitle = n.getStringValue(); },
        "last_name": n => { usersPostResponse.lastName = n.getStringValue(); },
        "last_sign_in": n => { usersPostResponse.lastSignIn = n.getDateValue(); },
        "name": n => { usersPostResponse.name = n.getStringValue(); },
        "nickname": n => { usersPostResponse.nickname = n.getStringValue(); },
        "phone": n => { usersPostResponse.phone = n.getStringValue(); },
        "postal_code": n => { usersPostResponse.postalCode = n.getStringValue(); },
        "role": n => { usersPostResponse.role = n.getStringValue(); },
        "state_or_province": n => { usersPostResponse.stateOrProvince = n.getEnumValue<UsersPostResponse_state_or_province>(UsersPostResponse_state_or_provinceObject); },
        "status": n => { usersPostResponse.status = n.getStringValue(); },
        "uid": n => { usersPostResponse.uid = n.getStringValue(); },
        "updated_at": n => { usersPostResponse.updatedAt = n.getDateValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersGetResponse(writer: SerializationWriter, usersGetResponse: Partial<UsersGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersGetResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", usersGetResponse.aboutMe);
    writer.writeGuidValue("account_id", usersGetResponse.accountId);
    writer.writeStringValue("address_line_1", usersGetResponse.addressLine1);
    writer.writeStringValue("address_line_2", usersGetResponse.addressLine2);
    writer.writeStringValue("city", usersGetResponse.city);
    writer.writeStringValue("company", usersGetResponse.company);
    writer.writeGuidValue("company_id", usersGetResponse.companyId);
    writer.writeStringValue("company_name", usersGetResponse.companyName);
    writer.writeEnumValue<UsersGetResponse_country>("country", usersGetResponse.country);
    writer.writeDateValue("created_at", usersGetResponse.createdAt);
    writer.writeStringValue("default_role", usersGetResponse.defaultRole);
    writer.writeStringValue("default_role_id", usersGetResponse.defaultRoleId);
    writer.writeStringValue("email", usersGetResponse.email);
    writer.writeStringValue("first_name", usersGetResponse.firstName);
    writer.writeGuidValue("id", usersGetResponse.id);
    writer.writeStringValue("image_url", usersGetResponse.imageUrl);
    writer.writeStringValue("industry", usersGetResponse.industry);
    writer.writeStringValue("job_title", usersGetResponse.jobTitle);
    writer.writeStringValue("last_name", usersGetResponse.lastName);
    writer.writeDateValue("last_sign_in", usersGetResponse.lastSignIn);
    writer.writeStringValue("name", usersGetResponse.name);
    writer.writeStringValue("nickname", usersGetResponse.nickname);
    writer.writeStringValue("phone", usersGetResponse.phone);
    writer.writeStringValue("postal_code", usersGetResponse.postalCode);
    writer.writeStringValue("role", usersGetResponse.role);
    writer.writeEnumValue<UsersGetResponse_state_or_province>("state_or_province", usersGetResponse.stateOrProvince);
    writer.writeStringValue("status", usersGetResponse.status);
    writer.writeStringValue("uid", usersGetResponse.uid);
    writer.writeDateValue("updated_at", usersGetResponse.updatedAt);
    writer.writeAdditionalData(usersGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostRequestBody(writer: SerializationWriter, usersPostRequestBody: Partial<UsersPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", usersPostRequestBody.aboutMe);
    writer.writeStringValue("address_line_1", usersPostRequestBody.addressLine1);
    writer.writeStringValue("address_line_2", usersPostRequestBody.addressLine2);
    writer.writeStringValue("city", usersPostRequestBody.city);
    writer.writeStringValue("company", usersPostRequestBody.company);
    writer.writeGuidValue("company_id", usersPostRequestBody.companyId);
    writer.writeEnumValue<UsersPostRequestBody_country>("country", usersPostRequestBody.country);
    writer.writeStringValue("default_role", usersPostRequestBody.defaultRole);
    writer.writeStringValue("email", usersPostRequestBody.email);
    writer.writeStringValue("first_name", usersPostRequestBody.firstName);
    writer.writeStringValue("image_url", usersPostRequestBody.imageUrl);
    writer.writeStringValue("industry", usersPostRequestBody.industry);
    writer.writeStringValue("job_title", usersPostRequestBody.jobTitle);
    writer.writeStringValue("last_name", usersPostRequestBody.lastName);
    writer.writeStringValue("nickname", usersPostRequestBody.nickname);
    writer.writeStringValue("phone", usersPostRequestBody.phone);
    writer.writeStringValue("postal_code", usersPostRequestBody.postalCode);
    writer.writeEnumValue<UsersPostRequestBody_state_or_province>("state_or_province", usersPostRequestBody.stateOrProvince);
    writer.writeAdditionalData(usersPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UsersPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUsersPostResponse(writer: SerializationWriter, usersPostResponse: Partial<UsersPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!usersPostResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", usersPostResponse.aboutMe);
    writer.writeGuidValue("account_id", usersPostResponse.accountId);
    writer.writeStringValue("address_line_1", usersPostResponse.addressLine1);
    writer.writeStringValue("address_line_2", usersPostResponse.addressLine2);
    writer.writeStringValue("city", usersPostResponse.city);
    writer.writeStringValue("company", usersPostResponse.company);
    writer.writeGuidValue("company_id", usersPostResponse.companyId);
    writer.writeStringValue("company_name", usersPostResponse.companyName);
    writer.writeEnumValue<UsersPostResponse_country>("country", usersPostResponse.country);
    writer.writeDateValue("created_at", usersPostResponse.createdAt);
    writer.writeStringValue("default_role", usersPostResponse.defaultRole);
    writer.writeStringValue("default_role_id", usersPostResponse.defaultRoleId);
    writer.writeStringValue("email", usersPostResponse.email);
    writer.writeStringValue("first_name", usersPostResponse.firstName);
    writer.writeGuidValue("id", usersPostResponse.id);
    writer.writeStringValue("image_url", usersPostResponse.imageUrl);
    writer.writeStringValue("industry", usersPostResponse.industry);
    writer.writeStringValue("job_title", usersPostResponse.jobTitle);
    writer.writeStringValue("last_name", usersPostResponse.lastName);
    writer.writeDateValue("last_sign_in", usersPostResponse.lastSignIn);
    writer.writeStringValue("name", usersPostResponse.name);
    writer.writeStringValue("nickname", usersPostResponse.nickname);
    writer.writeStringValue("phone", usersPostResponse.phone);
    writer.writeStringValue("postal_code", usersPostResponse.postalCode);
    writer.writeStringValue("role", usersPostResponse.role);
    writer.writeEnumValue<UsersPostResponse_state_or_province>("state_or_province", usersPostResponse.stateOrProvince);
    writer.writeStringValue("status", usersPostResponse.status);
    writer.writeStringValue("uid", usersPostResponse.uid);
    writer.writeDateValue("updated_at", usersPostResponse.updatedAt);
    writer.writeAdditionalData(usersPostResponse.additionalData);
}
export interface UsersGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * | Short description about the user|| Max length: 255
     */
    aboutMe?: string | null;
    /**
     * Account ID
     */
    accountId?: Guid | null;
    /**
     * | User's address line 1|| Max length: 255
     */
    addressLine1?: string | null;
    /**
     * | User's address line 2|| Max length: 255
     */
    addressLine2?: string | null;
    /**
     * | City in which user is located|| Max length: 255
     */
    city?: string | null;
    /**
     * | Company information from the Autodesk user profile|| Max length: 255|| Note that this is different from company in BIM 360.
     */
    company?: string | null;
    /**
     * The user's default company ID in BIM 360
     */
    companyId?: Guid | null;
    /**
     * The name of the user's default company name in BIM 360
     */
    companyName?: string | null;
    /**
     * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    country?: UsersGetResponse_country | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    createdAt?: Date | null;
    /**
     * | The user's default role.|
     */
    defaultRole?: string | null;
    /**
     * | The ID of the default role.|
     */
    defaultRoleId?: string | null;
    /**
     * | User's email|| Max length: 255
     */
    email?: string | null;
    /**
     * | User's first name|| Max length: 255
     */
    firstName?: string | null;
    /**
     * BIM 360 user ID
     */
    id?: Guid | null;
    /**
     * | URL for user's profile image|| Max length: 255
     */
    imageUrl?: string | null;
    /**
     * | Industry information for user|| Max length: 255
     */
    industry?: string | null;
    /**
     * | User's job title|| Max length: 255
     */
    jobTitle?: string | null;
    /**
     * | User's last name|| Max length: 255
     */
    lastName?: string | null;
    /**
     * The time and date of the user's most recent sign-in, in ISO 8601 format (``YYYY-MM-DDThh:mm:ss.sssZ``). Note t
     */
    lastSignIn?: Date | null;
    /**
     * | Default display name|| Max length: 255
     */
    name?: string | null;
    /**
     * | Nick name for user|| Max length: 255
     */
    nickname?: string | null;
    /**
     * | Contact phone number for the user|| Max length: 255
     */
    phone?: string | null;
    /**
     * | Postal code for the user's location|| Max length: 255
     */
    postalCode?: string | null;
    /**
     * | The role of the user in the account|| Possible values:| ``account_admin``: user has BIM 360 account administration access| ``account_user`` : normal project user| ``project_admin``: user has Project administration privileges at a service level
     */
    role?: string | null;
    /**
     * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    stateOrProvince?: UsersGetResponse_state_or_province | null;
    /**
     * | Status of the user in the system|| Possible values:| ``active``: user is active and has logged into the system sucessfully| ``inactive``: user is disabled| ``pending``: user is invited and is yet to accept the invitation| ``not_invited``: user is not invited
     */
    status?: string | null;
    /**
     * | User's Autodesk ID
     */
    uid?: string | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    updatedAt?: Date | null;
}
export type UsersGetResponse_country = (typeof UsersGetResponse_countryObject)[keyof typeof UsersGetResponse_countryObject];
export type UsersGetResponse_state_or_province = (typeof UsersGetResponse_state_or_provinceObject)[keyof typeof UsersGetResponse_state_or_provinceObject];
export interface UsersPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * | Short description about the user|| Max length: 255
     */
    aboutMe?: string | null;
    /**
     * | User's address line 1|| Max length: 255
     */
    addressLine1?: string | null;
    /**
     * | User's address line 2|| Max length: 255
     */
    addressLine2?: string | null;
    /**
     * | City in which user is located|| Max length: 255
     */
    city?: string | null;
    /**
     * | Company information from the Autodesk user profile|| Max length: 255|| Note that this is different from company in BIM 360.
     */
    company?: string | null;
    /**
     * The user's default company ID in BIM 360
     */
    companyId?: Guid | null;
    /**
     * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    country?: UsersPostRequestBody_country | null;
    /**
     * | The user's default role|| Max length: 255
     */
    defaultRole?: string | null;
    /**
     * | User's email|| Max length: 255
     */
    email?: string | null;
    /**
     * | User's first name|| Max length: 255
     */
    firstName?: string | null;
    /**
     * | URL for user's profile image|| Max length: 255
     */
    imageUrl?: string | null;
    /**
     * | Industry information for user|| Max length: 255
     */
    industry?: string | null;
    /**
     * | User's job title|| Max length: 255
     */
    jobTitle?: string | null;
    /**
     * | User's last name|| Max length: 255
     */
    lastName?: string | null;
    /**
     * | Nick name for user|| Max length: 255
     */
    nickname?: string | null;
    /**
     * | Contact phone number for the user|| Max length: 255
     */
    phone?: string | null;
    /**
     * | Postal code for the user's location|| Max length: 255
     */
    postalCode?: string | null;
    /**
     * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    stateOrProvince?: UsersPostRequestBody_state_or_province | null;
}
export type UsersPostRequestBody_country = (typeof UsersPostRequestBody_countryObject)[keyof typeof UsersPostRequestBody_countryObject];
export type UsersPostRequestBody_state_or_province = (typeof UsersPostRequestBody_state_or_provinceObject)[keyof typeof UsersPostRequestBody_state_or_provinceObject];
export interface UsersPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * | Short description about the user|
     */
    aboutMe?: string | null;
    /**
     * Account ID
     */
    accountId?: Guid | null;
    /**
     * | User's address line 1|| Max length: 255
     */
    addressLine1?: string | null;
    /**
     * | User's address line 2|| Max length: 255
     */
    addressLine2?: string | null;
    /**
     * | City in which user is located|| Max length: 255
     */
    city?: string | null;
    /**
     * | Company information from the Autodesk user profile|| Max length: 255|| Note that this is different from company in BIM 360.
     */
    company?: string | null;
    /**
     * The user's default company ID in BIM 360
     */
    companyId?: Guid | null;
    /**
     * The name of the user's default company name in BIM 360
     */
    companyName?: string | null;
    /**
     * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    country?: UsersPostResponse_country | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    createdAt?: Date | null;
    /**
     * | The user's default role.|
     */
    defaultRole?: string | null;
    /**
     * | The ID of the default role.|| Max length: 255
     */
    defaultRoleId?: string | null;
    /**
     * | User's email|| Max length: 255
     */
    email?: string | null;
    /**
     * | User's first name|| Max length: 255
     */
    firstName?: string | null;
    /**
     * User ID
     */
    id?: Guid | null;
    /**
     * | URL for user's profile image|| Max length: 255
     */
    imageUrl?: string | null;
    /**
     * | Industry information for user|| Max length: 255
     */
    industry?: string | null;
    /**
     * | User's job title|| Max length: 255
     */
    jobTitle?: string | null;
    /**
     * | User's last name|| Max length: 255
     */
    lastName?: string | null;
    /**
     * The time and date of the user's most recent sign-in, in ISO 8601 format (``YYYY-MM-DDThh:mm:ss.sssZ``). Note t
     */
    lastSignIn?: Date | null;
    /**
     * | Default display name|| Max length: 255
     */
    name?: string | null;
    /**
     * | Nick name for user|| Max length: 255
     */
    nickname?: string | null;
    /**
     * | Contact phone number for the user|| Max length: 255
     */
    phone?: string | null;
    /**
     * | Postal code for the user's location|| Max length: 255
     */
    postalCode?: string | null;
    /**
     * | The role of the user in the account|| New user should be ``account_user`` only.
     */
    role?: string | null;
    /**
     * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    stateOrProvince?: UsersPostResponse_state_or_province | null;
    /**
     * | Status of the user in the system|| A new account user is always ``not_invited``.
     */
    status?: string | null;
    /**
     * | User's Autodesk ID
     */
    uid?: string | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    updatedAt?: Date | null;
}
export type UsersPostResponse_country = (typeof UsersPostResponse_countryObject)[keyof typeof UsersPostResponse_countryObject];
export type UsersPostResponse_state_or_province = (typeof UsersPostResponse_state_or_provinceObject)[keyof typeof UsersPostResponse_state_or_provinceObject];
/**
 * Builds and executes requests for operations under /hq/v1/accounts/{account_id}/users
 */
export interface UsersRequestBuilder extends BaseRequestBuilder<UsersRequestBuilder> {
    /**
     * The import property
     */
    get importEscaped(): ImportRequestBuilder;
    /**
     * The search property
     */
    get search(): SearchRequestBuilder;
    /**
     * Gets an item from the Autodesk.ACC.AccountAdmin.hq.v1.accounts.item.users.item collection
     * @param user_id User ID
     * @returns {WithUser_ItemRequestBuilder}
     */
     byUser_id(user_id: Guid) : WithUser_ItemRequestBuilder;
    /**
     * Query all the users in a specific BIM 360 account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UsersGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<UsersRequestBuilderGetQueryParameters> | undefined) : Promise<UsersGetResponse | undefined>;
    /**
     * Create a new user in the BIM 360 member directory.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UsersPostResponse>}
     */
     post(body: UsersPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UsersPostResponse | undefined>;
    /**
     * Query all the users in a specific BIM 360 account.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UsersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new user in the BIM 360 member directory.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UsersPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Query all the users in a specific BIM 360 account.
 */
export interface UsersRequestBuilderGetQueryParameters {
    /**
     * | Comma-separated fields to include in response|| ``id`` will always be returned| Invalid fields will be ignored
     */
    field?: string;
    /**
     * | Response array's size| Default value: ``10``| Max limit: ``100``
     */
    limit?: number;
    /**
     * | Offset of response array| Default value: ``0``
     */
    offset?: number;
    /**
     * | Comma-separated fields to sort by in ascending order|| Prepending a field with ``-`` sorts in descending order| Invalid fields and whitespaces will be ignored
     */
    sort?: string;
}
/**
 * Uri template for the request builder.
 */
export const UsersRequestBuilderUriTemplate = "{+baseurl}/hq/v1/accounts/{account_id}/users{?field*,limit*,offset*,sort*}";
/**
 * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const UsersGetResponse_countryObject = {
    Country: "country",
} as const;
/**
 * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const UsersGetResponse_state_or_provinceObject = {
    State_or_province: "state_or_province",
    Country: "country",
} as const;
/**
 * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const UsersPostRequestBody_countryObject = {
    Country: "country",
} as const;
/**
 * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const UsersPostRequestBody_state_or_provinceObject = {
    State_or_province: "state_or_province",
    Country: "country",
} as const;
/**
 * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const UsersPostResponse_countryObject = {
    Country: "country",
} as const;
/**
 * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const UsersPostResponse_state_or_provinceObject = {
    State_or_province: "state_or_province",
    Country: "country",
} as const;
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UsersRequestBuilderNavigationMetadata: Record<Exclude<keyof UsersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byUser_id: {
        requestsMetadata: WithUser_ItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["user_id"],
    },
    importEscaped: {
        requestsMetadata: ImportRequestBuilderRequestsMetadata,
    },
    search: {
        requestsMetadata: SearchRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UsersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createUsersGetResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createUsersPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUsersPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
