/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportPostRequestBody}
 */
// @ts-ignore
export function createImportPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportPostResponse_failure_items}
 */
// @ts-ignore
export function createImportPostResponse_failure_itemsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportPostResponse_failure_items;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportPostResponse_success_items}
 */
// @ts-ignore
export function createImportPostResponse_success_itemsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportPostResponse_success_items;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportPostResponse}
 */
// @ts-ignore
export function createImportPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportPostResponse;
}
/**
 * The deserialization information for the current model
 * @param ImportPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImportPostRequestBody(importPostRequestBody: Partial<ImportPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { importPostRequestBody.aboutMe = n.getStringValue(); },
        "address_line_1": n => { importPostRequestBody.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { importPostRequestBody.addressLine2 = n.getStringValue(); },
        "city": n => { importPostRequestBody.city = n.getStringValue(); },
        "company": n => { importPostRequestBody.company = n.getStringValue(); },
        "company_id": n => { importPostRequestBody.companyId = n.getGuidValue(); },
        "country": n => { importPostRequestBody.country = n.getStringValue(); },
        "default_role": n => { importPostRequestBody.defaultRole = n.getStringValue(); },
        "email": n => { importPostRequestBody.email = n.getStringValue(); },
        "first_name": n => { importPostRequestBody.firstName = n.getStringValue(); },
        "image_url": n => { importPostRequestBody.imageUrl = n.getStringValue(); },
        "industry": n => { importPostRequestBody.industry = n.getStringValue(); },
        "job_title": n => { importPostRequestBody.jobTitle = n.getStringValue(); },
        "last_name": n => { importPostRequestBody.lastName = n.getStringValue(); },
        "nickname": n => { importPostRequestBody.nickname = n.getStringValue(); },
        "phone": n => { importPostRequestBody.phone = n.getStringValue(); },
        "postal_code": n => { importPostRequestBody.postalCode = n.getStringValue(); },
        "state_or_province": n => { importPostRequestBody.stateOrProvince = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ImportPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImportPostResponse(importPostResponse: Partial<ImportPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "failure": n => { importPostResponse.failure = n.getNumberValue(); },
        "failure_items": n => { importPostResponse.failureItems = n.getCollectionOfObjectValues<ImportPostResponse_failure_items>(createImportPostResponse_failure_itemsFromDiscriminatorValue); },
        "success": n => { importPostResponse.success = n.getNumberValue(); },
        "success_items": n => { importPostResponse.successItems = n.getCollectionOfObjectValues<ImportPostResponse_success_items>(createImportPostResponse_success_itemsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ImportPostResponse_failure_items The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImportPostResponse_failure_items(importPostResponse_failure_items: Partial<ImportPostResponse_failure_items> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param ImportPostResponse_success_items The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImportPostResponse_success_items(importPostResponse_success_items: Partial<ImportPostResponse_success_items> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { importPostResponse_success_items.aboutMe = n.getStringValue(); },
        "account_id": n => { importPostResponse_success_items.accountId = n.getStringValue(); },
        "address_line_1": n => { importPostResponse_success_items.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { importPostResponse_success_items.addressLine2 = n.getStringValue(); },
        "city": n => { importPostResponse_success_items.city = n.getStringValue(); },
        "company": n => { importPostResponse_success_items.company = n.getStringValue(); },
        "company_id": n => { importPostResponse_success_items.companyId = n.getStringValue(); },
        "company_name": n => { importPostResponse_success_items.companyName = n.getStringValue(); },
        "country": n => { importPostResponse_success_items.country = n.getStringValue(); },
        "created_at": n => { importPostResponse_success_items.createdAt = n.getStringValue(); },
        "email": n => { importPostResponse_success_items.email = n.getStringValue(); },
        "first_name": n => { importPostResponse_success_items.firstName = n.getStringValue(); },
        "id": n => { importPostResponse_success_items.id = n.getStringValue(); },
        "image_url": n => { importPostResponse_success_items.imageUrl = n.getStringValue(); },
        "industry": n => { importPostResponse_success_items.industry = n.getStringValue(); },
        "job_title": n => { importPostResponse_success_items.jobTitle = n.getStringValue(); },
        "last_name": n => { importPostResponse_success_items.lastName = n.getStringValue(); },
        "last_sign_in": n => { importPostResponse_success_items.lastSignIn = n.getStringValue(); },
        "name": n => { importPostResponse_success_items.name = n.getStringValue(); },
        "nickname": n => { importPostResponse_success_items.nickname = n.getStringValue(); },
        "phone": n => { importPostResponse_success_items.phone = n.getStringValue(); },
        "postal_code": n => { importPostResponse_success_items.postalCode = n.getStringValue(); },
        "role": n => { importPostResponse_success_items.role = n.getStringValue(); },
        "state_or_province": n => { importPostResponse_success_items.stateOrProvince = n.getStringValue(); },
        "status": n => { importPostResponse_success_items.status = n.getStringValue(); },
        "uid": n => { importPostResponse_success_items.uid = n.getStringValue(); },
        "updated_at": n => { importPostResponse_success_items.updatedAt = n.getStringValue(); },
    }
}
export interface ImportPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * | Short description about the user | | Max length: 255
     */
    aboutMe?: string | null;
    /**
     * | User's address line 1 | | Max length: 255
     */
    addressLine1?: string | null;
    /**
     * | User's address line 2 | | Max length: 255
     */
    addressLine2?: string | null;
    /**
     * | City in which user is located | | Max length: 255
     */
    city?: string | null;
    /**
     * | Company information from the Autodesk user profile | | Max length: 255 | | Note that this is different from company in BIM 360.
     */
    company?: string | null;
    /**
     * The user's default company ID in BIM 360
     */
    companyId?: Guid | null;
    /**
     * | Country for this user | | Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    country?: string | null;
    /**
     * | The user's default role | | Max length: 255
     */
    defaultRole?: string | null;
    /**
     * | User's email | | Max length: 255
     */
    email?: string | null;
    /**
     * | User's first name | | Max length: 255
     */
    firstName?: string | null;
    /**
     * | URL for user's profile image | | Max length: 255
     */
    imageUrl?: string | null;
    /**
     * | Industry information for user | | Max length: 255
     */
    industry?: string | null;
    /**
     * | User's job title | | Max length: 255
     */
    jobTitle?: string | null;
    /**
     * | User's last name | | Max length: 255
     */
    lastName?: string | null;
    /**
     * | Nick name for user | | Max length: 255
     */
    nickname?: string | null;
    /**
     * | Contact phone number for the user | | Max length: 255
     */
    phone?: string | null;
    /**
     * | Postal code for the user's location | | Max length: 255
     */
    postalCode?: string | null;
    /**
     * | State or province in which user is located | | Max length: 255 | | Note that the ``state_or_province`` value depends on the selected ``country`` value; see the valid values in the ``state_or_province`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    stateOrProvince?: string | null;
}
export interface ImportPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * Import failure company count
     */
    failure?: number | null;
    /**
     * Array of `user objects </en/docs/bim360/v1/overview/field-guide>`_ that failed to import, along with content and error information
     */
    failureItems?: ImportPostResponse_failure_items[] | null;
    /**
     * Import success company count
     */
    success?: number | null;
    /**
     * Array of `user objects </en/docs/bim360/v1/overview/field-guide>`_ that were successfully imported
     */
    successItems?: ImportPostResponse_success_items[] | null;
}
export interface ImportPostResponse_failure_items extends AdditionalDataHolder, Parsable {
}
export interface ImportPostResponse_success_items extends AdditionalDataHolder, Parsable {
    /**
     * The about_me property
     */
    aboutMe?: string | null;
    /**
     * The account_id property
     */
    accountId?: string | null;
    /**
     * The address_line_1 property
     */
    addressLine1?: string | null;
    /**
     * The address_line_2 property
     */
    addressLine2?: string | null;
    /**
     * The city property
     */
    city?: string | null;
    /**
     * The company property
     */
    company?: string | null;
    /**
     * The company_id property
     */
    companyId?: string | null;
    /**
     * The company_name property
     */
    companyName?: string | null;
    /**
     * The country property
     */
    country?: string | null;
    /**
     * The created_at property
     */
    createdAt?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The first_name property
     */
    firstName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The image_url property
     */
    imageUrl?: string | null;
    /**
     * The industry property
     */
    industry?: string | null;
    /**
     * The job_title property
     */
    jobTitle?: string | null;
    /**
     * The last_name property
     */
    lastName?: string | null;
    /**
     * The last_sign_in property
     */
    lastSignIn?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The nickname property
     */
    nickname?: string | null;
    /**
     * The phone property
     */
    phone?: string | null;
    /**
     * The postal_code property
     */
    postalCode?: string | null;
    /**
     * The role property
     */
    role?: string | null;
    /**
     * The state_or_province property
     */
    stateOrProvince?: string | null;
    /**
     * The status property
     */
    status?: string | null;
    /**
     * The uid property
     */
    uid?: string | null;
    /**
     * The updated_at property
     */
    updatedAt?: string | null;
}
/**
 * Builds and executes requests for operations under /hq/v1/accounts/{account_id}/users/import
 */
export interface ImportRequestBuilder extends BaseRequestBuilder<ImportRequestBuilder> {
    /**
     * Bulk import users to the master member directory in a BIM 360 account. (50 users maximum can be included in each call.)
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ImportPostResponse>}
     */
     post(body: ImportPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ImportPostResponse | undefined>;
    /**
     * Bulk import users to the master member directory in a BIM 360 account. (50 users maximum can be included in each call.)
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ImportPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param ImportPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImportPostRequestBody(writer: SerializationWriter, importPostRequestBody: Partial<ImportPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!importPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", importPostRequestBody.aboutMe);
    writer.writeStringValue("address_line_1", importPostRequestBody.addressLine1);
    writer.writeStringValue("address_line_2", importPostRequestBody.addressLine2);
    writer.writeStringValue("city", importPostRequestBody.city);
    writer.writeStringValue("company", importPostRequestBody.company);
    writer.writeGuidValue("company_id", importPostRequestBody.companyId);
    writer.writeStringValue("country", importPostRequestBody.country);
    writer.writeStringValue("default_role", importPostRequestBody.defaultRole);
    writer.writeStringValue("email", importPostRequestBody.email);
    writer.writeStringValue("first_name", importPostRequestBody.firstName);
    writer.writeStringValue("image_url", importPostRequestBody.imageUrl);
    writer.writeStringValue("industry", importPostRequestBody.industry);
    writer.writeStringValue("job_title", importPostRequestBody.jobTitle);
    writer.writeStringValue("last_name", importPostRequestBody.lastName);
    writer.writeStringValue("nickname", importPostRequestBody.nickname);
    writer.writeStringValue("phone", importPostRequestBody.phone);
    writer.writeStringValue("postal_code", importPostRequestBody.postalCode);
    writer.writeStringValue("state_or_province", importPostRequestBody.stateOrProvince);
    writer.writeAdditionalData(importPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param ImportPostResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImportPostResponse(writer: SerializationWriter, importPostResponse: Partial<ImportPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!importPostResponse || isSerializingDerivedType) { return; }
    writer.writeNumberValue("failure", importPostResponse.failure);
    writer.writeCollectionOfObjectValues<ImportPostResponse_failure_items>("failure_items", importPostResponse.failureItems, serializeImportPostResponse_failure_items);
    writer.writeNumberValue("success", importPostResponse.success);
    writer.writeCollectionOfObjectValues<ImportPostResponse_success_items>("success_items", importPostResponse.successItems, serializeImportPostResponse_success_items);
    writer.writeAdditionalData(importPostResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param ImportPostResponse_failure_items The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImportPostResponse_failure_items(writer: SerializationWriter, importPostResponse_failure_items: Partial<ImportPostResponse_failure_items> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!importPostResponse_failure_items || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(importPostResponse_failure_items.additionalData);
}
/**
 * Serializes information the current object
 * @param ImportPostResponse_success_items The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImportPostResponse_success_items(writer: SerializationWriter, importPostResponse_success_items: Partial<ImportPostResponse_success_items> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!importPostResponse_success_items || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", importPostResponse_success_items.aboutMe);
    writer.writeStringValue("account_id", importPostResponse_success_items.accountId);
    writer.writeStringValue("address_line_1", importPostResponse_success_items.addressLine1);
    writer.writeStringValue("address_line_2", importPostResponse_success_items.addressLine2);
    writer.writeStringValue("city", importPostResponse_success_items.city);
    writer.writeStringValue("company", importPostResponse_success_items.company);
    writer.writeStringValue("company_id", importPostResponse_success_items.companyId);
    writer.writeStringValue("company_name", importPostResponse_success_items.companyName);
    writer.writeStringValue("country", importPostResponse_success_items.country);
    writer.writeStringValue("created_at", importPostResponse_success_items.createdAt);
    writer.writeStringValue("email", importPostResponse_success_items.email);
    writer.writeStringValue("first_name", importPostResponse_success_items.firstName);
    writer.writeStringValue("id", importPostResponse_success_items.id);
    writer.writeStringValue("image_url", importPostResponse_success_items.imageUrl);
    writer.writeStringValue("industry", importPostResponse_success_items.industry);
    writer.writeStringValue("job_title", importPostResponse_success_items.jobTitle);
    writer.writeStringValue("last_name", importPostResponse_success_items.lastName);
    writer.writeStringValue("last_sign_in", importPostResponse_success_items.lastSignIn);
    writer.writeStringValue("name", importPostResponse_success_items.name);
    writer.writeStringValue("nickname", importPostResponse_success_items.nickname);
    writer.writeStringValue("phone", importPostResponse_success_items.phone);
    writer.writeStringValue("postal_code", importPostResponse_success_items.postalCode);
    writer.writeStringValue("role", importPostResponse_success_items.role);
    writer.writeStringValue("state_or_province", importPostResponse_success_items.stateOrProvince);
    writer.writeStringValue("status", importPostResponse_success_items.status);
    writer.writeStringValue("uid", importPostResponse_success_items.uid);
    writer.writeStringValue("updated_at", importPostResponse_success_items.updatedAt);
    writer.writeAdditionalData(importPostResponse_success_items.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const ImportRequestBuilderUriTemplate = "{+baseurl}/hq/v1/accounts/{account_id}/users/import";
/**
 * Metadata for all the requests in the request builder.
 */
export const ImportRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ImportRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createImportPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeImportPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
