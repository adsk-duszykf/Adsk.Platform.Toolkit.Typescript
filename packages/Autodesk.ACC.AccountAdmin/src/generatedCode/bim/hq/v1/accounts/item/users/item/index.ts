/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUser_GetResponse}
 */
// @ts-ignore
export function createWithUser_GetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUser_GetResponse;
}
/**
 * The deserialization information for the current model
 * @param WithUser_GetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUser_GetResponse(withUser_GetResponse: Partial<WithUser_GetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "about_me": n => { withUser_GetResponse.aboutMe = n.getStringValue(); },
        "account_id": n => { withUser_GetResponse.accountId = n.getGuidValue(); },
        "address_line_1": n => { withUser_GetResponse.addressLine1 = n.getStringValue(); },
        "address_line_2": n => { withUser_GetResponse.addressLine2 = n.getStringValue(); },
        "city": n => { withUser_GetResponse.city = n.getStringValue(); },
        "company": n => { withUser_GetResponse.company = n.getStringValue(); },
        "company_id": n => { withUser_GetResponse.companyId = n.getGuidValue(); },
        "company_name": n => { withUser_GetResponse.companyName = n.getStringValue(); },
        "country": n => { withUser_GetResponse.country = n.getEnumValue<WithUser_GetResponse_country>(WithUser_GetResponse_countryObject); },
        "created_at": n => { withUser_GetResponse.createdAt = n.getDateValue(); },
        "default_role": n => { withUser_GetResponse.defaultRole = n.getStringValue(); },
        "default_role_id": n => { withUser_GetResponse.defaultRoleId = n.getStringValue(); },
        "email": n => { withUser_GetResponse.email = n.getStringValue(); },
        "first_name": n => { withUser_GetResponse.firstName = n.getStringValue(); },
        "id": n => { withUser_GetResponse.id = n.getGuidValue(); },
        "image_url": n => { withUser_GetResponse.imageUrl = n.getStringValue(); },
        "industry": n => { withUser_GetResponse.industry = n.getStringValue(); },
        "job_title": n => { withUser_GetResponse.jobTitle = n.getStringValue(); },
        "last_name": n => { withUser_GetResponse.lastName = n.getStringValue(); },
        "last_sign_in": n => { withUser_GetResponse.lastSignIn = n.getDateValue(); },
        "name": n => { withUser_GetResponse.name = n.getStringValue(); },
        "nickname": n => { withUser_GetResponse.nickname = n.getStringValue(); },
        "phone": n => { withUser_GetResponse.phone = n.getStringValue(); },
        "postal_code": n => { withUser_GetResponse.postalCode = n.getStringValue(); },
        "role": n => { withUser_GetResponse.role = n.getStringValue(); },
        "state_or_province": n => { withUser_GetResponse.stateOrProvince = n.getEnumValue<WithUser_GetResponse_state_or_province>(WithUser_GetResponse_state_or_provinceObject); },
        "status": n => { withUser_GetResponse.status = n.getStringValue(); },
        "uid": n => { withUser_GetResponse.uid = n.getStringValue(); },
        "updated_at": n => { withUser_GetResponse.updatedAt = n.getDateValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUser_GetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUser_GetResponse(writer: SerializationWriter, withUser_GetResponse: Partial<WithUser_GetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUser_GetResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("about_me", withUser_GetResponse.aboutMe);
    writer.writeGuidValue("account_id", withUser_GetResponse.accountId);
    writer.writeStringValue("address_line_1", withUser_GetResponse.addressLine1);
    writer.writeStringValue("address_line_2", withUser_GetResponse.addressLine2);
    writer.writeStringValue("city", withUser_GetResponse.city);
    writer.writeStringValue("company", withUser_GetResponse.company);
    writer.writeGuidValue("company_id", withUser_GetResponse.companyId);
    writer.writeStringValue("company_name", withUser_GetResponse.companyName);
    writer.writeEnumValue<WithUser_GetResponse_country>("country", withUser_GetResponse.country);
    writer.writeDateValue("created_at", withUser_GetResponse.createdAt);
    writer.writeStringValue("default_role", withUser_GetResponse.defaultRole);
    writer.writeStringValue("default_role_id", withUser_GetResponse.defaultRoleId);
    writer.writeStringValue("email", withUser_GetResponse.email);
    writer.writeStringValue("first_name", withUser_GetResponse.firstName);
    writer.writeGuidValue("id", withUser_GetResponse.id);
    writer.writeStringValue("image_url", withUser_GetResponse.imageUrl);
    writer.writeStringValue("industry", withUser_GetResponse.industry);
    writer.writeStringValue("job_title", withUser_GetResponse.jobTitle);
    writer.writeStringValue("last_name", withUser_GetResponse.lastName);
    writer.writeDateValue("last_sign_in", withUser_GetResponse.lastSignIn);
    writer.writeStringValue("name", withUser_GetResponse.name);
    writer.writeStringValue("nickname", withUser_GetResponse.nickname);
    writer.writeStringValue("phone", withUser_GetResponse.phone);
    writer.writeStringValue("postal_code", withUser_GetResponse.postalCode);
    writer.writeStringValue("role", withUser_GetResponse.role);
    writer.writeEnumValue<WithUser_GetResponse_state_or_province>("state_or_province", withUser_GetResponse.stateOrProvince);
    writer.writeStringValue("status", withUser_GetResponse.status);
    writer.writeStringValue("uid", withUser_GetResponse.uid);
    writer.writeDateValue("updated_at", withUser_GetResponse.updatedAt);
    writer.writeAdditionalData(withUser_GetResponse.additionalData);
}
export interface WithUser_GetResponse extends AdditionalDataHolder, Parsable {
    /**
     * | Short description about the user|| Max length: 255
     */
    aboutMe?: string | null;
    /**
     * Account ID
     */
    accountId?: Guid | null;
    /**
     * | User's address line 1|| Max length: 255
     */
    addressLine1?: string | null;
    /**
     * | User's address line 2|| Max length: 255
     */
    addressLine2?: string | null;
    /**
     * | City in which user is located|| Max length: 255
     */
    city?: string | null;
    /**
     * | Company information from the Autodesk user profile|| Max length: 255|| Note that this is different from company in BIM 360.
     */
    company?: string | null;
    /**
     * The user's default company ID in BIM 360
     */
    companyId?: Guid | null;
    /**
     * The name of the user's default company name in BIM 360
     */
    companyName?: string | null;
    /**
     * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    country?: WithUser_GetResponse_country | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    createdAt?: Date | null;
    /**
     * | The user's default role.|
     */
    defaultRole?: string | null;
    /**
     * | The ID of the default role.|
     */
    defaultRoleId?: string | null;
    /**
     * | User's email|| Max length: 255
     */
    email?: string | null;
    /**
     * | User's first name|| Max length: 255
     */
    firstName?: string | null;
    /**
     * User ID
     */
    id?: Guid | null;
    /**
     * | URL for user's profile image|| Max length: 255
     */
    imageUrl?: string | null;
    /**
     * | Industry information for user|| Max length: 255
     */
    industry?: string | null;
    /**
     * | User's job title|| Max length: 255
     */
    jobTitle?: string | null;
    /**
     * | User's last name|| Max length: 255
     */
    lastName?: string | null;
    /**
     * The time and date of the user's most recent sign-in, in ISO 8601 format (``YYYY-MM-DDThh:mm:ss.sssZ``). Note t
     */
    lastSignIn?: Date | null;
    /**
     * | Default display name|| Max length: 255
     */
    name?: string | null;
    /**
     * | Nick name for user|| Max length: 255
     */
    nickname?: string | null;
    /**
     * | Contact phone number for the user|| Max length: 255
     */
    phone?: string | null;
    /**
     * | Postal code for the user's location|| Max length: 255
     */
    postalCode?: string | null;
    /**
     * | The role of the user in the account|| Possible values:| ``account_admin``: user has BIM 360 account administration access| ``account_user`` : normal project user| ``project_admin``: user has Project administration privileges at a service level
     */
    role?: string | null;
    /**
     * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
     */
    stateOrProvince?: WithUser_GetResponse_state_or_province | null;
    /**
     * | Status of the user in the system|| Possible values:| ``active``: user is active and has logged into the system sucessfully| ``inactive``: user is disabled| ``pending``: user is invited and is yet to accept the invitation| ``not_invited``: user is not invited
     */
    status?: string | null;
    /**
     * | User's Autodesk ID
     */
    uid?: string | null;
    /**
     * | ``YYYY-MM-DDThh:mm:ss.sssZ`` format
     */
    updatedAt?: Date | null;
}
export type WithUser_GetResponse_country = (typeof WithUser_GetResponse_countryObject)[keyof typeof WithUser_GetResponse_countryObject];
export type WithUser_GetResponse_state_or_province = (typeof WithUser_GetResponse_state_or_provinceObject)[keyof typeof WithUser_GetResponse_state_or_provinceObject];
/**
 * Builds and executes requests for operations under /hq/v1/accounts/{account_id}/users/{user_id}
 */
export interface WithUser_ItemRequestBuilder extends BaseRequestBuilder<WithUser_ItemRequestBuilder> {
    /**
     * Query the details of a specific user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithUser_GetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithUser_GetResponse | undefined>;
    /**
     * Query the details of a specific user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithUser_ItemRequestBuilderUriTemplate = "{+baseurl}/hq/v1/accounts/{account_id}/users/{user_id}";
/**
 * | Country for this user|| Refer to the ``country`` list in the `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const WithUser_GetResponse_countryObject = {
    Country: "country",
} as const;
/**
 * | State or province in which user is located|| Max length: 255|| Note that the ``state_or_province`` value depends on the selected ``country`` value;see the valid values in the ``state_or_province`` list inthe `Parameters </en/docs/bim360/v1/overview/parameters>`_ guide.
 */
export const WithUser_GetResponse_state_or_provinceObject = {
    State_or_province: "state_or_province",
    Country: "country",
} as const;
/**
 * Metadata for all the requests in the request builder.
 */
export const WithUser_ItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: WithUser_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithUser_GetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
