/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserGetResponse_accessLevels}
 */
// @ts-ignore
export function createWithUserGetResponse_accessLevelsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserGetResponse_accessLevels;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserGetResponse_phone}
 */
// @ts-ignore
export function createWithUserGetResponse_phoneFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserGetResponse_phone;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserGetResponse_products}
 */
// @ts-ignore
export function createWithUserGetResponse_productsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserGetResponse_products;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserGetResponse_roles}
 */
// @ts-ignore
export function createWithUserGetResponse_rolesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserGetResponse_roles;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserGetResponse}
 */
// @ts-ignore
export function createWithUserGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchRequestBody_products}
 */
// @ts-ignore
export function createWithUserPatchRequestBody_productsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchRequestBody_products;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchRequestBody}
 */
// @ts-ignore
export function createWithUserPatchRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchResponse_accessLevels}
 */
// @ts-ignore
export function createWithUserPatchResponse_accessLevelsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchResponse_accessLevels;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchResponse_phone}
 */
// @ts-ignore
export function createWithUserPatchResponse_phoneFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchResponse_phone;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchResponse_products}
 */
// @ts-ignore
export function createWithUserPatchResponse_productsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchResponse_products;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchResponse_roles}
 */
// @ts-ignore
export function createWithUserPatchResponse_rolesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchResponse_roles;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithUserPatchResponse}
 */
// @ts-ignore
export function createWithUserPatchResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithUserPatchResponse;
}
/**
 * The deserialization information for the current model
 * @param WithUserGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserGetResponse(withUserGetResponse: Partial<WithUserGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aboutMe": n => { withUserGetResponse.aboutMe = n.getStringValue(); },
        "accessLevels": n => { withUserGetResponse.accessLevels = n.getObjectValue<WithUserGetResponse_accessLevels>(createWithUserGetResponse_accessLevelsFromDiscriminatorValue); },
        "addedOn": n => { withUserGetResponse.addedOn = n.getDateValue(); },
        "addressLine1": n => { withUserGetResponse.addressLine1 = n.getStringValue(); },
        "addressLine2": n => { withUserGetResponse.addressLine2 = n.getStringValue(); },
        "analyticsId": n => { withUserGetResponse.analyticsId = n.getStringValue(); },
        "autodeskId": n => { withUserGetResponse.autodeskId = n.getStringValue(); },
        "city": n => { withUserGetResponse.city = n.getStringValue(); },
        "companyId": n => { withUserGetResponse.companyId = n.getStringValue(); },
        "companyName": n => { withUserGetResponse.companyName = n.getStringValue(); },
        "country": n => { withUserGetResponse.country = n.getStringValue(); },
        "email": n => { withUserGetResponse.email = n.getStringValue(); },
        "firstName": n => { withUserGetResponse.firstName = n.getStringValue(); },
        "id": n => { withUserGetResponse.id = n.getGuidValue(); },
        "imageUrl": n => { withUserGetResponse.imageUrl = n.getStringValue(); },
        "industry": n => { withUserGetResponse.industry = n.getStringValue(); },
        "jobTitle": n => { withUserGetResponse.jobTitle = n.getStringValue(); },
        "lastName": n => { withUserGetResponse.lastName = n.getStringValue(); },
        "name": n => { withUserGetResponse.name = n.getStringValue(); },
        "phone": n => { withUserGetResponse.phone = n.getObjectValue<WithUserGetResponse_phone>(createWithUserGetResponse_phoneFromDiscriminatorValue); },
        "postalCode": n => { withUserGetResponse.postalCode = n.getStringValue(); },
        "products": n => { withUserGetResponse.products = n.getCollectionOfObjectValues<WithUserGetResponse_products>(createWithUserGetResponse_productsFromDiscriminatorValue); },
        "roleIds": n => { withUserGetResponse.roleIds = n.getCollectionOfPrimitiveValues<string>(); },
        "roles": n => { withUserGetResponse.roles = n.getCollectionOfObjectValues<WithUserGetResponse_roles>(createWithUserGetResponse_rolesFromDiscriminatorValue); },
        "stateOrProvince": n => { withUserGetResponse.stateOrProvince = n.getStringValue(); },
        "status": n => { withUserGetResponse.status = n.getStringValue(); },
        "updatedAt": n => { withUserGetResponse.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserGetResponse_accessLevels The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserGetResponse_accessLevels(withUserGetResponse_accessLevels: Partial<WithUserGetResponse_accessLevels> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountAdmin": n => { withUserGetResponse_accessLevels.accountAdmin = n.getBooleanValue(); },
        "executive": n => { withUserGetResponse_accessLevels.executive = n.getBooleanValue(); },
        "projectAdmin": n => { withUserGetResponse_accessLevels.projectAdmin = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserGetResponse_phone The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserGetResponse_phone(withUserGetResponse_phone: Partial<WithUserGetResponse_phone> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "extension": n => { withUserGetResponse_phone.extension = n.getStringValue(); },
        "number": n => { withUserGetResponse_phone.number = n.getStringValue(); },
        "phoneType": n => { withUserGetResponse_phone.phoneType = n.getEnumValue<WithUserGetResponse_phone_phoneType>(WithUserGetResponse_phone_phoneTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserGetResponse_products The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserGetResponse_products(withUserGetResponse_products: Partial<WithUserGetResponse_products> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access": n => { withUserGetResponse_products.access = n.getEnumValue<WithUserGetResponse_products_access>(WithUserGetResponse_products_accessObject); },
        "key": n => { withUserGetResponse_products.key = n.getEnumValue<WithUserGetResponse_products_key>(WithUserGetResponse_products_keyObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserGetResponse_roles The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserGetResponse_roles(withUserGetResponse_roles: Partial<WithUserGetResponse_roles> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { withUserGetResponse_roles.id = n.getGuidValue(); },
        "name": n => { withUserGetResponse_roles.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchRequestBody(withUserPatchRequestBody: Partial<WithUserPatchRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "companyId": n => { withUserPatchRequestBody.companyId = n.getStringValue(); },
        "companyName": n => { withUserPatchRequestBody.companyName = n.getStringValue(); },
        "products": n => { withUserPatchRequestBody.products = n.getCollectionOfObjectValues<WithUserPatchRequestBody_products>(createWithUserPatchRequestBody_productsFromDiscriminatorValue); },
        "roleIds": n => { withUserPatchRequestBody.roleIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchRequestBody_products The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchRequestBody_products(withUserPatchRequestBody_products: Partial<WithUserPatchRequestBody_products> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access": n => { withUserPatchRequestBody_products.access = n.getEnumValue<WithUserPatchRequestBody_products_access>(WithUserPatchRequestBody_products_accessObject); },
        "key": n => { withUserPatchRequestBody_products.key = n.getEnumValue<WithUserPatchRequestBody_products_key>(WithUserPatchRequestBody_products_keyObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchResponse(withUserPatchResponse: Partial<WithUserPatchResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aboutMe": n => { withUserPatchResponse.aboutMe = n.getStringValue(); },
        "accessLevels": n => { withUserPatchResponse.accessLevels = n.getObjectValue<WithUserPatchResponse_accessLevels>(createWithUserPatchResponse_accessLevelsFromDiscriminatorValue); },
        "addedOn": n => { withUserPatchResponse.addedOn = n.getDateValue(); },
        "addressLine1": n => { withUserPatchResponse.addressLine1 = n.getStringValue(); },
        "addressLine2": n => { withUserPatchResponse.addressLine2 = n.getStringValue(); },
        "analyticsId": n => { withUserPatchResponse.analyticsId = n.getStringValue(); },
        "autodeskId": n => { withUserPatchResponse.autodeskId = n.getStringValue(); },
        "city": n => { withUserPatchResponse.city = n.getStringValue(); },
        "companyId": n => { withUserPatchResponse.companyId = n.getStringValue(); },
        "companyName": n => { withUserPatchResponse.companyName = n.getStringValue(); },
        "country": n => { withUserPatchResponse.country = n.getStringValue(); },
        "email": n => { withUserPatchResponse.email = n.getStringValue(); },
        "firstName": n => { withUserPatchResponse.firstName = n.getStringValue(); },
        "id": n => { withUserPatchResponse.id = n.getGuidValue(); },
        "imageUrl": n => { withUserPatchResponse.imageUrl = n.getStringValue(); },
        "industry": n => { withUserPatchResponse.industry = n.getStringValue(); },
        "jobId": n => { withUserPatchResponse.jobId = n.getGuidValue(); },
        "jobTitle": n => { withUserPatchResponse.jobTitle = n.getStringValue(); },
        "lastName": n => { withUserPatchResponse.lastName = n.getStringValue(); },
        "name": n => { withUserPatchResponse.name = n.getStringValue(); },
        "phone": n => { withUserPatchResponse.phone = n.getObjectValue<WithUserPatchResponse_phone>(createWithUserPatchResponse_phoneFromDiscriminatorValue); },
        "postalCode": n => { withUserPatchResponse.postalCode = n.getStringValue(); },
        "products": n => { withUserPatchResponse.products = n.getCollectionOfObjectValues<WithUserPatchResponse_products>(createWithUserPatchResponse_productsFromDiscriminatorValue); },
        "roleIds": n => { withUserPatchResponse.roleIds = n.getCollectionOfPrimitiveValues<string>(); },
        "roles": n => { withUserPatchResponse.roles = n.getCollectionOfObjectValues<WithUserPatchResponse_roles>(createWithUserPatchResponse_rolesFromDiscriminatorValue); },
        "stateOrProvince": n => { withUserPatchResponse.stateOrProvince = n.getStringValue(); },
        "status": n => { withUserPatchResponse.status = n.getStringValue(); },
        "updatedAt": n => { withUserPatchResponse.updatedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchResponse_accessLevels The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchResponse_accessLevels(withUserPatchResponse_accessLevels: Partial<WithUserPatchResponse_accessLevels> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountAdmin": n => { withUserPatchResponse_accessLevels.accountAdmin = n.getBooleanValue(); },
        "executive": n => { withUserPatchResponse_accessLevels.executive = n.getBooleanValue(); },
        "projectAdmin": n => { withUserPatchResponse_accessLevels.projectAdmin = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchResponse_phone The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchResponse_phone(withUserPatchResponse_phone: Partial<WithUserPatchResponse_phone> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "extension": n => { withUserPatchResponse_phone.extension = n.getStringValue(); },
        "number": n => { withUserPatchResponse_phone.number = n.getStringValue(); },
        "phoneType": n => { withUserPatchResponse_phone.phoneType = n.getEnumValue<WithUserPatchResponse_phone_phoneType>(WithUserPatchResponse_phone_phoneTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchResponse_products The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchResponse_products(withUserPatchResponse_products: Partial<WithUserPatchResponse_products> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "access": n => { withUserPatchResponse_products.access = n.getEnumValue<WithUserPatchResponse_products_access>(WithUserPatchResponse_products_accessObject); },
        "key": n => { withUserPatchResponse_products.key = n.getEnumValue<WithUserPatchResponse_products_key>(WithUserPatchResponse_products_keyObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithUserPatchResponse_roles The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithUserPatchResponse_roles(withUserPatchResponse_roles: Partial<WithUserPatchResponse_roles> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { withUserPatchResponse_roles.id = n.getGuidValue(); },
        "name": n => { withUserPatchResponse_roles.name = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserGetResponse(writer: SerializationWriter, withUserGetResponse: Partial<WithUserGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserGetResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("aboutMe", withUserGetResponse.aboutMe);
    writer.writeObjectValue<WithUserGetResponse_accessLevels>("accessLevels", withUserGetResponse.accessLevels, serializeWithUserGetResponse_accessLevels);
    writer.writeDateValue("addedOn", withUserGetResponse.addedOn);
    writer.writeStringValue("addressLine1", withUserGetResponse.addressLine1);
    writer.writeStringValue("addressLine2", withUserGetResponse.addressLine2);
    writer.writeStringValue("analyticsId", withUserGetResponse.analyticsId);
    writer.writeStringValue("autodeskId", withUserGetResponse.autodeskId);
    writer.writeStringValue("city", withUserGetResponse.city);
    writer.writeStringValue("companyId", withUserGetResponse.companyId);
    writer.writeStringValue("companyName", withUserGetResponse.companyName);
    writer.writeStringValue("country", withUserGetResponse.country);
    writer.writeStringValue("email", withUserGetResponse.email);
    writer.writeStringValue("firstName", withUserGetResponse.firstName);
    writer.writeGuidValue("id", withUserGetResponse.id);
    writer.writeStringValue("imageUrl", withUserGetResponse.imageUrl);
    writer.writeStringValue("industry", withUserGetResponse.industry);
    writer.writeStringValue("jobTitle", withUserGetResponse.jobTitle);
    writer.writeStringValue("lastName", withUserGetResponse.lastName);
    writer.writeStringValue("name", withUserGetResponse.name);
    writer.writeObjectValue<WithUserGetResponse_phone>("phone", withUserGetResponse.phone, serializeWithUserGetResponse_phone);
    writer.writeStringValue("postalCode", withUserGetResponse.postalCode);
    writer.writeCollectionOfObjectValues<WithUserGetResponse_products>("products", withUserGetResponse.products, serializeWithUserGetResponse_products);
    writer.writeCollectionOfPrimitiveValues<string>("roleIds", withUserGetResponse.roleIds);
    writer.writeCollectionOfObjectValues<WithUserGetResponse_roles>("roles", withUserGetResponse.roles, serializeWithUserGetResponse_roles);
    writer.writeStringValue("stateOrProvince", withUserGetResponse.stateOrProvince);
    writer.writeStringValue("status", withUserGetResponse.status);
    writer.writeDateValue("updatedAt", withUserGetResponse.updatedAt);
    writer.writeAdditionalData(withUserGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserGetResponse_accessLevels The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserGetResponse_accessLevels(writer: SerializationWriter, withUserGetResponse_accessLevels: Partial<WithUserGetResponse_accessLevels> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserGetResponse_accessLevels || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("accountAdmin", withUserGetResponse_accessLevels.accountAdmin);
    writer.writeBooleanValue("executive", withUserGetResponse_accessLevels.executive);
    writer.writeBooleanValue("projectAdmin", withUserGetResponse_accessLevels.projectAdmin);
    writer.writeAdditionalData(withUserGetResponse_accessLevels.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserGetResponse_phone The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserGetResponse_phone(writer: SerializationWriter, withUserGetResponse_phone: Partial<WithUserGetResponse_phone> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserGetResponse_phone || isSerializingDerivedType) { return; }
    writer.writeStringValue("extension", withUserGetResponse_phone.extension);
    writer.writeStringValue("number", withUserGetResponse_phone.number);
    writer.writeEnumValue<WithUserGetResponse_phone_phoneType>("phoneType", withUserGetResponse_phone.phoneType);
    writer.writeAdditionalData(withUserGetResponse_phone.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserGetResponse_products The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserGetResponse_products(writer: SerializationWriter, withUserGetResponse_products: Partial<WithUserGetResponse_products> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserGetResponse_products || isSerializingDerivedType) { return; }
    writer.writeEnumValue<WithUserGetResponse_products_access>("access", withUserGetResponse_products.access);
    writer.writeEnumValue<WithUserGetResponse_products_key>("key", withUserGetResponse_products.key);
    writer.writeAdditionalData(withUserGetResponse_products.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserGetResponse_roles The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserGetResponse_roles(writer: SerializationWriter, withUserGetResponse_roles: Partial<WithUserGetResponse_roles> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserGetResponse_roles || isSerializingDerivedType) { return; }
    writer.writeGuidValue("id", withUserGetResponse_roles.id);
    writer.writeStringValue("name", withUserGetResponse_roles.name);
    writer.writeAdditionalData(withUserGetResponse_roles.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchRequestBody(writer: SerializationWriter, withUserPatchRequestBody: Partial<WithUserPatchRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("companyId", withUserPatchRequestBody.companyId);
    writer.writeStringValue("companyName", withUserPatchRequestBody.companyName);
    writer.writeCollectionOfObjectValues<WithUserPatchRequestBody_products>("products", withUserPatchRequestBody.products, serializeWithUserPatchRequestBody_products);
    writer.writeCollectionOfPrimitiveValues<string>("roleIds", withUserPatchRequestBody.roleIds);
    writer.writeAdditionalData(withUserPatchRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchRequestBody_products The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchRequestBody_products(writer: SerializationWriter, withUserPatchRequestBody_products: Partial<WithUserPatchRequestBody_products> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchRequestBody_products || isSerializingDerivedType) { return; }
    writer.writeEnumValue<WithUserPatchRequestBody_products_access>("access", withUserPatchRequestBody_products.access);
    writer.writeEnumValue<WithUserPatchRequestBody_products_key>("key", withUserPatchRequestBody_products.key);
    writer.writeAdditionalData(withUserPatchRequestBody_products.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchResponse(writer: SerializationWriter, withUserPatchResponse: Partial<WithUserPatchResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("aboutMe", withUserPatchResponse.aboutMe);
    writer.writeObjectValue<WithUserPatchResponse_accessLevels>("accessLevels", withUserPatchResponse.accessLevels, serializeWithUserPatchResponse_accessLevels);
    writer.writeDateValue("addedOn", withUserPatchResponse.addedOn);
    writer.writeStringValue("addressLine1", withUserPatchResponse.addressLine1);
    writer.writeStringValue("addressLine2", withUserPatchResponse.addressLine2);
    writer.writeStringValue("analyticsId", withUserPatchResponse.analyticsId);
    writer.writeStringValue("autodeskId", withUserPatchResponse.autodeskId);
    writer.writeStringValue("city", withUserPatchResponse.city);
    writer.writeStringValue("companyId", withUserPatchResponse.companyId);
    writer.writeStringValue("companyName", withUserPatchResponse.companyName);
    writer.writeStringValue("country", withUserPatchResponse.country);
    writer.writeStringValue("email", withUserPatchResponse.email);
    writer.writeStringValue("firstName", withUserPatchResponse.firstName);
    writer.writeGuidValue("id", withUserPatchResponse.id);
    writer.writeStringValue("imageUrl", withUserPatchResponse.imageUrl);
    writer.writeStringValue("industry", withUserPatchResponse.industry);
    writer.writeGuidValue("jobId", withUserPatchResponse.jobId);
    writer.writeStringValue("jobTitle", withUserPatchResponse.jobTitle);
    writer.writeStringValue("lastName", withUserPatchResponse.lastName);
    writer.writeStringValue("name", withUserPatchResponse.name);
    writer.writeObjectValue<WithUserPatchResponse_phone>("phone", withUserPatchResponse.phone, serializeWithUserPatchResponse_phone);
    writer.writeStringValue("postalCode", withUserPatchResponse.postalCode);
    writer.writeCollectionOfObjectValues<WithUserPatchResponse_products>("products", withUserPatchResponse.products, serializeWithUserPatchResponse_products);
    writer.writeCollectionOfPrimitiveValues<string>("roleIds", withUserPatchResponse.roleIds);
    writer.writeCollectionOfObjectValues<WithUserPatchResponse_roles>("roles", withUserPatchResponse.roles, serializeWithUserPatchResponse_roles);
    writer.writeStringValue("stateOrProvince", withUserPatchResponse.stateOrProvince);
    writer.writeStringValue("status", withUserPatchResponse.status);
    writer.writeDateValue("updatedAt", withUserPatchResponse.updatedAt);
    writer.writeAdditionalData(withUserPatchResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchResponse_accessLevels The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchResponse_accessLevels(writer: SerializationWriter, withUserPatchResponse_accessLevels: Partial<WithUserPatchResponse_accessLevels> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchResponse_accessLevels || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("accountAdmin", withUserPatchResponse_accessLevels.accountAdmin);
    writer.writeBooleanValue("executive", withUserPatchResponse_accessLevels.executive);
    writer.writeBooleanValue("projectAdmin", withUserPatchResponse_accessLevels.projectAdmin);
    writer.writeAdditionalData(withUserPatchResponse_accessLevels.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchResponse_phone The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchResponse_phone(writer: SerializationWriter, withUserPatchResponse_phone: Partial<WithUserPatchResponse_phone> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchResponse_phone || isSerializingDerivedType) { return; }
    writer.writeStringValue("extension", withUserPatchResponse_phone.extension);
    writer.writeStringValue("number", withUserPatchResponse_phone.number);
    writer.writeEnumValue<WithUserPatchResponse_phone_phoneType>("phoneType", withUserPatchResponse_phone.phoneType);
    writer.writeAdditionalData(withUserPatchResponse_phone.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchResponse_products The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchResponse_products(writer: SerializationWriter, withUserPatchResponse_products: Partial<WithUserPatchResponse_products> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchResponse_products || isSerializingDerivedType) { return; }
    writer.writeEnumValue<WithUserPatchResponse_products_access>("access", withUserPatchResponse_products.access);
    writer.writeEnumValue<WithUserPatchResponse_products_key>("key", withUserPatchResponse_products.key);
    writer.writeAdditionalData(withUserPatchResponse_products.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithUserPatchResponse_roles The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithUserPatchResponse_roles(writer: SerializationWriter, withUserPatchResponse_roles: Partial<WithUserPatchResponse_roles> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withUserPatchResponse_roles || isSerializingDerivedType) { return; }
    writer.writeGuidValue("id", withUserPatchResponse_roles.id);
    writer.writeStringValue("name", withUserPatchResponse_roles.name);
    writer.writeAdditionalData(withUserPatchResponse_roles.additionalData);
}
export interface WithUserGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * A short bio about the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    aboutMe?: string | null;
    /**
     * Flags that identify a returned user's access levels in the account or project.
     */
    accessLevels?: WithUserGetResponse_accessLevels | null;
    /**
     * The timestamp when the user was first given access to any product on the project.
     */
    addedOn?: Date | null;
    /**
     * The user's address line 1. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine1?: string | null;
    /**
     * The user's address line 2. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine2?: string | null;
    /**
     * Not relevant
     */
    analyticsId?: string | null;
    /**
     * The ID of the user's Autodesk profile.Max length: 255
     */
    autodeskId?: string | null;
    /**
     * The User's city. This data syncs from the user's Autodesk profile.Max length: 255
     */
    city?: string | null;
    /**
     * The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies </en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/>`_.
     */
    companyId?: string | null;
    /**
     * The name of the company to which the user belongs.Max length: 255
     */
    companyName?: string | null;
    /**
     * The user's country. This data syncs from the user's Autodesk profile.Max length: 255
     */
    country?: string | null;
    /**
     * The email of the user.Max length: 255
     */
    email?: string | null;
    /**
     * The user's first name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    firstName?: string | null;
    /**
     * The ACC ID of the user.
     */
    id?: Guid | null;
    /**
     * The URL of the user's avatar. This data syncs from the user's Autodesk profile.Max length: 255
     */
    imageUrl?: string | null;
    /**
     * The industry the user works in. This data syncs from the user's Autodesk profile.Max length: 255
     */
    industry?: string | null;
    /**
     * The user's job title. This data syncs from the user's Autodesk profile.Max length: 255
     */
    jobTitle?: string | null;
    /**
     * The user's last name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    lastName?: string | null;
    /**
     * The full name of the user.Max length: 255
     */
    name?: string | null;
    /**
     * The user's phone number. This data syncs from the user's Autodesk profile.
     */
    phone?: WithUserGetResponse_phone | null;
    /**
     * The zip or postal code of the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    postalCode?: string | null;
    /**
     * Information about the products activated in the specified project for this user.
     */
    products?: WithUserGetResponse_products[] | null;
    /**
     * A list of IDs of the roles that the user belongs to in the project.
     */
    roleIds?: string[] | null;
    /**
     * A list of the role IDs and names that are associated with the user in the project.
     */
    roles?: WithUserGetResponse_roles[] | null;
    /**
     * The state or province of the user. The accepted values here change depending on which country is provided. This data syncs from the user's Autodesk profile.Max length: 255
     */
    stateOrProvince?: string | null;
    /**
     * The status of the user in the project. A pending user could be waiting for their products to activate, or the user hasn't accepted an email to create an account with Autodesk.Possible values:- ``active``: The user has been added to the project.- ``pending``: The user is in the process of being added to the project.- ``disabled``: The user has been temporarily suspended from the project.- ``deleted``: The user has been removed from the project.
     */
    status?: string | null;
    /**
     * The timestamp when the project user was last updated, in ISO 8601 format.
     */
    updatedAt?: Date | null;
}
/**
 * Flags that identify a returned user's access levels in the account or project.
 */
export interface WithUserGetResponse_accessLevels extends AdditionalDataHolder, Parsable {
    /**
     * Indicates whether the user is an account administrator for the account. Possible values:- ``true``: The user is an account administrator.- ``false``: The user is not an account administrator.
     */
    accountAdmin?: boolean | null;
    /**
     * Indicates whether the user is an executive in the account. Possible values:- ``true``: The user is an executive.- ``false``: The user is not an executive.
     */
    executive?: boolean | null;
    /**
     * Indicates whether the user is a project administrator for the project. Possible values:- ``true``: The user is a project administrator.- ``false``: The user is not a project administrator.
     */
    projectAdmin?: boolean | null;
}
/**
 * The user's phone number. This data syncs from the user's Autodesk profile.
 */
export interface WithUserGetResponse_phone extends AdditionalDataHolder, Parsable {
    /**
     * User's phone extension.
     */
    extension?: string | null;
    /**
     * User's phone number
     */
    number?: string | null;
    /**
     * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
     */
    phoneType?: WithUserGetResponse_phone_phoneType | null;
}
export type WithUserGetResponse_phone_phoneType = (typeof WithUserGetResponse_phone_phoneTypeObject)[keyof typeof WithUserGetResponse_phone_phoneTypeObject];
export interface WithUserGetResponse_products extends AdditionalDataHolder, Parsable {
    /**
     * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
     */
    access?: WithUserGetResponse_products_access | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: WithUserGetResponse_products_key | null;
}
export type WithUserGetResponse_products_access = (typeof WithUserGetResponse_products_accessObject)[keyof typeof WithUserGetResponse_products_accessObject];
export type WithUserGetResponse_products_key = (typeof WithUserGetResponse_products_keyObject)[keyof typeof WithUserGetResponse_products_keyObject];
export interface WithUserGetResponse_roles extends AdditionalDataHolder, Parsable {
    /**
     * The ID of a role that the user belongs to in the project.
     */
    id?: Guid | null;
    /**
     * The name of a role that the user belongs to in the project.
     */
    name?: string | null;
}
/**
 * Builds and executes requests for operations under /construction/admin/v1/projects/{projectId}/users/{userId}
 */
export interface WithUserItemRequestBuilder extends BaseRequestBuilder<WithUserItemRequestBuilder> {
    /**
     * Removes the specified user from a project.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieves detailed information about the specified user in a project.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithUserGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<WithUserItemRequestBuilderGetQueryParameters> | undefined) : Promise<WithUserGetResponse | undefined>;
    /**
     * Updates information about the specified user in a project.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithUserPatchResponse>}
     */
     patch(body: WithUserPatchRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithUserPatchResponse | undefined>;
    /**
     * Removes the specified user from a project.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieves detailed information about the specified user in a project.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WithUserItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Updates information about the specified user in a project.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: WithUserPatchRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieves detailed information about the specified user in a project.
 */
export interface WithUserItemRequestBuilderGetQueryParameters {
    /**
     * A list of the project user fields to include in the response. Separate multiple values with commas.Possible values: ``name``, ``email``, ``firstName``, ``lastName``, ``autodeskId``, ``addressLine1``, ``addressLine2``, ``city``, ``stateOrProvince``, ``postalCode``, ``country``, ``imageUrl``, ``lastSignIn``, ``phone``, ``jobTitle``, ``industry``, ``aboutMe``, ``createdAt``, ``updatedAt``, ``accessLevels``, ``companyId``, ``roleIds``, ``roles``, ``status``, ``addedOn``, and ``products``.
     */
    fields?: string[];
}
export interface WithUserPatchRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies </en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/>`_.
     */
    companyId?: string | null;
    /**
     * The name of the company to which the user belongs.Max length: 255
     */
    companyName?: string | null;
    /**
     * Information about the products activated in the specified project for this user.
     */
    products?: WithUserPatchRequestBody_products[] | null;
    /**
     * A list of IDs of the roles that the user belongs to in the project.
     */
    roleIds?: string[] | null;
}
export interface WithUserPatchRequestBody_products extends AdditionalDataHolder, Parsable {
    /**
     * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
     */
    access?: WithUserPatchRequestBody_products_access | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: WithUserPatchRequestBody_products_key | null;
}
export type WithUserPatchRequestBody_products_access = (typeof WithUserPatchRequestBody_products_accessObject)[keyof typeof WithUserPatchRequestBody_products_accessObject];
export type WithUserPatchRequestBody_products_key = (typeof WithUserPatchRequestBody_products_keyObject)[keyof typeof WithUserPatchRequestBody_products_keyObject];
export interface WithUserPatchResponse extends AdditionalDataHolder, Parsable {
    /**
     * A short bio about the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    aboutMe?: string | null;
    /**
     * Flags indicating the user's access levels in the account.
     */
    accessLevels?: WithUserPatchResponse_accessLevels | null;
    /**
     * The timestamp when the user was first given access to any product on the project.
     */
    addedOn?: Date | null;
    /**
     * The user's address line 1. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine1?: string | null;
    /**
     * The user's address line 2. This data syncs from the user's Autodesk profile.Max length: 255
     */
    addressLine2?: string | null;
    /**
     * Not relevant
     */
    analyticsId?: string | null;
    /**
     * The ID of the user's Autodesk profile.Max length: 255
     */
    autodeskId?: string | null;
    /**
     * The User's city. This data syncs from the user's Autodesk profile.Max length: 255
     */
    city?: string | null;
    /**
     * The ID of the company that the user is representing in the project. To obtain a list of all company IDs associated with a project, call `GET projects/:projectId/companies </en/docs/acc/v1/reference/http/projects-:project_id-companies-GET/>`_.
     */
    companyId?: string | null;
    /**
     * The name of the company to which the user belongs.Max length: 255
     */
    companyName?: string | null;
    /**
     * The user's country. This data syncs from the user's Autodesk profile.Max length: 255
     */
    country?: string | null;
    /**
     * The email of the user.Max length: 255
     */
    email?: string | null;
    /**
     * The user's first name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    firstName?: string | null;
    /**
     * The ACC ID of the user.
     */
    id?: Guid | null;
    /**
     * The URL of the user's avatar. This data syncs from the user's Autodesk profile.Max length: 255
     */
    imageUrl?: string | null;
    /**
     * The industry the user works in. This data syncs from the user's Autodesk profile.Max length: 255
     */
    industry?: string | null;
    /**
     * Not relevant - we don't currently support this field.
     */
    jobId?: Guid | null;
    /**
     * The user's job title. This data syncs from the user's Autodesk profile.Max length: 255
     */
    jobTitle?: string | null;
    /**
     * The user's last name. This data syncs from the user's Autodesk profile.Max length: 255
     */
    lastName?: string | null;
    /**
     * The full name of the user.Max length: 255
     */
    name?: string | null;
    /**
     * The user's phone number. This data syncs from the user's Autodesk profile.
     */
    phone?: WithUserPatchResponse_phone | null;
    /**
     * The zip or postal code of the user. This data syncs from the user's Autodesk profile.Max length: 255
     */
    postalCode?: string | null;
    /**
     * Information about the products activated in the specified project for this user.
     */
    products?: WithUserPatchResponse_products[] | null;
    /**
     * A list of IDs of the roles that the user belongs to in the project.
     */
    roleIds?: string[] | null;
    /**
     * A list of the role IDs and names that are associated with the user in the project.
     */
    roles?: WithUserPatchResponse_roles[] | null;
    /**
     * The state or province of the user. The accepted values here change depending on which country is provided. This data syncs from the user's Autodesk profile.Max length: 255
     */
    stateOrProvince?: string | null;
    /**
     * The status of the user on the account. A pending user could be waiting for its products to activate or the user hasn't accepted an email to create an account with Autodesk.Possible values: ``active``, ``pending``, ``disabled``, and ``deleted``.'
     */
    status?: string | null;
    /**
     * The timestamp when the project user was last updated, in ISO 8601 format.
     */
    updatedAt?: Date | null;
}
/**
 * Flags indicating the user's access levels in the account.
 */
export interface WithUserPatchResponse_accessLevels extends AdditionalDataHolder, Parsable {
    /**
     * Indicates whether the user is an account administrator for the account. Possible values:- ``true``: The user is an account administrator.- ``false``: The user is not an account administrator.
     */
    accountAdmin?: boolean | null;
    /**
     * Indicates whether the user is an executive in the account. Possible values:- ``true``: The user is an executive.- ``false``: The user is not an executive.
     */
    executive?: boolean | null;
    /**
     * Indicates whether the user is a project administrator for the project. Possible values:- ``true``: The user is a project administrator.- ``false``: The user is not a project administrator.
     */
    projectAdmin?: boolean | null;
}
/**
 * The user's phone number. This data syncs from the user's Autodesk profile.
 */
export interface WithUserPatchResponse_phone extends AdditionalDataHolder, Parsable {
    /**
     * User's phone extension.
     */
    extension?: string | null;
    /**
     * User's phone number
     */
    number?: string | null;
    /**
     * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
     */
    phoneType?: WithUserPatchResponse_phone_phoneType | null;
}
export type WithUserPatchResponse_phone_phoneType = (typeof WithUserPatchResponse_phone_phoneTypeObject)[keyof typeof WithUserPatchResponse_phone_phoneTypeObject];
export interface WithUserPatchResponse_products extends AdditionalDataHolder, Parsable {
    /**
     * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
     */
    access?: WithUserPatchResponse_products_access | null;
    /**
     * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
     */
    key?: WithUserPatchResponse_products_key | null;
}
export type WithUserPatchResponse_products_access = (typeof WithUserPatchResponse_products_accessObject)[keyof typeof WithUserPatchResponse_products_accessObject];
export type WithUserPatchResponse_products_key = (typeof WithUserPatchResponse_products_keyObject)[keyof typeof WithUserPatchResponse_products_keyObject];
export interface WithUserPatchResponse_roles extends AdditionalDataHolder, Parsable {
    /**
     * The ID of a role that the user belongs to in the project.
     */
    id?: Guid | null;
    /**
     * The name of a role that the user belongs to in the project.
     */
    name?: string | null;
}
/**
 * Uri template for the request builder.
 */
export const WithUserItemRequestBuilderUriTemplate = "{+baseurl}/construction/admin/v1/projects/{projectId}/users/{userId}{?fields*}";
/**
 * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
 */
export const WithUserGetResponse_phone_phoneTypeObject = {
    Home: "home",
    Mobile: "mobile",
    Office: "office",
} as const;
/**
 * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
 */
export const WithUserGetResponse_products_accessObject = {
    Key: "key",
    Administrator: "administrator",
    Member: "member",
    None: "none",
    ProjectAdministration: "projectAdministration",
    Access: "access",
} as const;
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const WithUserGetResponse_products_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/**
 * Metadata for all the requests in the request builder.
 */
export const WithUserItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithUserItemRequestBuilderUriTemplate,
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithUserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithUserGetResponseFromDiscriminatorValue,
    },
    patch: {
        uriTemplate: WithUserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithUserPatchResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWithUserPatchRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
 */
export const WithUserPatchRequestBody_products_accessObject = {
    Key: "key",
    Administrator: "administrator",
    Member: "member",
    None: "none",
    ProjectAdministration: "projectAdministration",
    Access: "access",
} as const;
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const WithUserPatchRequestBody_products_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/**
 * The user's phone type.Possible values: ``home``, ``mobile``, or ``office``. Default value: ``mobile``.
 */
export const WithUserPatchResponse_phone_phoneTypeObject = {
    Home: "home",
    Mobile: "mobile",
    Office: "office",
} as const;
/**
 * The user's type of access to the product identified by ``key``. Possible values:- ``administrator``- ``member``- ``none``Note that when you're using a POST or PATCH endpoint to set this value, you must adhere to the following guidelines:- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``none``, all other products should be set to ``member`` access for the user.- If you set a product's ``key`` to ``projectAdministration`` and you set ``access`` to ``administrator``, all other products should be set to ``administrator`` access for the user.- You cannot set a product's ``key`` to ``projectAdministration`` and set ``access`` to ``member``.
 */
export const WithUserPatchResponse_products_accessObject = {
    Key: "key",
    Administrator: "administrator",
    Member: "member",
    None: "none",
    ProjectAdministration: "projectAdministration",
    Access: "access",
} as const;
/**
 * A machine-readable identifier for the product (e.g., docs, build).Each product has a unique key used throughout the API for identification, filtering, and integration logic (e.g., in query parameters like ``filter[key]``).Possible values:ACC - ``autoSpecs``, ``build``, ``cost``, ``designCollaboration``, ``docs``, ``insight``, ``modelCoordination``, ``projectAdministration``, and ``takeoff``.BIM 360 - ``assets``, ``costManagement``, ``designCollaboration``, ``documentManagement``, ``field``, ``fieldManagement``, ``glue``, ``insight``, ``modelCoordination``, ``plan``, ``projectAdministration``, ``projectHome``, ``projectManagement``, and ``quantification``.Note that this endpoint returns only ACC products. Other endpoints, such as `GET projects </en/docs/acc/v1/reference/http/admin-accountsaccountidprojects-GET/>`_ and `GET projects/:projectId </en/docs/acc/v1/reference/http/admin-projects-projectId-GET/>`_, may return both ACC and BIM 360 projects. In those responses, product keys may include BIM 360 values.
 */
export const WithUserPatchResponse_products_keyObject = {
    FilterKey: "filter[key]",
    AutoSpecs: "autoSpecs",
    Build: "build",
    Cost: "cost",
    DesignCollaboration: "designCollaboration",
    Docs: "docs",
    Insight: "insight",
    ModelCoordination: "modelCoordination",
    ProjectAdministration: "projectAdministration",
    Takeoff: "takeoff",
    Assets: "assets",
    CostManagement: "costManagement",
    DocumentManagement: "documentManagement",
    Field: "field",
    FieldManagement: "fieldManagement",
    Glue: "glue",
    Plan: "plan",
    ProjectHome: "projectHome",
    ProjectManagement: "projectManagement",
    Quantification: "quantification",
} as const;
/* tslint:enable */
/* eslint-enable */
