/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createJobFromDiscriminatorValue, type Job } from '../../../../models/index.js';
// @ts-ignore
import { DataRequestBuilderNavigationMetadata, type DataRequestBuilder } from './data/index.js';
// @ts-ignore
import { DataListingRequestBuilderRequestsMetadata, type DataListingRequestBuilder } from './dataListing/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /accounts/{accountId}/jobs/{jobId}
 */
export interface WithJobItemRequestBuilder extends BaseRequestBuilder<WithJobItemRequestBuilder> {
    /**
     * The data property
     */
    get data(): DataRequestBuilder;
    /**
     * The dataListing property
     */
    get dataListing(): DataListingRequestBuilder;
    /**
     * Cancels a running job. Only jobs with status 'running' can be cancelled.**Response**: No response body (204 status)
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieves detailed information about a specific job by its ID.**Response Body**: Complete job object with all properties
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Job>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Job | undefined>;
    /**
     * Cancels a running job. Only jobs with status 'running' can be cancelled.**Response**: No response body (204 status)
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieves detailed information about a specific job by its ID.**Response Body**: Complete job object with all properties
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithJobItemRequestBuilderUriTemplate = "{+baseurl}/accounts/{accountId}/jobs/{jobId}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithJobItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithJobItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    data: {
        navigationMetadata: DataRequestBuilderNavigationMetadata,
    },
    dataListing: {
        requestsMetadata: DataListingRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithJobItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithJobItemRequestBuilderUriTemplate,
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithJobItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createJobFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
