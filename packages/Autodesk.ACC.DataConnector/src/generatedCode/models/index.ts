/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type Guid, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataFile}
 */
// @ts-ignore
export function createDataFileFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataFile;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataRequest}
 */
// @ts-ignore
export function createDataRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Job}
 */
// @ts-ignore
export function createJobFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJob;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Pagination}
 */
// @ts-ignore
export function createPaginationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPagination;
}
export interface DataFile extends AdditionalDataHolder, Parsable {
    /**
     * The date and time the file was created (ISO 8601)
     */
    createdAt?: Date | null;
    /**
     * The name of the file
     */
    name?: string | null;
    /**
     * The size of the file in bytes
     */
    size?: number | null;
}
export interface DataRequest extends AdditionalDataHolder, Parsable {
    /**
     * The account ID
     */
    accountId?: Guid | null;
    /**
     * The callback URL specified for the data request
     */
    callbackUrl?: string | null;
    /**
     * The date and time the data request was created (ISO 8601)
     */
    createdAt?: Date | null;
    /**
     * The BIM 360 / ACC user ID of the user who created the data request
     */
    createdBy?: string | null;
    /**
     * The email address of the user who created the data request
     */
    createdByEmail?: string | null;
    /**
     * The timeframe used for extracting data in the request
     */
    dateRange?: DataRequest_dateRange | null;
    /**
     * The user-entered description of this data request
     */
    description?: string | null;
    /**
     * The date and time when a one-time job execution or a recurring interval schedule begins (ISO 8601)
     */
    effectiveFrom?: Date | null;
    /**
     * The date and time when the recurring interval schedule ends (ISO 8601)
     */
    effectiveTo?: Date | null;
    /**
     * The end date and time for the data extraction (ISO 8601)
     */
    endDate?: Date | null;
    /**
     * The ID of the data request
     */
    id?: Guid | null;
    /**
     * The data request's active/inactive status
     */
    isActive?: boolean | null;
    /**
     * The date and time the last job for this data request was scheduled to execute (ISO 8601)
     */
    lastQueuedAt?: Date | null;
    /**
     * (Legacy) A single project ID for the data request. Superseded by projectIdList
     */
    projectId?: Guid | null;
    /**
     * A list of up to 50 project IDs included in the data request
     */
    projectIdList?: string[] | null;
    /**
     * The types of projects to be included in a request
     */
    projectStatus?: DataRequest_projectStatus | null;
    /**
     * The number of scheduleInterval units to wait between job execution
     */
    reoccuringInterval?: number | null;
    /**
     * The scheduling interval unit for jobs spawned by this data request
     */
    scheduleInterval?: DataRequest_scheduleInterval | null;
    /**
     * Send a notification email to the user upon job completion
     */
    sendEmail?: boolean | null;
    /**
     * The service groups from which data has been extracted
     */
    serviceGroups?: string[] | null;
    /**
     * The start date and time for the data extraction (ISO 8601)
     */
    startDate?: Date | null;
    /**
     * The date and time the data request was last updated (ISO 8601)
     */
    updatedAt?: Date | null;
    /**
     * The BIM 360 / ACC user ID of the user who last updated the data request
     */
    updatedBy?: string | null;
}
export type DataRequest_dateRange = (typeof DataRequest_dateRangeObject)[keyof typeof DataRequest_dateRangeObject];
export type DataRequest_projectStatus = (typeof DataRequest_projectStatusObject)[keyof typeof DataRequest_projectStatusObject];
export type DataRequest_scheduleInterval = (typeof DataRequest_scheduleIntervalObject)[keyof typeof DataRequest_scheduleIntervalObject];
/**
 * The deserialization information for the current model
 * @param DataFile The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataFile(dataFile: Partial<DataFile> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createdAt": n => { dataFile.createdAt = n.getDateValue(); },
        "name": n => { dataFile.name = n.getStringValue(); },
        "size": n => { dataFile.size = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DataRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataRequest(dataRequest: Partial<DataRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { dataRequest.accountId = n.getGuidValue(); },
        "callbackUrl": n => { dataRequest.callbackUrl = n.getStringValue(); },
        "createdAt": n => { dataRequest.createdAt = n.getDateValue(); },
        "createdBy": n => { dataRequest.createdBy = n.getStringValue(); },
        "createdByEmail": n => { dataRequest.createdByEmail = n.getStringValue(); },
        "dateRange": n => { dataRequest.dateRange = n.getEnumValue<DataRequest_dateRange>(DataRequest_dateRangeObject); },
        "description": n => { dataRequest.description = n.getStringValue(); },
        "effectiveFrom": n => { dataRequest.effectiveFrom = n.getDateValue(); },
        "effectiveTo": n => { dataRequest.effectiveTo = n.getDateValue(); },
        "endDate": n => { dataRequest.endDate = n.getDateValue(); },
        "id": n => { dataRequest.id = n.getGuidValue(); },
        "isActive": n => { dataRequest.isActive = n.getBooleanValue(); },
        "lastQueuedAt": n => { dataRequest.lastQueuedAt = n.getDateValue(); },
        "projectId": n => { dataRequest.projectId = n.getGuidValue(); },
        "projectIdList": n => { dataRequest.projectIdList = n.getCollectionOfPrimitiveValues<string>(); },
        "projectStatus": n => { dataRequest.projectStatus = n.getEnumValue<DataRequest_projectStatus>(DataRequest_projectStatusObject); },
        "reoccuringInterval": n => { dataRequest.reoccuringInterval = n.getNumberValue(); },
        "scheduleInterval": n => { dataRequest.scheduleInterval = n.getEnumValue<DataRequest_scheduleInterval>(DataRequest_scheduleIntervalObject); },
        "sendEmail": n => { dataRequest.sendEmail = n.getBooleanValue(); },
        "serviceGroups": n => { dataRequest.serviceGroups = n.getCollectionOfPrimitiveValues<string>(); },
        "startDate": n => { dataRequest.startDate = n.getDateValue(); },
        "updatedAt": n => { dataRequest.updatedAt = n.getDateValue(); },
        "updatedBy": n => { dataRequest.updatedBy = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Job The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJob(job: Partial<Job> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { job.accountId = n.getGuidValue(); },
        "completedAt": n => { job.completedAt = n.getDateValue(); },
        "completionStatus": n => { job.completionStatus = n.getEnumValue<Job_completionStatus>(Job_completionStatusObject); },
        "createdAt": n => { job.createdAt = n.getDateValue(); },
        "createdBy": n => { job.createdBy = n.getStringValue(); },
        "createdByEmail": n => { job.createdByEmail = n.getStringValue(); },
        "id": n => { job.id = n.getGuidValue(); },
        "projectId": n => { job.projectId = n.getGuidValue(); },
        "requestId": n => { job.requestId = n.getGuidValue(); },
        "startedAt": n => { job.startedAt = n.getDateValue(); },
        "status": n => { job.status = n.getEnumValue<Job_status>(Job_statusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param Pagination The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPagination(pagination: Partial<Pagination> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "limit": n => { pagination.limit = n.getNumberValue(); },
        "offset": n => { pagination.offset = n.getNumberValue(); },
        "totalResults": n => { pagination.totalResults = n.getNumberValue(); },
    }
}
export interface Job extends AdditionalDataHolder, Parsable {
    /**
     * The account ID
     */
    accountId?: Guid | null;
    /**
     * The date and time the job completed execution (ISO 8601)
     */
    completedAt?: Date | null;
    /**
     * The completion status of the job (only set when status is complete)
     */
    completionStatus?: Job_completionStatus | null;
    /**
     * The date and time the job was created (ISO 8601)
     */
    createdAt?: Date | null;
    /**
     * The BIM 360 / ACC user ID of the user who created the data request
     */
    createdBy?: string | null;
    /**
     * The email address of the user who created the data request
     */
    createdByEmail?: string | null;
    /**
     * The ID of the job
     */
    id?: Guid | null;
    /**
     * The project ID (if applicable)
     */
    projectId?: Guid | null;
    /**
     * The ID of the data request that spawned this job
     */
    requestId?: Guid | null;
    /**
     * The date and time the job started execution (ISO 8601)
     */
    startedAt?: Date | null;
    /**
     * The current status of the job
     */
    status?: Job_status | null;
}
export type Job_completionStatus = (typeof Job_completionStatusObject)[keyof typeof Job_completionStatusObject];
export type Job_status = (typeof Job_statusObject)[keyof typeof Job_statusObject];
export interface Pagination extends AdditionalDataHolder, Parsable {
    /**
     * The number of objects returned per page
     */
    limit?: number | null;
    /**
     * The number of objects skipped before starting to collect the result set
     */
    offset?: number | null;
    /**
     * The total number of objects available
     */
    totalResults?: number | null;
}
/**
 * Serializes information the current object
 * @param DataFile The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataFile(writer: SerializationWriter, dataFile: Partial<DataFile> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataFile || isSerializingDerivedType) { return; }
    writer.writeDateValue("createdAt", dataFile.createdAt);
    writer.writeStringValue("name", dataFile.name);
    writer.writeNumberValue("size", dataFile.size);
    writer.writeAdditionalData(dataFile.additionalData);
}
/**
 * Serializes information the current object
 * @param DataRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataRequest(writer: SerializationWriter, dataRequest: Partial<DataRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataRequest || isSerializingDerivedType) { return; }
    writer.writeGuidValue("accountId", dataRequest.accountId);
    writer.writeStringValue("callbackUrl", dataRequest.callbackUrl);
    writer.writeDateValue("createdAt", dataRequest.createdAt);
    writer.writeStringValue("createdBy", dataRequest.createdBy);
    writer.writeStringValue("createdByEmail", dataRequest.createdByEmail);
    writer.writeEnumValue<DataRequest_dateRange>("dateRange", dataRequest.dateRange);
    writer.writeStringValue("description", dataRequest.description);
    writer.writeDateValue("effectiveFrom", dataRequest.effectiveFrom);
    writer.writeDateValue("effectiveTo", dataRequest.effectiveTo);
    writer.writeDateValue("endDate", dataRequest.endDate);
    writer.writeGuidValue("id", dataRequest.id);
    writer.writeBooleanValue("isActive", dataRequest.isActive);
    writer.writeDateValue("lastQueuedAt", dataRequest.lastQueuedAt);
    writer.writeGuidValue("projectId", dataRequest.projectId);
    writer.writeCollectionOfPrimitiveValues<string>("projectIdList", dataRequest.projectIdList);
    writer.writeEnumValue<DataRequest_projectStatus>("projectStatus", dataRequest.projectStatus);
    writer.writeNumberValue("reoccuringInterval", dataRequest.reoccuringInterval);
    writer.writeEnumValue<DataRequest_scheduleInterval>("scheduleInterval", dataRequest.scheduleInterval);
    writer.writeBooleanValue("sendEmail", dataRequest.sendEmail);
    writer.writeCollectionOfPrimitiveValues<string>("serviceGroups", dataRequest.serviceGroups);
    writer.writeDateValue("startDate", dataRequest.startDate);
    writer.writeDateValue("updatedAt", dataRequest.updatedAt);
    writer.writeStringValue("updatedBy", dataRequest.updatedBy);
    writer.writeAdditionalData(dataRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Job The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJob(writer: SerializationWriter, job: Partial<Job> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!job || isSerializingDerivedType) { return; }
    writer.writeGuidValue("accountId", job.accountId);
    writer.writeDateValue("completedAt", job.completedAt);
    writer.writeEnumValue<Job_completionStatus>("completionStatus", job.completionStatus);
    writer.writeDateValue("createdAt", job.createdAt);
    writer.writeStringValue("createdBy", job.createdBy);
    writer.writeStringValue("createdByEmail", job.createdByEmail);
    writer.writeGuidValue("id", job.id);
    writer.writeGuidValue("projectId", job.projectId);
    writer.writeGuidValue("requestId", job.requestId);
    writer.writeDateValue("startedAt", job.startedAt);
    writer.writeEnumValue<Job_status>("status", job.status);
    writer.writeAdditionalData(job.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Pagination The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePagination(writer: SerializationWriter, pagination: Partial<Pagination> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!pagination || isSerializingDerivedType) { return; }
    writer.writeNumberValue("limit", pagination.limit);
    writer.writeNumberValue("offset", pagination.offset);
    writer.writeNumberValue("totalResults", pagination.totalResults);
    writer.writeAdditionalData(pagination.additionalData);
}
/**
 * The timeframe used for extracting data in the request
 */
export const DataRequest_dateRangeObject = {
    TODAY: "TODAY",
    YESTERDAY: "YESTERDAY",
    PAST_7_DAYS: "PAST_7_DAYS",
    MONTH_TO_DATE: "MONTH_TO_DATE",
    LAST_MONTH: "LAST_MONTH",
} as const;
/**
 * The types of projects to be included in a request
 */
export const DataRequest_projectStatusObject = {
    All: "all",
    Archived: "archived",
    Active: "active",
} as const;
/**
 * The scheduling interval unit for jobs spawned by this data request
 */
export const DataRequest_scheduleIntervalObject = {
    ONE_TIME: "ONE_TIME",
    DAY: "DAY",
    WEEK: "WEEK",
    MONTH: "MONTH",
    YEAR: "YEAR",
} as const;
/**
 * The completion status of the job (only set when status is complete)
 */
export const Job_completionStatusObject = {
    Success: "success",
    Failure: "failure",
    Partial: "partial",
} as const;
/**
 * The current status of the job
 */
export const Job_statusObject = {
    Queued: "queued",
    Running: "running",
    Complete: "complete",
    Failed: "failed",
    Cancelled: "cancelled",
} as const;
/* tslint:enable */
/* eslint-enable */
