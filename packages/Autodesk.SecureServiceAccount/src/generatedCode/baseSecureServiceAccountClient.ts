/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { ServiceAccountsRequestBuilderNavigationMetadata, ServiceAccountsRequestBuilderRequestsMetadata, type ServiceAccountsRequestBuilder } from './serviceAccounts/index.js';
// @ts-ignore
import { TokenRequestBuilderRequestsMetadata, type TokenRequestBuilder } from './token/index.js';
// @ts-ignore
import { apiClientProxifier, ParseNodeFactoryRegistry, SerializationWriterFactoryRegistry, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type RequestAdapter } from '@microsoft/kiota-abstractions';
// @ts-ignore
import { FormParseNodeFactory, FormSerializationWriterFactory } from '@microsoft/kiota-serialization-form';
// @ts-ignore
import { JsonParseNodeFactory, JsonSerializationWriterFactory } from '@microsoft/kiota-serialization-json';
// @ts-ignore
import { MultipartSerializationWriterFactory } from '@microsoft/kiota-serialization-multipart';
// @ts-ignore
import { TextParseNodeFactory, TextSerializationWriterFactory } from '@microsoft/kiota-serialization-text';

/**
 * The main entry point of the SDK, exposes the configuration and the fluent API.
 */
export interface BaseSecureServiceAccountClient extends BaseRequestBuilder<BaseSecureServiceAccountClient> {
    /**
     * The serviceAccounts property
     */
    get serviceAccounts(): ServiceAccountsRequestBuilder;
    /**
     * The token property
     */
    get token(): TokenRequestBuilder;
}
/**
 * Instantiates a new {@link BaseSecureServiceAccountClient} and sets the default values.
 * @param requestAdapter The request adapter to use to execute the requests.
 */
// @ts-ignore
export function createBaseSecureServiceAccountClient(requestAdapter: RequestAdapter) {
    if (requestAdapter === undefined) {
        throw new Error("requestAdapter cannot be undefined");
    }
    const serializationWriterFactory = requestAdapter.getSerializationWriterFactory() as SerializationWriterFactoryRegistry;
    const parseNodeFactoryRegistry = requestAdapter.getParseNodeFactory() as ParseNodeFactoryRegistry;
    const backingStoreFactory = requestAdapter.getBackingStoreFactory();
    
    if (parseNodeFactoryRegistry.registerDefaultDeserializer) {
        parseNodeFactoryRegistry.registerDefaultDeserializer(JsonParseNodeFactory, backingStoreFactory);
        parseNodeFactoryRegistry.registerDefaultDeserializer(TextParseNodeFactory, backingStoreFactory);
        parseNodeFactoryRegistry.registerDefaultDeserializer(FormParseNodeFactory, backingStoreFactory);
    }
    
    if (serializationWriterFactory.registerDefaultSerializer) {
        serializationWriterFactory.registerDefaultSerializer(JsonSerializationWriterFactory);
        serializationWriterFactory.registerDefaultSerializer(TextSerializationWriterFactory);
        serializationWriterFactory.registerDefaultSerializer(FormSerializationWriterFactory);
        serializationWriterFactory.registerDefaultSerializer(MultipartSerializationWriterFactory);
    }
    
    if (requestAdapter.baseUrl === undefined || requestAdapter.baseUrl === null || requestAdapter.baseUrl === "") {
        requestAdapter.baseUrl = "https://developer.api.autodesk.com/authentication/v2";
    }
    const pathParameters: Record<string, unknown> = {
        "baseurl": requestAdapter.baseUrl,
    };
    return apiClientProxifier<BaseSecureServiceAccountClient>(requestAdapter, pathParameters, BaseSecureServiceAccountClientNavigationMetadata, undefined);
}
/**
 * Uri template for the request builder.
 */
export const BaseSecureServiceAccountClientUriTemplate = "{+baseurl}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const BaseSecureServiceAccountClientNavigationMetadata: Record<Exclude<keyof BaseSecureServiceAccountClient, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    serviceAccounts: {
        requestsMetadata: ServiceAccountsRequestBuilderRequestsMetadata,
        navigationMetadata: ServiceAccountsRequestBuilderNavigationMetadata,
    },
    token: {
        requestsMetadata: TokenRequestBuilderRequestsMetadata,
    },
};
/* tslint:enable */
/* eslint-enable */
