/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Account object.
 */
export interface Account extends AdditionalDataHolder, Parsable {
    /**
     * The email associated with the account.
     */
    accountEmail?: string | null;
    /**
     * The name of the account for signin purposes.
     */
    accountName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * Is the account active (enabled).
     */
    isActive?: boolean | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Account collection object.
 */
export interface AccountCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: Account[] | null;
}
export type AuthTypeEnum = (typeof AuthTypeEnumObject)[keyof typeof AuthTypeEnumObject];
/**
 * BOM component object.
 */
export interface BOMComponent extends AdditionalDataHolder, Parsable {
    /**
     * A numeric value quantifying a single instance of the Component. For Components with discreet quantities, "1" should always be used. For measured quantities, a positive decimal value can be used. For example, a rod cut to 3.5 feet would have a BaseUOM of "foot" and a BaseQty of "3.5".
     */
    baseQty?: string | null;
    /**
     * The Unit of Measure the Component is quantified with. For discreet quantities, "Each" should be used. For measured quantities, a length (inch, cm, foot, etc.) volume (ounce, ml, liter, quart, etc.) or mass (gram, pound, kg, etc.) unit of measure should be used.
     */
    baseUOM?: string | null;
    /**
     * An enumerated value representing the BOMStructure value of Component:- ``Normal`` - 0,- ``Purchased`` - 1,- ``Inseperable`` - 2,- ``Phantom`` - 3,- ``Reference`` - 4,- ``DynamicPhantom`` - 5
     */
    bOMStructure?: BOMStructureEnum | null;
    /**
     * An enumerated value specifying the type of component.  Enum of Component Type:- ``Part`` - 0- ``Assembly`` - 1- ``Virtual`` - 2- ``Standard`` - 3- ``Purchased`` - 4- ``Document`` - 5
     */
    componentType?: ComponentTypeEnum | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * Indicates if a BOM component is cloaked 
     */
    isCloaked?: boolean | null;
    /**
     * The name of this component.
     */
    name?: string | null;
    /**
     * Unique data within the scope of the design file used to identify the Component. For Inventor files, the GUID used to identify the Component is used (or GUID plus VirtualComponentDefinition._PropertySetsId for Virtual components). For DWG files, the HandleID associated with the Component is used.
     */
    uniqueId?: string | null;
    /**
     * For Components with a XRefType of "external", XRefID represents the FileID of the design file associated with that component. For "internal" Components, XRefID should be set to -1.
     */
    xRefId?: string | null;
    /**
     * An enumerated value that specifies whether the Component is internal or external in relation to the design file.Enum of XRefType  Internal = 0,  External = 1
     */
    xRefType?: XRefTypeEnum | null;
}
/**
 * BOM links and revisions object. Contains BOM related links between Items.
 */
export interface BOMLinksAndRevisions extends AdditionalDataHolder, Parsable {
    /**
     * Array of BOM components in this BOM 
     */
    bOMComponents?: BOMComponent[] | null;
    /**
     * The associations between the Items.
     */
    itemBomLinks?: ItemBomLink[] | null;
    /**
     * An array of Items.
     */
    itemVersions?: ItemVersion[] | null;
    /**
     * An array of occurrences.
     */
    occurrences?: ItemBomOccurrence[] | null;
    /**
     * If true, reference designators are available.
     */
    referenceDesignatorsAvailable?: boolean | null;
}
export type BOMStructureEnum = (typeof BOMStructureEnumObject)[keyof typeof BOMStructureEnumObject];
export type BOMTypeEnum = (typeof BOMTypeEnumObject)[keyof typeof BOMTypeEnumObject];
/**
 * change order object
 */
export interface ChangeOrder extends AdditionalDataHolder, Parsable {
    /**
     * The date and time when the Change Order needs to be approved by.
     */
    approveDeadline?: string | null;
    /**
     * The closeDate property
     */
    closeDate?: string | null;
    /**
     * The date and time the Change Order was created
     */
    createDate?: string | null;
    /**
     * The description of the Change Order.
     */
    description?: string | null;
    /**
     * The entityType property
     */
    entityType?: string | null;
    /**
     * Master Id of this Change Order. The Master Id uniquely identifies this Change Order object 
     */
    id?: string | null;
    /**
     * Get if the Change Order is currently locked.
     */
    isReadOnly?: boolean | null;
    /**
     * The last time that the Change Order was modified.
     */
    lastModifiedDate?: string | null;
    /**
     * The lastModifiedUserId property
     */
    lastModifiedUserId?: string | null;
    /**
     *  the last time that the Change Order was modified.
     */
    lastTouchedDate?: string | null;
    /**
     * The descriptive name for this Change Order.The Change Order Number will be used here.
     */
    name?: string | null;
    /**
     * The Change Order number. Numbers are generated based on the Numbering Scheme.
     */
    number?: string | null;
    /**
     * Number of File Attachments
     */
    numberOfAttachments?: number | null;
    /**
     * The properties property
     */
    properties?: Property[] | null;
    /**
     * Get the name of the Change Order State.
     */
    state?: string | null;
    /**
     * The color of the state.
     */
    stateColor?: number | null;
    /**
     * The title of the Change Order
     */
    title?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Change Order collection object.
 */
export interface ChangeOrderCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: ChangeOrderCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: (ChangeOrderExtended | ChangeOrder)[] | null;
}
export interface ChangeOrderCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: ChangeOrderCollection_included_propertyDefinition | null;
}
export interface ChangeOrderCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
export type ChangeOrderCollection_results = ChangeOrderExtended | ChangeOrder;
/**
 * change order extended object
 */
export interface ChangeOrderExtended extends ChangeOrder, Parsable {
    /**
     * The assignees property
     */
    assignees?: User[] | null;
}
export type ComponentTypeEnum = (typeof ComponentTypeEnumObject)[keyof typeof ComponentTypeEnumObject];
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AccountCollection}
 */
// @ts-ignore
export function createAccountCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAccountCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Account}
 */
// @ts-ignore
export function createAccountFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAccount;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BOMComponent}
 */
// @ts-ignore
export function createBOMComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBOMComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BOMLinksAndRevisions}
 */
// @ts-ignore
export function createBOMLinksAndRevisionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBOMLinksAndRevisions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrderCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createChangeOrderCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeOrderCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrderCollection_included}
 */
// @ts-ignore
export function createChangeOrderCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeOrderCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrderExtended | ChangeOrder}
 */
// @ts-ignore
export function createChangeOrderCollection_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeOrderCollection_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrderCollection}
 */
// @ts-ignore
export function createChangeOrderCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeOrderCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrderExtended}
 */
// @ts-ignore
export function createChangeOrderExtendedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeOrderExtended;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrder}
 */
// @ts-ignore
export function createChangeOrderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoChangeOrder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CursorBasedPagination}
 */
// @ts-ignore
export function createCursorBasedPaginationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCursorBasedPagination;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ECOComment2}
 */
// @ts-ignore
export function createECOComment2FromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoECOComment2;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ECOCommentCollection}
 */
// @ts-ignore
export function createECOCommentCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoECOCommentCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ECOComment}
 */
// @ts-ignore
export function createECOCommentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoECOComment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EntityCollection_included_folder}
 */
// @ts-ignore
export function createEntityCollection_included_folderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEntityCollection_included_folder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EntityCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createEntityCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEntityCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EntityCollection_included}
 */
// @ts-ignore
export function createEntityCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEntityCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ChangeOrderExtended | ChangeOrder | FileVersionExtended | FileVersion | FolderExtended | Folder | ItemVersion | LinkEntity}
 */
// @ts-ignore
export function createEntityCollection_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEntityCollection_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EntityCollection}
 */
// @ts-ignore
export function createEntityCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEntityCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Entity}
 */
// @ts-ignore
export function createEntityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEntity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ErrorResponse}
 */
// @ts-ignore
export function createErrorResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoErrorResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileAssocCollection_included_folder}
 */
// @ts-ignore
export function createFileAssocCollection_included_folderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileAssocCollection_included_folder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileAssocCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createFileAssocCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileAssocCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileAssocCollection_included}
 */
// @ts-ignore
export function createFileAssocCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileAssocCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileAssocCollection}
 */
// @ts-ignore
export function createFileAssocCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileAssocCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileAssociation}
 */
// @ts-ignore
export function createFileAssociationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileAssociation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileObject}
 */
// @ts-ignore
export function createFileObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileObject;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersionCollection_included_folder}
 */
// @ts-ignore
export function createFileVersionCollection_included_folderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersionCollection_included_folder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersionCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createFileVersionCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersionCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersionCollection_included}
 */
// @ts-ignore
export function createFileVersionCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersionCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersionExtended | FileVersion}
 */
// @ts-ignore
export function createFileVersionCollection_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersionCollection_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersionCollection}
 */
// @ts-ignore
export function createFileVersionCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersionCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersionExtended}
 */
// @ts-ignore
export function createFileVersionExtendedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersionExtended;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileVersion}
 */
// @ts-ignore
export function createFileVersionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileVersion;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FolderCollection_included_folder}
 */
// @ts-ignore
export function createFolderCollection_included_folderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolderCollection_included_folder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FolderCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createFolderCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolderCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FolderCollection_included}
 */
// @ts-ignore
export function createFolderCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolderCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FolderExtended | Folder}
 */
// @ts-ignore
export function createFolderCollection_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolderCollection_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FolderCollection}
 */
// @ts-ignore
export function createFolderCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolderCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FolderExtended}
 */
// @ts-ignore
export function createFolderExtendedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolderExtended;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Folder}
 */
// @ts-ignore
export function createFolderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFolder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GroupCollection}
 */
// @ts-ignore
export function createGroupCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGroupCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GroupExtended}
 */
// @ts-ignore
export function createGroupExtendedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGroupExtended;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Group}
 */
// @ts-ignore
export function createGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGroup;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemAssociatedFileVersionCollection_included_folder}
 */
// @ts-ignore
export function createItemAssociatedFileVersionCollection_included_folderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemAssociatedFileVersionCollection_included_folder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemAssociatedFileVersionCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createItemAssociatedFileVersionCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemAssociatedFileVersionCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemAssociatedFileVersionCollection_included}
 */
// @ts-ignore
export function createItemAssociatedFileVersionCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemAssociatedFileVersionCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemAssociatedFileVersionCollection}
 */
// @ts-ignore
export function createItemAssociatedFileVersionCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemAssociatedFileVersionCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemAssociatedFileVersion}
 */
// @ts-ignore
export function createItemAssociatedFileVersionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemAssociatedFileVersion;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemBomLink}
 */
// @ts-ignore
export function createItemBomLinkFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemBomLink;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemBomOccurrence}
 */
// @ts-ignore
export function createItemBomOccurrenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemBomOccurrence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createItemCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemCollection_included}
 */
// @ts-ignore
export function createItemCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemCollection}
 */
// @ts-ignore
export function createItemCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Item}
 */
// @ts-ignore
export function createItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemVersionCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createItemVersionCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemVersionCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemVersionCollection_included}
 */
// @ts-ignore
export function createItemVersionCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemVersionCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemVersionCollection}
 */
// @ts-ignore
export function createItemVersionCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemVersionCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ItemVersion}
 */
// @ts-ignore
export function createItemVersionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoItemVersion;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Job_params}
 */
// @ts-ignore
export function createJob_paramsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJob_params;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Job}
 */
// @ts-ignore
export function createJobFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoJob;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LinkCollection_included_folder}
 */
// @ts-ignore
export function createLinkCollection_included_folderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLinkCollection_included_folder;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LinkCollection_included_propertyDefinition}
 */
// @ts-ignore
export function createLinkCollection_included_propertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLinkCollection_included_propertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LinkCollection_included}
 */
// @ts-ignore
export function createLinkCollection_includedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLinkCollection_included;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LinkCollection}
 */
// @ts-ignore
export function createLinkCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLinkCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LinkEntity}
 */
// @ts-ignore
export function createLinkEntityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLinkEntity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MarkupCollection}
 */
// @ts-ignore
export function createMarkupCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarkupCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Markup}
 */
// @ts-ignore
export function createMarkupFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMarkup;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProfileAttributeDefinitionCollection}
 */
// @ts-ignore
export function createProfileAttributeDefinitionCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProfileAttributeDefinitionCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProfileAttributeDefinition}
 */
// @ts-ignore
export function createProfileAttributeDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProfileAttributeDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProfileAttribute}
 */
// @ts-ignore
export function createProfileAttributeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProfileAttribute;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PropertyDefinitionExtended | PropertyDefinition}
 */
// @ts-ignore
export function createPropertyDefinitionCollection_resultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPropertyDefinitionCollection_results;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PropertyDefinitionCollection}
 */
// @ts-ignore
export function createPropertyDefinitionCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPropertyDefinitionCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PropertyDefinitionExtended}
 */
// @ts-ignore
export function createPropertyDefinitionExtendedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPropertyDefinitionExtended;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PropertyDefinition}
 */
// @ts-ignore
export function createPropertyDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPropertyDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Property}
 */
// @ts-ignore
export function createPropertyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProperty;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RoleCollection}
 */
// @ts-ignore
export function createRoleCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRoleCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Role}
 */
// @ts-ignore
export function createRoleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRole;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchCriteria}
 */
// @ts-ignore
export function createSearchCriteriaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchCriteria;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Session}
 */
// @ts-ignore
export function createSessionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSession;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SortCriteria}
 */
// @ts-ignore
export function createSortCriteriaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSortCriteria;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserCollection}
 */
// @ts-ignore
export function createUserCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserExtended_attributes}
 */
// @ts-ignore
export function createUserExtended_attributesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserExtended_attributes;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserExtended}
 */
// @ts-ignore
export function createUserExtendedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserExtended;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {User}
 */
// @ts-ignore
export function createUserFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUser;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VaultCollection}
 */
// @ts-ignore
export function createVaultCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVaultCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Vault}
 */
// @ts-ignore
export function createVaultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVault;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VaultOptionCollection}
 */
// @ts-ignore
export function createVaultOptionCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVaultOptionCollection;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VaultOption}
 */
// @ts-ignore
export function createVaultOptionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVaultOption;
}
/**
 * Cursor-based pagination object.
 */
export interface CursorBasedPagination extends AdditionalDataHolder, Parsable {
    /**
     * Indicates the current status of the indexing engine. This status helps users understand whether the indexing operation is complete or still in progress. This is particularly important for customers with large datasets, as indexing can take a considerable amount of time to complete.The statuses include:- ``IndexingComplete`` - All properties and content have been indexed.- ``IndexingProperties`` - File properties are currently being indexed.- ``IndexingContent`` - File content is currently being indexed.- ``NA`` - Not applicable as data not retrieved from index.Note: When the status is either 'IndexingProperties' or 'IndexingContent', the search results are incomplete because the indexes are still being created. Complete search results will be available once fully indexed.
     */
    indexingStatus?: IndexingStatus | null;
    /**
     * Limit requested for the current search
     */
    limit?: number | null;
    /**
     * Used to continue a search if the results are too large for a single call. Url has bookmark string embedded for subsequent calls on that search
     */
    nextUrl?: string | null;
    /**
     * Number of total hits. If this value is larger than the objects returned, then multiple searches will have to be performed to get the complete result set.
     */
    totalResults?: number | null;
}
/**
 * The deserialization information for the current model
 * @param Account The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAccount(account: Partial<Account> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountEmail": n => { account.accountEmail = n.getStringValue(); },
        "accountName": n => { account.accountName = n.getStringValue(); },
        "id": n => { account.id = n.getStringValue(); },
        "isActive": n => { account.isActive = n.getBooleanValue(); },
        "url": n => { account.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AccountCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAccountCollection(accountCollection: Partial<AccountCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { accountCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { accountCollection.results = n.getCollectionOfObjectValues<Account>(createAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param BOMComponent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBOMComponent(bOMComponent: Partial<BOMComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "baseQty": n => { bOMComponent.baseQty = n.getStringValue(); },
        "baseUOM": n => { bOMComponent.baseUOM = n.getStringValue(); },
        "bOMStructure": n => { bOMComponent.bOMStructure = n.getEnumValue<BOMStructureEnum>(BOMStructureEnumObject); },
        "componentType": n => { bOMComponent.componentType = n.getEnumValue<ComponentTypeEnum>(ComponentTypeEnumObject); },
        "id": n => { bOMComponent.id = n.getStringValue(); },
        "isCloaked": n => { bOMComponent.isCloaked = n.getBooleanValue(); },
        "name": n => { bOMComponent.name = n.getStringValue(); },
        "uniqueId": n => { bOMComponent.uniqueId = n.getStringValue(); },
        "xRefId": n => { bOMComponent.xRefId = n.getStringValue(); },
        "xRefType": n => { bOMComponent.xRefType = n.getEnumValue<XRefTypeEnum>(XRefTypeEnumObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param BOMLinksAndRevisions The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBOMLinksAndRevisions(bOMLinksAndRevisions: Partial<BOMLinksAndRevisions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bOMComponents": n => { bOMLinksAndRevisions.bOMComponents = n.getCollectionOfObjectValues<BOMComponent>(createBOMComponentFromDiscriminatorValue); },
        "itemBomLinks": n => { bOMLinksAndRevisions.itemBomLinks = n.getCollectionOfObjectValues<ItemBomLink>(createItemBomLinkFromDiscriminatorValue); },
        "itemVersions": n => { bOMLinksAndRevisions.itemVersions = n.getCollectionOfObjectValues<ItemVersion>(createItemVersionFromDiscriminatorValue); },
        "occurrences": n => { bOMLinksAndRevisions.occurrences = n.getCollectionOfObjectValues<ItemBomOccurrence>(createItemBomOccurrenceFromDiscriminatorValue); },
        "referenceDesignatorsAvailable": n => { bOMLinksAndRevisions.referenceDesignatorsAvailable = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ChangeOrder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeOrder(changeOrder: Partial<ChangeOrder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "approveDeadline": n => { changeOrder.approveDeadline = n.getStringValue(); },
        "closeDate": n => { changeOrder.closeDate = n.getStringValue(); },
        "createDate": n => { changeOrder.createDate = n.getStringValue(); },
        "description": n => { changeOrder.description = n.getStringValue(); },
        "entityType": n => { changeOrder.entityType = n.getStringValue(); },
        "id": n => { changeOrder.id = n.getStringValue(); },
        "isReadOnly": n => { changeOrder.isReadOnly = n.getBooleanValue(); },
        "lastModifiedDate": n => { changeOrder.lastModifiedDate = n.getStringValue(); },
        "lastModifiedUserId": n => { changeOrder.lastModifiedUserId = n.getStringValue(); },
        "lastTouchedDate": n => { changeOrder.lastTouchedDate = n.getStringValue(); },
        "name": n => { changeOrder.name = n.getStringValue(); },
        "number": n => { changeOrder.number = n.getStringValue(); },
        "numberOfAttachments": n => { changeOrder.numberOfAttachments = n.getNumberValue(); },
        "properties": n => { changeOrder.properties = n.getCollectionOfObjectValues<Property>(createPropertyFromDiscriminatorValue); },
        "state": n => { changeOrder.state = n.getStringValue(); },
        "stateColor": n => { changeOrder.stateColor = n.getNumberValue(); },
        "title": n => { changeOrder.title = n.getStringValue(); },
        "url": n => { changeOrder.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ChangeOrderCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeOrderCollection(changeOrderCollection: Partial<ChangeOrderCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { changeOrderCollection.included = n.getObjectValue<ChangeOrderCollection_included>(createChangeOrderCollection_includedFromDiscriminatorValue); },
        "pagination": n => { changeOrderCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { changeOrderCollection.results = n.getCollectionOfObjectValues<ChangeOrderExtended>(createChangeOrderExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<ChangeOrder>(createChangeOrderFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ChangeOrderCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeOrderCollection_included(changeOrderCollection_included: Partial<ChangeOrderCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "propertyDefinition": n => { changeOrderCollection_included.propertyDefinition = n.getObjectValue<ChangeOrderCollection_included_propertyDefinition>(createChangeOrderCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ChangeOrderCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeOrderCollection_included_propertyDefinition(changeOrderCollection_included_propertyDefinition: Partial<ChangeOrderCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param ChangeOrderCollection_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeOrderCollection_results(changeOrderCollection_results: Partial<ChangeOrderExtended | ChangeOrder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoChangeOrderExtended(changeOrderCollection_results as ChangeOrderExtended),
        ...deserializeIntoChangeOrder(changeOrderCollection_results as ChangeOrder),
    }
}
/**
 * The deserialization information for the current model
 * @param ChangeOrderExtended The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoChangeOrderExtended(changeOrderExtended: Partial<ChangeOrderExtended> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoChangeOrder(changeOrderExtended),
        "assignees": n => { changeOrderExtended.assignees = n.getCollectionOfObjectValues<User>(createUserFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CursorBasedPagination The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCursorBasedPagination(cursorBasedPagination: Partial<CursorBasedPagination> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "indexingStatus": n => { cursorBasedPagination.indexingStatus = n.getEnumValue<IndexingStatus>(IndexingStatusObject); },
        "limit": n => { cursorBasedPagination.limit = n.getNumberValue(); },
        "nextUrl": n => { cursorBasedPagination.nextUrl = n.getStringValue(); },
        "totalResults": n => { cursorBasedPagination.totalResults = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ECOComment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoECOComment(eCOComment: Partial<ECOComment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createDate": n => { eCOComment.createDate = n.getStringValue(); },
        "createUserName": n => { eCOComment.createUserName = n.getStringValue(); },
        "id": n => { eCOComment.id = n.getStringValue(); },
        "message": n => { eCOComment.message = n.getStringValue(); },
        "numberOfAttachments": n => { eCOComment.numberOfAttachments = n.getNumberValue(); },
        "parent": n => { eCOComment.parent = n.getObjectValue<ECOComment2>(createECOComment2FromDiscriminatorValue); },
        "replies": n => { eCOComment.replies = n.getCollectionOfObjectValues<ECOComment2>(createECOComment2FromDiscriminatorValue); },
        "state": n => { eCOComment.state = n.getStringValue(); },
        "subject": n => { eCOComment.subject = n.getStringValue(); },
        "url": n => { eCOComment.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ECOComment2 The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoECOComment2(eCOComment2: Partial<ECOComment2> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createDate": n => { eCOComment2.createDate = n.getStringValue(); },
        "createUserName": n => { eCOComment2.createUserName = n.getStringValue(); },
        "id": n => { eCOComment2.id = n.getStringValue(); },
        "message": n => { eCOComment2.message = n.getStringValue(); },
        "numberOfAttachments": n => { eCOComment2.numberOfAttachments = n.getNumberValue(); },
        "parent": n => { eCOComment2.parent = n.getObjectValue<ECOComment>(createECOCommentFromDiscriminatorValue); },
        "replies": n => { eCOComment2.replies = n.getCollectionOfObjectValues<ECOComment>(createECOCommentFromDiscriminatorValue); },
        "state": n => { eCOComment2.state = n.getStringValue(); },
        "subject": n => { eCOComment2.subject = n.getStringValue(); },
        "url": n => { eCOComment2.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ECOCommentCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoECOCommentCollection(eCOCommentCollection: Partial<ECOCommentCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { eCOCommentCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { eCOCommentCollection.results = n.getCollectionOfObjectValues<ECOComment>(createECOCommentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Entity The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntity(entity: Partial<Entity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { entity.category = n.getStringValue(); },
        "categoryColor": n => { entity.categoryColor = n.getNumberValue(); },
        "checkinDate": n => { entity.checkinDate = n.getStringValue(); },
        "checkoutDate": n => { entity.checkoutDate = n.getStringValue(); },
        "checkoutUserName": n => { entity.checkoutUserName = n.getStringValue(); },
        "children": n => { entity.children = n.getStringValue(); },
        "createDate": n => { entity.createDate = n.getStringValue(); },
        "createUserName": n => { entity.createUserName = n.getStringValue(); },
        "entityType": n => { entity.entityType = n.getStringValue(); },
        "file": n => { entity.file = n.getObjectValue<FileObject>(createFileObjectFromDiscriminatorValue); },
        "fullName": n => { entity.fullName = n.getStringValue(); },
        "hasVisualizationAttachment": n => { entity.hasVisualizationAttachment = n.getBooleanValue(); },
        "id": n => { entity.id = n.getStringValue(); },
        "isCheckedOut": n => { entity.isCheckedOut = n.getBooleanValue(); },
        "isCloaked": n => { entity.isCloaked = n.getBooleanValue(); },
        "isLibrary": n => { entity.isLibrary = n.getBooleanValue(); },
        "isReadOnly": n => { entity.isReadOnly = n.getBooleanValue(); },
        "item": n => { entity.item = n.getObjectValue<Item>(createItemFromDiscriminatorValue); },
        "lastModifiedDate": n => { entity.lastModifiedDate = n.getStringValue(); },
        "name": n => { entity.name = n.getStringValue(); },
        "number": n => { entity.number = n.getStringValue(); },
        "parent": n => { entity.parent = n.getObjectValue<Folder>(createFolderFromDiscriminatorValue); },
        "parentFolderId": n => { entity.parentFolderId = n.getStringValue(); },
        "properties": n => { entity.properties = n.getCollectionOfObjectValues<Property>(createPropertyFromDiscriminatorValue); },
        "revision": n => { entity.revision = n.getStringValue(); },
        "size": n => { entity.size = n.getNumberValue(); },
        "state": n => { entity.state = n.getStringValue(); },
        "stateColor": n => { entity.stateColor = n.getNumberValue(); },
        "subfolderCount": n => { entity.subfolderCount = n.getNumberValue(); },
        "url": n => { entity.url = n.getStringValue(); },
        "version": n => { entity.version = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param EntityCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntityCollection(entityCollection: Partial<EntityCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { entityCollection.included = n.getObjectValue<EntityCollection_included>(createEntityCollection_includedFromDiscriminatorValue); },
        "pagination": n => { entityCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { entityCollection.results = n.getCollectionOfObjectValues<ChangeOrderExtended>(createChangeOrderExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<ChangeOrder>(createChangeOrderFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<FileVersionExtended>(createFileVersionExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<FileVersion>(createFileVersionFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<FolderExtended>(createFolderExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<Folder>(createFolderFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<ItemVersion>(createItemVersionFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<LinkEntity>(createLinkEntityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EntityCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntityCollection_included(entityCollection_included: Partial<EntityCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "folder": n => { entityCollection_included.folder = n.getObjectValue<EntityCollection_included_folder>(createEntityCollection_included_folderFromDiscriminatorValue); },
        "propertyDefinition": n => { entityCollection_included.propertyDefinition = n.getObjectValue<EntityCollection_included_propertyDefinition>(createEntityCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EntityCollection_included_folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntityCollection_included_folder(entityCollection_included_folder: Partial<EntityCollection_included_folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param EntityCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntityCollection_included_propertyDefinition(entityCollection_included_propertyDefinition: Partial<EntityCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param EntityCollection_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEntityCollection_results(entityCollection_results: Partial<ChangeOrderExtended | ChangeOrder | FileVersionExtended | FileVersion | FolderExtended | Folder | ItemVersion | LinkEntity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoChangeOrderExtended(entityCollection_results as ChangeOrderExtended),
        ...deserializeIntoChangeOrder(entityCollection_results as ChangeOrder),
        ...deserializeIntoFileVersionExtended(entityCollection_results as FileVersionExtended),
        ...deserializeIntoFileVersion(entityCollection_results as FileVersion),
        ...deserializeIntoFolderExtended(entityCollection_results as FolderExtended),
        ...deserializeIntoFolder(entityCollection_results as Folder),
        ...deserializeIntoItemVersion(entityCollection_results as ItemVersion),
        ...deserializeIntoLinkEntity(entityCollection_results as LinkEntity),
    }
}
/**
 * The deserialization information for the current model
 * @param ErrorResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoErrorResponse(errorResponse: Partial<ErrorResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { errorResponse.detail = n.getStringValue(); },
        "errorCode": n => { errorResponse.errorCode = n.getStringValue(); },
        "params": n => { errorResponse.params = n.getCollectionOfPrimitiveValues<string>(); },
        "statusCode": n => { errorResponse.statusCode = n.getNumberValue(); },
        "title": n => { errorResponse.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileAssocCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileAssocCollection(fileAssocCollection: Partial<FileAssocCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { fileAssocCollection.included = n.getObjectValue<FileAssocCollection_included>(createFileAssocCollection_includedFromDiscriminatorValue); },
        "pagination": n => { fileAssocCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { fileAssocCollection.results = n.getCollectionOfObjectValues<FileAssociation>(createFileAssociationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileAssocCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileAssocCollection_included(fileAssocCollection_included: Partial<FileAssocCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "folder": n => { fileAssocCollection_included.folder = n.getObjectValue<FileAssocCollection_included_folder>(createFileAssocCollection_included_folderFromDiscriminatorValue); },
        "propertyDefinition": n => { fileAssocCollection_included.propertyDefinition = n.getObjectValue<FileAssocCollection_included_propertyDefinition>(createFileAssocCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileAssocCollection_included_folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileAssocCollection_included_folder(fileAssocCollection_included_folder: Partial<FileAssocCollection_included_folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param FileAssocCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileAssocCollection_included_propertyDefinition(fileAssocCollection_included_propertyDefinition: Partial<FileAssocCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param FileAssociation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileAssociation(fileAssociation: Partial<FileAssociation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "childFile": n => { fileAssociation.childFile = n.getObjectValue<FileVersionExtended>(createFileVersionExtendedFromDiscriminatorValue); },
        "fileAssocType": n => { fileAssociation.fileAssocType = n.getEnumValue<FileAssociationTypeEnum>(FileAssociationTypeEnumObject); },
        "parentFile": n => { fileAssociation.parentFile = n.getObjectValue<FileVersionExtended>(createFileVersionExtendedFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileObject The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileObject(fileObject: Partial<FileObject> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "fileVersion": n => { fileObject.fileVersion = n.getObjectValue<FileVersionExtended>(createFileVersionExtendedFromDiscriminatorValue); },
        "id": n => { fileObject.id = n.getStringValue(); },
        "url": n => { fileObject.url = n.getStringValue(); },
        "versionType": n => { fileObject.versionType = n.getEnumValue<VersionTypeEnum>(VersionTypeEnumObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersion The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersion(fileVersion: Partial<FileVersion> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { fileVersion.category = n.getStringValue(); },
        "categoryColor": n => { fileVersion.categoryColor = n.getNumberValue(); },
        "checkinDate": n => { fileVersion.checkinDate = n.getStringValue(); },
        "checkoutDate": n => { fileVersion.checkoutDate = n.getStringValue(); },
        "checkoutUserName": n => { fileVersion.checkoutUserName = n.getStringValue(); },
        "classification": n => { fileVersion.classification = n.getEnumValue<FileClassificationEnum>(FileClassificationEnumObject); },
        "createDate": n => { fileVersion.createDate = n.getStringValue(); },
        "createUserName": n => { fileVersion.createUserName = n.getStringValue(); },
        "entityType": n => { fileVersion.entityType = n.getStringValue(); },
        "file": n => { fileVersion.file = n.getObjectValue<FileObject>(createFileObjectFromDiscriminatorValue); },
        "hasVisualizationAttachment": n => { fileVersion.hasVisualizationAttachment = n.getBooleanValue(); },
        "id": n => { fileVersion.id = n.getStringValue(); },
        "isCheckedOut": n => { fileVersion.isCheckedOut = n.getBooleanValue(); },
        "isCloaked": n => { fileVersion.isCloaked = n.getBooleanValue(); },
        "isOnSite": n => { fileVersion.isOnSite = n.getBooleanValue(); },
        "isReadOnly": n => { fileVersion.isReadOnly = n.getBooleanValue(); },
        "lastModifiedDate": n => { fileVersion.lastModifiedDate = n.getStringValue(); },
        "name": n => { fileVersion.name = n.getStringValue(); },
        "parent": n => { fileVersion.parent = n.getObjectValue<Folder>(createFolderFromDiscriminatorValue); },
        "parentFolderId": n => { fileVersion.parentFolderId = n.getStringValue(); },
        "properties": n => { fileVersion.properties = n.getCollectionOfObjectValues<Property>(createPropertyFromDiscriminatorValue); },
        "revision": n => { fileVersion.revision = n.getStringValue(); },
        "size": n => { fileVersion.size = n.getNumberValue(); },
        "state": n => { fileVersion.state = n.getStringValue(); },
        "stateColor": n => { fileVersion.stateColor = n.getNumberValue(); },
        "url": n => { fileVersion.url = n.getStringValue(); },
        "version": n => { fileVersion.version = n.getNumberValue(); },
        "visualizationAttachmentStatus": n => { fileVersion.visualizationAttachmentStatus = n.getEnumValue<FileVisualizationAttachmentStatusEnum>(FileVisualizationAttachmentStatusEnumObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersionCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersionCollection(fileVersionCollection: Partial<FileVersionCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { fileVersionCollection.included = n.getObjectValue<FileVersionCollection_included>(createFileVersionCollection_includedFromDiscriminatorValue); },
        "pagination": n => { fileVersionCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { fileVersionCollection.results = n.getCollectionOfObjectValues<FileVersionExtended>(createFileVersionExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<FileVersion>(createFileVersionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersionCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersionCollection_included(fileVersionCollection_included: Partial<FileVersionCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "folder": n => { fileVersionCollection_included.folder = n.getObjectValue<FileVersionCollection_included_folder>(createFileVersionCollection_included_folderFromDiscriminatorValue); },
        "propertyDefinition": n => { fileVersionCollection_included.propertyDefinition = n.getObjectValue<FileVersionCollection_included_propertyDefinition>(createFileVersionCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersionCollection_included_folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersionCollection_included_folder(fileVersionCollection_included_folder: Partial<FileVersionCollection_included_folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersionCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersionCollection_included_propertyDefinition(fileVersionCollection_included_propertyDefinition: Partial<FileVersionCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersionCollection_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersionCollection_results(fileVersionCollection_results: Partial<FileVersionExtended | FileVersion> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFileVersionExtended(fileVersionCollection_results as FileVersionExtended),
        ...deserializeIntoFileVersion(fileVersionCollection_results as FileVersion),
    }
}
/**
 * The deserialization information for the current model
 * @param FileVersionExtended The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileVersionExtended(fileVersionExtended: Partial<FileVersionExtended> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFileVersion(fileVersionExtended),
        "checkoutUser": n => { fileVersionExtended.checkoutUser = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolder(folder: Partial<Folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { folder.category = n.getStringValue(); },
        "categoryColor": n => { folder.categoryColor = n.getNumberValue(); },
        "children": n => { folder.children = n.getStringValue(); },
        "createDate": n => { folder.createDate = n.getStringValue(); },
        "createUserName": n => { folder.createUserName = n.getStringValue(); },
        "fullName": n => { folder.fullName = n.getStringValue(); },
        "id": n => { folder.id = n.getStringValue(); },
        "isCloaked": n => { folder.isCloaked = n.getBooleanValue(); },
        "isLibrary": n => { folder.isLibrary = n.getBooleanValue(); },
        "isReadOnly": n => { folder.isReadOnly = n.getBooleanValue(); },
        "name": n => { folder.name = n.getStringValue(); },
        "properties": n => { folder.properties = n.getCollectionOfObjectValues<Property>(createPropertyFromDiscriminatorValue); },
        "state": n => { folder.state = n.getStringValue(); },
        "stateColor": n => { folder.stateColor = n.getNumberValue(); },
        "subfolderCount": n => { folder.subfolderCount = n.getNumberValue(); },
        "url": n => { folder.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FolderCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolderCollection(folderCollection: Partial<FolderCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { folderCollection.included = n.getObjectValue<FolderCollection_included>(createFolderCollection_includedFromDiscriminatorValue); },
        "pagination": n => { folderCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { folderCollection.results = n.getCollectionOfObjectValues<FolderExtended>(createFolderExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<Folder>(createFolderFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FolderCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolderCollection_included(folderCollection_included: Partial<FolderCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "folder": n => { folderCollection_included.folder = n.getObjectValue<FolderCollection_included_folder>(createFolderCollection_included_folderFromDiscriminatorValue); },
        "propertyDefinition": n => { folderCollection_included.propertyDefinition = n.getObjectValue<FolderCollection_included_propertyDefinition>(createFolderCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FolderCollection_included_folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolderCollection_included_folder(folderCollection_included_folder: Partial<FolderCollection_included_folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param FolderCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolderCollection_included_propertyDefinition(folderCollection_included_propertyDefinition: Partial<FolderCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param FolderCollection_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolderCollection_results(folderCollection_results: Partial<FolderExtended | Folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFolderExtended(folderCollection_results as FolderExtended),
        ...deserializeIntoFolder(folderCollection_results as Folder),
    }
}
/**
 * The deserialization information for the current model
 * @param FolderExtended The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFolderExtended(folderExtended: Partial<FolderExtended> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFolder(folderExtended),
        "parent": n => { folderExtended.parent = n.getObjectValue<Folder>(createFolderFromDiscriminatorValue); },
        "parentFolderId": n => { folderExtended.parentFolderId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Group The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGroup(group: Partial<Group> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "authTypes": n => { group.authTypes = n.getEnumValue<AuthTypeEnum>(AuthTypeEnumObject); },
        "createDate": n => { group.createDate = n.getStringValue(); },
        "emailDL": n => { group.emailDL = n.getStringValue(); },
        "id": n => { group.id = n.getStringValue(); },
        "isActive": n => { group.isActive = n.getBooleanValue(); },
        "name": n => { group.name = n.getStringValue(); },
        "systemName": n => { group.systemName = n.getStringValue(); },
        "url": n => { group.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param GroupCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGroupCollection(groupCollection: Partial<GroupCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { groupCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { groupCollection.results = n.getCollectionOfObjectValues<Group>(createGroupFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param GroupExtended The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGroupExtended(groupExtended: Partial<GroupExtended> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoGroup(groupExtended),
        "accounts": n => { groupExtended.accounts = n.getCollectionOfObjectValues<Account>(createAccountFromDiscriminatorValue); },
        "attributes": n => { groupExtended.attributes = n.getCollectionOfObjectValues<ProfileAttribute>(createProfileAttributeFromDiscriminatorValue); },
        "createUser": n => { groupExtended.createUser = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "groupManagers": n => { groupExtended.groupManagers = n.getCollectionOfObjectValues<User>(createUserFromDiscriminatorValue); },
        "groups": n => { groupExtended.groups = n.getCollectionOfObjectValues<Group>(createGroupFromDiscriminatorValue); },
        "roles": n => { groupExtended.roles = n.getCollectionOfObjectValues<Role>(createRoleFromDiscriminatorValue); },
        "users": n => { groupExtended.users = n.getCollectionOfObjectValues<User>(createUserFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Item The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItem(item: Partial<Item> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { item.id = n.getStringValue(); },
        "itemVersion": n => { item.itemVersion = n.getObjectValue<ItemVersion>(createItemVersionFromDiscriminatorValue); },
        "url": n => { item.url = n.getStringValue(); },
        "versionType": n => { item.versionType = n.getEnumValue<VersionTypeEnum>(VersionTypeEnumObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemAssociatedFileVersion The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemAssociatedFileVersion(itemAssociatedFileVersion: Partial<ItemAssociatedFileVersion> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "file": n => { itemAssociatedFileVersion.file = n.getObjectValue<FileVersionExtended>(createFileVersionExtendedFromDiscriminatorValue); },
        "itemAssociationType": n => { itemAssociatedFileVersion.itemAssociationType = n.getEnumValue<ItemAssociationTypeEnum>(ItemAssociationTypeEnumObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemAssociatedFileVersionCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemAssociatedFileVersionCollection(itemAssociatedFileVersionCollection: Partial<ItemAssociatedFileVersionCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { itemAssociatedFileVersionCollection.included = n.getObjectValue<ItemAssociatedFileVersionCollection_included>(createItemAssociatedFileVersionCollection_includedFromDiscriminatorValue); },
        "pagination": n => { itemAssociatedFileVersionCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { itemAssociatedFileVersionCollection.results = n.getCollectionOfObjectValues<ItemAssociatedFileVersion>(createItemAssociatedFileVersionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemAssociatedFileVersionCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemAssociatedFileVersionCollection_included(itemAssociatedFileVersionCollection_included: Partial<ItemAssociatedFileVersionCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "folder": n => { itemAssociatedFileVersionCollection_included.folder = n.getObjectValue<ItemAssociatedFileVersionCollection_included_folder>(createItemAssociatedFileVersionCollection_included_folderFromDiscriminatorValue); },
        "propertyDefinition": n => { itemAssociatedFileVersionCollection_included.propertyDefinition = n.getObjectValue<ItemAssociatedFileVersionCollection_included_propertyDefinition>(createItemAssociatedFileVersionCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemAssociatedFileVersionCollection_included_folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemAssociatedFileVersionCollection_included_folder(itemAssociatedFileVersionCollection_included_folder: Partial<ItemAssociatedFileVersionCollection_included_folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param ItemAssociatedFileVersionCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemAssociatedFileVersionCollection_included_propertyDefinition(itemAssociatedFileVersionCollection_included_propertyDefinition: Partial<ItemAssociatedFileVersionCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param ItemBomLink The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemBomLink(itemBomLink: Partial<ItemBomLink> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bomComponentId": n => { itemBomLink.bomComponentId = n.getStringValue(); },
        "bomLinkMasterId": n => { itemBomLink.bomLinkMasterId = n.getStringValue(); },
        "bomOrder": n => { itemBomLink.bomOrder = n.getStringValue(); },
        "cad": n => { itemBomLink.cad = n.getBooleanValue(); },
        "childHasChildren": n => { itemBomLink.childHasChildren = n.getBooleanValue(); },
        "childItemId": n => { itemBomLink.childItemId = n.getStringValue(); },
        "childMasterAndRefDesMaster": n => { itemBomLink.childMasterAndRefDesMaster = n.getStringValue(); },
        "groupedRow": n => { itemBomLink.groupedRow = n.getBooleanValue(); },
        "groupId": n => { itemBomLink.groupId = n.getStringValue(); },
        "id": n => { itemBomLink.id = n.getStringValue(); },
        "included": n => { itemBomLink.included = n.getBooleanValue(); },
        "instCount": n => { itemBomLink.instCount = n.getStringValue(); },
        "isStatic": n => { itemBomLink.isStatic = n.getBooleanValue(); },
        "parentItemId": n => { itemBomLink.parentItemId = n.getStringValue(); },
        "parentMasterChildMasterAndRefDesMaster": n => { itemBomLink.parentMasterChildMasterAndRefDesMaster = n.getStringValue(); },
        "positionNumber": n => { itemBomLink.positionNumber = n.getStringValue(); },
        "properties": n => { itemBomLink.properties = n.getCollectionOfObjectValues<Property>(createPropertyFromDiscriminatorValue); },
        "quantity": n => { itemBomLink.quantity = n.getStringValue(); },
        "refDesId": n => { itemBomLink.refDesId = n.getStringValue(); },
        "units": n => { itemBomLink.units = n.getStringValue(); },
        "unitSize": n => { itemBomLink.unitSize = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemBomOccurrence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemBomOccurrence(itemBomOccurrence: Partial<ItemBomOccurrence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bomLinkMasterId": n => { itemBomOccurrence.bomLinkMasterId = n.getStringValue(); },
        "detailId": n => { itemBomOccurrence.detailId = n.getStringValue(); },
        "id": n => { itemBomOccurrence.id = n.getStringValue(); },
        "parentOccurrenceId": n => { itemBomOccurrence.parentOccurrenceId = n.getStringValue(); },
        "path": n => { itemBomOccurrence.path = n.getStringValue(); },
        "position": n => { itemBomOccurrence.position = n.getStringValue(); },
        "rootItemId": n => { itemBomOccurrence.rootItemId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemCollection(itemCollection: Partial<ItemCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { itemCollection.included = n.getObjectValue<ItemCollection_included>(createItemCollection_includedFromDiscriminatorValue); },
        "pagination": n => { itemCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { itemCollection.results = n.getCollectionOfObjectValues<Item>(createItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemCollection_included(itemCollection_included: Partial<ItemCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "propertyDefinition": n => { itemCollection_included.propertyDefinition = n.getObjectValue<ItemCollection_included_propertyDefinition>(createItemCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemCollection_included_propertyDefinition(itemCollection_included_propertyDefinition: Partial<ItemCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param ItemVersion The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemVersion(itemVersion: Partial<ItemVersion> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { itemVersion.category = n.getStringValue(); },
        "categoryColor": n => { itemVersion.categoryColor = n.getNumberValue(); },
        "comment": n => { itemVersion.comment = n.getStringValue(); },
        "entityType": n => { itemVersion.entityType = n.getStringValue(); },
        "id": n => { itemVersion.id = n.getStringValue(); },
        "isCloaked": n => { itemVersion.isCloaked = n.getBooleanValue(); },
        "isLatestObsolete": n => { itemVersion.isLatestObsolete = n.getBooleanValue(); },
        "isReadOnly": n => { itemVersion.isReadOnly = n.getBooleanValue(); },
        "item": n => { itemVersion.item = n.getObjectValue<Item>(createItemFromDiscriminatorValue); },
        "name": n => { itemVersion.name = n.getStringValue(); },
        "number": n => { itemVersion.number = n.getStringValue(); },
        "properties": n => { itemVersion.properties = n.getCollectionOfObjectValues<Property>(createPropertyFromDiscriminatorValue); },
        "revision": n => { itemVersion.revision = n.getStringValue(); },
        "state": n => { itemVersion.state = n.getStringValue(); },
        "stateColor": n => { itemVersion.stateColor = n.getNumberValue(); },
        "title": n => { itemVersion.title = n.getStringValue(); },
        "url": n => { itemVersion.url = n.getStringValue(); },
        "version": n => { itemVersion.version = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemVersionCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemVersionCollection(itemVersionCollection: Partial<ItemVersionCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { itemVersionCollection.included = n.getObjectValue<ItemVersionCollection_included>(createItemVersionCollection_includedFromDiscriminatorValue); },
        "pagination": n => { itemVersionCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { itemVersionCollection.results = n.getCollectionOfObjectValues<ItemVersion>(createItemVersionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemVersionCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemVersionCollection_included(itemVersionCollection_included: Partial<ItemVersionCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "propertyDefinition": n => { itemVersionCollection_included.propertyDefinition = n.getObjectValue<ItemVersionCollection_included_propertyDefinition>(createItemVersionCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ItemVersionCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoItemVersionCollection_included_propertyDefinition(itemVersionCollection_included_propertyDefinition: Partial<ItemVersionCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param Job The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJob(job: Partial<Job> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { job.description = n.getStringValue(); },
        "id": n => { job.id = n.getStringValue(); },
        "isOnSite": n => { job.isOnSite = n.getStringValue(); },
        "jobType": n => { job.jobType = n.getStringValue(); },
        "params": n => { job.params = n.getObjectValue<Job_params>(createJob_paramsFromDiscriminatorValue); },
        "priority": n => { job.priority = n.getNumberValue(); },
        "status": n => { job.status = n.getEnumValue<Job_status>(Job_statusObject); },
        "url": n => { job.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Job_params The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoJob_params(job_params: Partial<Job_params> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param LinkCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLinkCollection(linkCollection: Partial<LinkCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "included": n => { linkCollection.included = n.getObjectValue<LinkCollection_included>(createLinkCollection_includedFromDiscriminatorValue); },
        "pagination": n => { linkCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { linkCollection.results = n.getCollectionOfObjectValues<LinkEntity>(createLinkEntityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param LinkCollection_included The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLinkCollection_included(linkCollection_included: Partial<LinkCollection_included> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "folder": n => { linkCollection_included.folder = n.getObjectValue<LinkCollection_included_folder>(createLinkCollection_included_folderFromDiscriminatorValue); },
        "propertyDefinition": n => { linkCollection_included.propertyDefinition = n.getObjectValue<LinkCollection_included_propertyDefinition>(createLinkCollection_included_propertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param LinkCollection_included_folder The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLinkCollection_included_folder(linkCollection_included_folder: Partial<LinkCollection_included_folder> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param LinkCollection_included_propertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLinkCollection_included_propertyDefinition(linkCollection_included_propertyDefinition: Partial<LinkCollection_included_propertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param LinkEntity The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLinkEntity(linkEntity: Partial<LinkEntity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createDate": n => { linkEntity.createDate = n.getStringValue(); },
        "createUserName": n => { linkEntity.createUserName = n.getStringValue(); },
        "entityType": n => { linkEntity.entityType = n.getStringValue(); },
        "fromEntity": n => { linkEntity.fromEntity = n.getObjectValue<Folder>(createFolderFromDiscriminatorValue); },
        "id": n => { linkEntity.id = n.getStringValue(); },
        "name": n => { linkEntity.name = n.getStringValue(); },
        "toEntity": n => { linkEntity.toEntity = n.getObjectValue<Entity>(createEntityFromDiscriminatorValue); },
        "url": n => { linkEntity.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Markup The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarkup(markup: Partial<Markup> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createDateTime": n => { markup.createDateTime = n.getStringValue(); },
        "createdByUser": n => { markup.createdByUser = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "data": n => { markup.data = n.getStringValue(); },
        "id": n => { markup.id = n.getStringValue(); },
        "parentId": n => { markup.parentId = n.getStringValue(); },
        "thumbnail": n => { markup.thumbnail = n.getStringValue(); },
        "updateDateTime": n => { markup.updateDateTime = n.getStringValue(); },
        "updatedByUser": n => { markup.updatedByUser = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "url": n => { markup.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param MarkupCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMarkupCollection(markupCollection: Partial<MarkupCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { markupCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { markupCollection.results = n.getCollectionOfObjectValues<Markup>(createMarkupFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ProfileAttribute The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProfileAttribute(profileAttribute: Partial<ProfileAttribute> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "attributeId": n => { profileAttribute.attributeId = n.getStringValue(); },
        "userGroupId": n => { profileAttribute.userGroupId = n.getStringValue(); },
        "value": n => { profileAttribute.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ProfileAttributeDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProfileAttributeDefinition(profileAttributeDefinition: Partial<ProfileAttributeDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "activeDirectoryMapping": n => { profileAttributeDefinition.activeDirectoryMapping = n.getStringValue(); },
        "association": n => { profileAttributeDefinition.association = n.getEnumValue<ProfileAttributeDefinition_association>(ProfileAttributeDefinition_associationObject); },
        "attributeName": n => { profileAttributeDefinition.attributeName = n.getStringValue(); },
        "id": n => { profileAttributeDefinition.id = n.getStringValue(); },
        "systemName": n => { profileAttributeDefinition.systemName = n.getStringValue(); },
        "url": n => { profileAttributeDefinition.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ProfileAttributeDefinitionCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProfileAttributeDefinitionCollection(profileAttributeDefinitionCollection: Partial<ProfileAttributeDefinitionCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { profileAttributeDefinitionCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { profileAttributeDefinitionCollection.results = n.getObjectValue<ProfileAttributeDefinition>(createProfileAttributeDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Property The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProperty(property: Partial<Property> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "definition": n => { property.definition = n.getObjectValue<PropertyDefinition>(createPropertyDefinitionFromDiscriminatorValue); },
        "propertyDefinitionId": n => { property.propertyDefinitionId = n.getStringValue(); },
        "value": n => { property.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PropertyDefinition The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPropertyDefinition(propertyDefinition: Partial<PropertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "active": n => { propertyDefinition.active = n.getBooleanValue(); },
        "dataType": n => { propertyDefinition.dataType = n.getEnumValue<PropertyDefinition_dataType>(PropertyDefinition_dataTypeObject); },
        "displayName": n => { propertyDefinition.displayName = n.getStringValue(); },
        "id": n => { propertyDefinition.id = n.getStringValue(); },
        "initialValue": n => { propertyDefinition.initialValue = n.getStringValue(); },
        "isSystem": n => { propertyDefinition.isSystem = n.getBooleanValue(); },
        "systemName": n => { propertyDefinition.systemName = n.getStringValue(); },
        "url": n => { propertyDefinition.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PropertyDefinitionCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPropertyDefinitionCollection(propertyDefinitionCollection: Partial<PropertyDefinitionCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { propertyDefinitionCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { propertyDefinitionCollection.results = n.getCollectionOfObjectValues<PropertyDefinitionExtended>(createPropertyDefinitionExtendedFromDiscriminatorValue) ?? n.getCollectionOfObjectValues<PropertyDefinition>(createPropertyDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param PropertyDefinitionCollection_results The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPropertyDefinitionCollection_results(propertyDefinitionCollection_results: Partial<PropertyDefinitionExtended | PropertyDefinition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPropertyDefinitionExtended(propertyDefinitionCollection_results as PropertyDefinitionExtended),
        ...deserializeIntoPropertyDefinition(propertyDefinitionCollection_results as PropertyDefinition),
    }
}
/**
 * The deserialization information for the current model
 * @param PropertyDefinitionExtended The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPropertyDefinitionExtended(propertyDefinitionExtended: Partial<PropertyDefinitionExtended> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPropertyDefinition(propertyDefinitionExtended),
        "listValues": n => { propertyDefinitionExtended.listValues = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Role The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRole(role: Partial<Role> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { role.description = n.getStringValue(); },
        "id": n => { role.id = n.getStringValue(); },
        "roleName": n => { role.roleName = n.getStringValue(); },
        "systemName": n => { role.systemName = n.getStringValue(); },
        "url": n => { role.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RoleCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRoleCollection(roleCollection: Partial<RoleCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { roleCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { roleCollection.results = n.getCollectionOfObjectValues<Role>(createRoleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchCriteria The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchCriteria(searchCriteria: Partial<SearchCriteria> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "operator": n => { searchCriteria.operator = n.getEnumValue<SearchCriteria_operator>(SearchCriteria_operatorObject); },
        "propertyDefinitionUrl": n => { searchCriteria.propertyDefinitionUrl = n.getStringValue(); },
        "searchString": n => { searchCriteria.searchString = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Session The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSession(session: Partial<Session> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accessToken": n => { session.accessToken = n.getStringValue(); },
        "id": n => { session.id = n.getStringValue(); },
        "userInformation": n => { session.userInformation = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "vaultInformation": n => { session.vaultInformation = n.getObjectValue<Vault>(createVaultFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SortCriteria The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSortCriteria(sortCriteria: Partial<SortCriteria> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "ascending": n => { sortCriteria.ascending = n.getBooleanValue(); },
        "propertyDefinitionUrl": n => { sortCriteria.propertyDefinitionUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param User The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUser(user: Partial<User> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "authTypes": n => { user.authTypes = n.getEnumValue<AuthTypeEnum>(AuthTypeEnumObject); },
        "createDate": n => { user.createDate = n.getDateValue(); },
        "email": n => { user.email = n.getStringValue(); },
        "id": n => { user.id = n.getStringValue(); },
        "isActive": n => { user.isActive = n.getStringValue(); },
        "name": n => { user.name = n.getStringValue(); },
        "systemName": n => { user.systemName = n.getStringValue(); },
        "url": n => { user.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserCollection(userCollection: Partial<UserCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { userCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { userCollection.results = n.getCollectionOfObjectValues<User>(createUserFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserExtended The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserExtended(userExtended: Partial<UserExtended> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoUser(userExtended),
        "accounts": n => { userExtended.accounts = n.getCollectionOfObjectValues<Account>(createAccountFromDiscriminatorValue); },
        "analyticsId": n => { userExtended.analyticsId = n.getStringValue(); },
        "attributes": n => { userExtended.attributes = n.getCollectionOfObjectValues<UserExtended_attributes>(createUserExtended_attributesFromDiscriminatorValue); },
        "createUser": n => { userExtended.createUser = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "firstName": n => { userExtended.firstName = n.getStringValue(); },
        "groups": n => { userExtended.groups = n.getCollectionOfObjectValues<Group>(createGroupFromDiscriminatorValue); },
        "isAdministrator": n => { userExtended.isAdministrator = n.getBooleanValue(); },
        "lastName": n => { userExtended.lastName = n.getStringValue(); },
        "roles": n => { userExtended.roles = n.getCollectionOfObjectValues<Role>(createRoleFromDiscriminatorValue); },
        "vaults": n => { userExtended.vaults = n.getCollectionOfObjectValues<Vault>(createVaultFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserExtended_attributes The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserExtended_attributes(userExtended_attributes: Partial<UserExtended_attributes> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "definition": n => { userExtended_attributes.definition = n.getObjectValue<ProfileAttributeDefinition>(createProfileAttributeDefinitionFromDiscriminatorValue); },
        "value": n => { userExtended_attributes.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Vault The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVault(vault: Partial<Vault> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { vault.id = n.getStringValue(); },
        "name": n => { vault.name = n.getStringValue(); },
        "url": n => { vault.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param VaultCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVaultCollection(vaultCollection: Partial<VaultCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { vaultCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { vaultCollection.results = n.getCollectionOfObjectValues<Vault>(createVaultFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param VaultOption The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVaultOption(vaultOption: Partial<VaultOption> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { vaultOption.id = n.getStringValue(); },
        "name": n => { vaultOption.name = n.getStringValue(); },
        "url": n => { vaultOption.url = n.getStringValue(); },
        "value": n => { vaultOption.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param VaultOptionCollection The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVaultOptionCollection(vaultOptionCollection: Partial<VaultOptionCollection> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pagination": n => { vaultOptionCollection.pagination = n.getObjectValue<CursorBasedPagination>(createCursorBasedPaginationFromDiscriminatorValue); },
        "results": n => { vaultOptionCollection.results = n.getCollectionOfObjectValues<VaultOption>(createVaultOptionFromDiscriminatorValue); },
    }
}
/**
 * Change Order Comment object.
 */
export interface ECOComment extends AdditionalDataHolder, Parsable {
    /**
     * The createDate property
     */
    createDate?: string | null;
    /**
     * The createUserName property
     */
    createUserName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The numberOfAttachments property
     */
    numberOfAttachments?: number | null;
    /**
     * Change Order Comment object duplicate(ECOComment) to allow them to reference to each other
     */
    parent?: ECOComment2 | null;
    /**
     * The replies property
     */
    replies?: ECOComment2[] | null;
    /**
     * The state property
     */
    state?: string | null;
    /**
     * The subject property
     */
    subject?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Change Order Comment object duplicate(ECOComment) to allow them to reference to each other
 */
export interface ECOComment2 extends AdditionalDataHolder, Parsable {
    /**
     * The createDate property
     */
    createDate?: string | null;
    /**
     * The createUserName property
     */
    createUserName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The message property
     */
    message?: string | null;
    /**
     * The numberOfAttachments property
     */
    numberOfAttachments?: number | null;
    /**
     * Change Order Comment object.
     */
    parent?: ECOComment | null;
    /**
     * The replies property
     */
    replies?: ECOComment[] | null;
    /**
     * The state property
     */
    state?: string | null;
    /**
     * The subject property
     */
    subject?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Change Order Comment collection object.
 */
export interface ECOCommentCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: ECOComment[] | null;
}
/**
 * A generic entity object with all supported fields.
 */
export interface Entity extends AdditionalDataHolder, Parsable {
    /**
     * Category information  about this entity
     */
    category?: string | null;
    /**
     * Category color
     */
    categoryColor?: number | null;
    /**
     * The checkinDate property
     */
    checkinDate?: string | null;
    /**
     * The checkoutDate property
     */
    checkoutDate?: string | null;
    /**
     * The checkoutUserName property
     */
    checkoutUserName?: string | null;
    /**
     * The children property
     */
    children?: string | null;
    /**
     * Tells the date and time that this version of the entity was created in the Vault.
     */
    createDate?: string | null;
    /**
     * The createUserName property
     */
    createUserName?: string | null;
    /**
     * The entityType property
     */
    entityType?: string | null;
    /**
     * The file property
     */
    file?: FileObject | null;
    /**
     * The full vault path if Entity is a folder
     */
    fullName?: string | null;
    /**
     * The hasVisualizationAttachment property
     */
    hasVisualizationAttachment?: boolean | null;
    /**
     * A unique identifier for the object
     */
    id?: string | null;
    /**
     * The isCheckedOut property
     */
    isCheckedOut?: boolean | null;
    /**
     * The isCloaked property
     */
    isCloaked?: boolean | null;
    /**
     * The isLibrary property
     */
    isLibrary?: boolean | null;
    /**
     * The isReadOnly property
     */
    isReadOnly?: boolean | null;
    /**
     * Item object.
     */
    item?: Item | null;
    /**
     * The lastModifiedDate property
     */
    lastModifiedDate?: string | null;
    /**
     * Name of the entity
     */
    name?: string | null;
    /**
     * The number property
     */
    number?: string | null;
    /**
     * folder object
     */
    parent?: Folder | null;
    /**
     * The parentFolderId property
     */
    parentFolderId?: string | null;
    /**
     * The properties property
     */
    properties?: Property[] | null;
    /**
     * Revision information about this entity.
     */
    revision?: string | null;
    /**
     * The size property
     */
    size?: number | null;
    /**
     * The name of the life cycle state for the entity
     */
    state?: string | null;
    /**
     * The color of the state.
     */
    stateColor?: number | null;
    /**
     * The subfolderCount property
     */
    subfolderCount?: number | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
    /**
     * Version number if entity is an Iteration object
     */
    version?: number | null;
}
/**
 * Entity collection object.
 */
export interface EntityCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: EntityCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: (ChangeOrderExtended | ChangeOrder | FileVersionExtended | FileVersion | FolderExtended | Folder | ItemVersion | LinkEntity)[] | null;
}
export interface EntityCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The folder property
     */
    folder?: EntityCollection_included_folder | null;
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: EntityCollection_included_propertyDefinition | null;
}
export interface EntityCollection_included_folder extends AdditionalDataHolder, Parsable {
}
export interface EntityCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
export type EntityCollection_results = ChangeOrderExtended | ChangeOrder | FileVersionExtended | FileVersion | FolderExtended | Folder | ItemVersion | LinkEntity;
/**
 * The format for an error response
 */
export interface ErrorResponse extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The detail property
     */
    detail?: string | null;
    /**
     * The vault error code. Client can use it to look up the localized error message
     */
    errorCode?: string | null;
    /**
     * The params property
     */
    params?: string[] | null;
    /**
     * The statusCode property
     */
    statusCode?: number | null;
    /**
     * The title property
     */
    title?: string | null;
}
/**
 * File Association collection object.
 */
export interface FileAssocCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: FileAssocCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: FileAssociation[] | null;
}
export interface FileAssocCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The folder property
     */
    folder?: FileAssocCollection_included_folder | null;
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: FileAssocCollection_included_propertyDefinition | null;
}
export interface FileAssocCollection_included_folder extends AdditionalDataHolder, Parsable {
}
export interface FileAssocCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
/**
 * File association object.
 */
export interface FileAssociation extends AdditionalDataHolder, Parsable {
    /**
     * file version extended object
     */
    childFile?: FileVersionExtended | null;
    /**
     * File association options.
     */
    fileAssocType?: FileAssociationTypeEnum | null;
    /**
     * file version extended object
     */
    parentFile?: FileVersionExtended | null;
}
export type FileAssociationTypeEnum = (typeof FileAssociationTypeEnumObject)[keyof typeof FileAssociationTypeEnumObject];
export type FileClassificationEnum = (typeof FileClassificationEnumObject)[keyof typeof FileClassificationEnumObject];
export interface FileObject extends AdditionalDataHolder, Parsable {
    /**
     * file version extended object
     */
    fileVersion?: FileVersionExtended | null;
    /**
     * File MasterId
     */
    id?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
    /**
     * An enumerated value that specifies the type of version to retrieve.
     */
    versionType?: VersionTypeEnum | null;
}
/**
 * file version basic object.
 */
export interface FileVersion extends AdditionalDataHolder, Parsable {
    /**
     * Category information about this file
     */
    category?: string | null;
    /**
     * Category color
     */
    categoryColor?: number | null;
    /**
     * The date and time that the file was checked in. This property is only valid if isCheckedOut is false.
     */
    checkinDate?: string | null;
    /**
     * The date and time that the file was last checked out
     */
    checkoutDate?: string | null;
    /**
     * User that has the file checked out
     */
    checkoutUserName?: string | null;
    /**
     * The classification of the file.
     */
    classification?: FileClassificationEnum | null;
    /**
     * Tells the date and time that this version of the file was created in the Vault. For the first version of a file, this date will match CkInDate. For later versions, this value will have the time when the previous version was checked out.
     */
    createDate?: string | null;
    /**
     * The Name of the user who checked-in or uploaded this file.
     */
    createUserName?: string | null;
    /**
     * The entityType property
     */
    entityType?: string | null;
    /**
     * The file property
     */
    file?: FileObject | null;
    /**
     * Flag to determine if valid VizAttachmentStatus (Not None)
     */
    hasVisualizationAttachment?: boolean | null;
    /**
     * File IterationId
     */
    id?: string | null;
    /**
     * If true, then the latest version of this file is in the checked-out state
     */
    isCheckedOut?: boolean | null;
    /**
     * Get if this file is cloaked. A cloaked object is one that the caller does not have permissions to view
     */
    isCloaked?: boolean | null;
    /**
     * Gets whether or not the file is on the local site (in a multi-site environment). This value will always be true on a single-site environment.
     */
    isOnSite?: boolean | null;
    /**
     * The isReadOnly property
     */
    isReadOnly?: boolean | null;
    /**
     * The last modified date of the file. This value is set by the client that uploaded the file.
     */
    lastModifiedDate?: string | null;
    /**
     * The name of the file. This value applies to all versions of the file
     */
    name?: string | null;
    /**
     * folder object
     */
    parent?: Folder | null;
    /**
     * FolderId of the parent the current file  resides in
     */
    parentFolderId?: string | null;
    /**
     * The properties property
     */
    properties?: Property[] | null;
    /**
     * Revision information about this file.
     */
    revision?: string | null;
    /**
     * The size, in bytes, of the file. This property is only valid if CheckedOut is false.
     */
    size?: number | null;
    /**
     * The name of the life cycle state for the current file
     */
    state?: string | null;
    /**
     * The color of the state.
     */
    stateColor?: number | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
    /**
     * The version of the file. A file that has just been added to the Vault, will have 1 as its VerNum
     */
    version?: number | null;
    /**
     * The design visualization attachment status of the file.
     */
    visualizationAttachmentStatus?: FileVisualizationAttachmentStatusEnum | null;
}
/**
 * File version collection object.
 */
export interface FileVersionCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: FileVersionCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: (FileVersionExtended | FileVersion)[] | null;
}
export interface FileVersionCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The folder property
     */
    folder?: FileVersionCollection_included_folder | null;
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: FileVersionCollection_included_propertyDefinition | null;
}
export interface FileVersionCollection_included_folder extends AdditionalDataHolder, Parsable {
}
export interface FileVersionCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
export type FileVersionCollection_results = FileVersionExtended | FileVersion;
/**
 * file version extended object
 */
export interface FileVersionExtended extends FileVersion, Parsable {
    /**
     * User object.
     */
    checkoutUser?: User | null;
}
export type FileVisualizationAttachmentStatusEnum = (typeof FileVisualizationAttachmentStatusEnumObject)[keyof typeof FileVisualizationAttachmentStatusEnumObject];
/**
 * folder object
 */
export interface Folder extends AdditionalDataHolder, Parsable {
    /**
     * Get the category that is assigned to this folder
     */
    category?: string | null;
    /**
     * Category color
     */
    categoryColor?: number | null;
    /**
     * The children property
     */
    children?: string | null;
    /**
     * Get the date and time that the folder was created.
     */
    createDate?: string | null;
    /**
     * Get the name of the user who created this folder.
     */
    createUserName?: string | null;
    /**
     * Get the full vault path for this folder (ie. $/Folder1)
     */
    fullName?: string | null;
    /**
     * Get the unique identifier for this folder
     */
    id?: string | null;
    /**
     * Get if this folder is cloaked. A cloaked object is one that the caller does not have permissions to view.
     */
    isCloaked?: boolean | null;
    /**
     * Get whether or not this folder is a library folder 
     */
    isLibrary?: boolean | null;
    /**
     * Get whether this folder can be modified by the logged in user.
     */
    isReadOnly?: boolean | null;
    /**
     * Get the descriptive name for this Folder. This is always the Folder Name without the full path.
     */
    name?: string | null;
    /**
     * The properties property
     */
    properties?: Property[] | null;
    /**
     * The name of the life cycle state for the current folder
     */
    state?: string | null;
    /**
     * The color of the state.
     */
    stateColor?: number | null;
    /**
     * Get the number of immediate child folders.
     */
    subfolderCount?: number | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Folder collection object.
 */
export interface FolderCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: FolderCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: (FolderExtended | Folder)[] | null;
}
export interface FolderCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The folder property
     */
    folder?: FolderCollection_included_folder | null;
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: FolderCollection_included_propertyDefinition | null;
}
export interface FolderCollection_included_folder extends AdditionalDataHolder, Parsable {
}
export interface FolderCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
export type FolderCollection_results = FolderExtended | Folder;
/**
 * folder extended object
 */
export interface FolderExtended extends Folder, Parsable {
    /**
     * folder object
     */
    parent?: Folder | null;
    /**
     * The parentFolderId property
     */
    parentFolderId?: string | null;
}
/**
 * Group object. A group is a collection of users and other groups.
 */
export interface Group extends AdditionalDataHolder, Parsable {
    /**
     * The type of account to retrieve. Allowed values are ActiveDirectory, Vault, and Autodesk.
     */
    authTypes?: AuthTypeEnum | null;
    /**
     * The date the Group was created.
     */
    createDate?: string | null;
    /**
     * The email address (distribution list) for the Group.
     */
    emailDL?: string | null;
    /**
     * The identifier for the object.
     */
    id?: string | null;
    /**
     * Is the group active
     */
    isActive?: boolean | null;
    /**
     * The unique name of the Group.
     */
    name?: string | null;
    /**
     * The systemName property
     */
    systemName?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Group collection object.
 */
export interface GroupCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: Group[] | null;
}
/**
 * Group extended object.
 */
export interface GroupExtended extends Group, Parsable {
    /**
     * The accounts property
     */
    accounts?: Account[] | null;
    /**
     * The attributes property
     */
    attributes?: ProfileAttribute[] | null;
    /**
     * User object.
     */
    createUser?: User | null;
    /**
     * The groupManagers property
     */
    groupManagers?: User[] | null;
    /**
     * The groups property
     */
    groups?: Group[] | null;
    /**
     * The roles property
     */
    roles?: Role[] | null;
    /**
     * The users property
     */
    users?: User[] | null;
}
export type HistoryOptionsEnum = (typeof HistoryOptionsEnumObject)[keyof typeof HistoryOptionsEnumObject];
export type IndexingStatus = (typeof IndexingStatusObject)[keyof typeof IndexingStatusObject];
/**
 * Item object.
 */
export interface Item extends AdditionalDataHolder, Parsable {
    /**
     * MasterId of the item
     */
    id?: string | null;
    /**
     * The unique identifier for the object.
     */
    itemVersion?: ItemVersion | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
    /**
     * An enumerated value that specifies the type of version to retrieve.
     */
    versionType?: VersionTypeEnum | null;
}
/**
 * Item associated file version object, contains the file version and the association type.
 */
export interface ItemAssociatedFileVersion extends AdditionalDataHolder, Parsable {
    /**
     * file version extended object
     */
    file?: FileVersionExtended | null;
    /**
     * Item File Link Types.
     */
    itemAssociationType?: ItemAssociationTypeEnum | null;
}
/**
 * Item associated file version collection object, collection of item related files and attachments.
 */
export interface ItemAssociatedFileVersionCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: ItemAssociatedFileVersionCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: ItemAssociatedFileVersion[] | null;
}
export interface ItemAssociatedFileVersionCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The folder property
     */
    folder?: ItemAssociatedFileVersionCollection_included_folder | null;
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: ItemAssociatedFileVersionCollection_included_propertyDefinition | null;
}
export interface ItemAssociatedFileVersionCollection_included_folder extends AdditionalDataHolder, Parsable {
}
export interface ItemAssociatedFileVersionCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
export type ItemAssociationTypeEnum = (typeof ItemAssociationTypeEnumObject)[keyof typeof ItemAssociationTypeEnumObject];
/**
 * A dependency between two Items 
 */
export interface ItemBomLink extends AdditionalDataHolder, Parsable {
    /**
     * Id of the BOM Component (only valid when BOM row is a component - not assigned an item) 
     */
    bomComponentId?: string | null;
    /**
     * Item association's master Id (does not change between iterations) 
     */
    bomLinkMasterId?: string | null;
    /**
     * The order that the child entry shows up in the BOM.
     */
    bomOrder?: string | null;
    /**
     * Indicates if this BOM row is created and maintained by CAD data or is a manual BOM row 
     */
    cad?: boolean | null;
    /**
     * If true, the child Item has children of its own. If false, the child is a leaf.
     */
    childHasChildren?: boolean | null;
    /**
     * The ID of the child Item.
     */
    childItemId?: string | null;
    /**
     * The childMasterAndRefDesMaster property
     */
    childMasterAndRefDesMaster?: string | null;
    /**
     * Indicates if this BOM association is a grouped row of multiple BOM rows 
     */
    groupedRow?: boolean | null;
    /**
     * Id of the Multiple Row grouping 
     */
    groupId?: string | null;
    /**
     * The ID for the object.
     */
    id?: string | null;
    /**
     * Indicates if this BOM row is included or excluded from the BOM 
     */
    included?: boolean | null;
    /**
     * Instance Count of this BOM association
     */
    instCount?: string | null;
    /**
     * If true, the dependency is static. If false, the dependency is computed.
     */
    isStatic?: boolean | null;
    /**
     * The ID of the parent Item.
     */
    parentItemId?: string | null;
    /**
     * The parentMasterChildMasterAndRefDesMaster property
     */
    parentMasterChildMasterAndRefDesMaster?: string | null;
    /**
     * Assigned BOM row position number 
     */
    positionNumber?: string | null;
    /**
     * The properties property
     */
    properties?: Property[] | null;
    /**
     * BOM row quantity 
     */
    quantity?: string | null;
    /**
     * The reference designator ID. This value will be 0 if reference designators are not available.
     */
    refDesId?: string | null;
    /**
     * The display name for the Unit of Measure on CldItemUsage.
     */
    units?: string | null;
    /**
     * The unit size for this BOM row 
     */
    unitSize?: string | null;
}
/**
 * BOM link master ID with which this occurrence is associated.
 */
export interface ItemBomOccurrence extends AdditionalDataHolder, Parsable {
    /**
     * The bomLinkMasterId property
     */
    bomLinkMasterId?: string | null;
    /**
     * The value of the occurrence. Also known as the 'Detail Id.'
     */
    detailId?: string | null;
    /**
     * A unique identifier for this occurrence within the Item BOM.
     */
    id?: string | null;
    /**
     * The immediate parent. -1 means no parent occurrence.
     */
    parentOccurrenceId?: string | null;
    /**
     * The path to the occurrence in the BOM. The format is the list of Item Master IDs separated by the '/' delimiter.
     */
    path?: string | null;
    /**
     * The position on the BOM.
     */
    position?: string | null;
    /**
     * The top most Item of the BOM.
     */
    rootItemId?: string | null;
}
/**
 * Item collection object.
 */
export interface ItemCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: ItemCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: Item[] | null;
}
export interface ItemCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: ItemCollection_included_propertyDefinition | null;
}
export interface ItemCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
/**
 * The unique identifier for the object.
 */
export interface ItemVersion extends AdditionalDataHolder, Parsable {
    /**
     * Category assigned to the item 
     */
    category?: string | null;
    /**
     * The categoryColor property
     */
    categoryColor?: number | null;
    /**
     * The comment property
     */
    comment?: string | null;
    /**
     * The entityType property
     */
    entityType?: string | null;
    /**
     * Item Iteration Id
     */
    id?: string | null;
    /**
     * If true, the logged-in user is restricted from seeing this item.
     */
    isCloaked?: boolean | null;
    /**
     * Flag to check if an latest Item's  version is obsolete
     */
    isLatestObsolete?: boolean | null;
    /**
     * The isReadOnly property
     */
    isReadOnly?: boolean | null;
    /**
     * Item object.
     */
    item?: Item | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The Item number.
     */
    number?: string | null;
    /**
     * The properties property
     */
    properties?: Property[] | null;
    /**
     * The display value for the revision.
     */
    revision?: string | null;
    /**
     * Life cycle state of the item
     */
    state?: string | null;
    /**
     * The stateColor property
     */
    stateColor?: number | null;
    /**
     * The display title.
     */
    title?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
    /**
     * The version number, which is a sequential number given to each version. For example, if this value is 5, then the object is the 5th version.
     */
    version?: number | null;
}
/**
 * Item version collection object.
 */
export interface ItemVersionCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: ItemVersionCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: ItemVersion[] | null;
}
export interface ItemVersionCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: ItemVersionCollection_included_propertyDefinition | null;
}
export interface ItemVersionCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
/**
 * Job object. A job is a task that is run by the job processor.
 */
export interface Job extends AdditionalDataHolder, Parsable {
    /**
     * A description of the job.
     */
    description?: string | null;
    /**
     * A unique identifier for the job.
     */
    id?: string | null;
    /**
     * In a multi-site environment, this property tells if the file is on the local site.
     */
    isOnSite?: string | null;
    /**
     * The job type.
     */
    jobType?: string | null;
    /**
     * An array of parameters which provide metadata about the job.
     */
    params?: Job_params | null;
    /**
     * The priority of the job. A lower number means a higher priority. 1 is the lowest possible number.
     */
    priority?: number | null;
    /**
     * The status of the job:- ``Ready`` - The job is ready to be run.- ``Running`` - The job is currently running.- ``Success`` - The job has completed successfully.- ``Failure`` - The job has failed.
     */
    status?: Job_status | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * An array of parameters which provide metadata about the job.
 */
export interface Job_params extends AdditionalDataHolder, Parsable {
}
export type Job_status = (typeof Job_statusObject)[keyof typeof Job_statusObject];
/**
 * Link collection object.
 */
export interface LinkCollection extends AdditionalDataHolder, Parsable {
    /**
     * The included property
     */
    included?: LinkCollection_included | null;
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: LinkEntity[] | null;
}
export interface LinkCollection_included extends AdditionalDataHolder, Parsable {
    /**
     * The folder property
     */
    folder?: LinkCollection_included_folder | null;
    /**
     * The propertyDefinition property
     */
    propertyDefinition?: LinkCollection_included_propertyDefinition | null;
}
export interface LinkCollection_included_folder extends AdditionalDataHolder, Parsable {
}
export interface LinkCollection_included_propertyDefinition extends AdditionalDataHolder, Parsable {
}
/**
 * link object.
 */
export interface LinkEntity extends AdditionalDataHolder, Parsable {
    /**
     * The createDate property
     */
    createDate?: string | null;
    /**
     * The createUserName property
     */
    createUserName?: string | null;
    /**
     * The entityType property
     */
    entityType?: string | null;
    /**
     * folder object
     */
    fromEntity?: Folder | null;
    /**
     * Get the unique identifier for this link object 
     */
    id?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * A generic entity object with all supported fields.
     */
    toEntity?: Entity | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Markup object. A markup is a visual annotation that is added to a file.
 */
export interface Markup extends AdditionalDataHolder, Parsable {
    /**
     * The createDateTime property
     */
    createDateTime?: string | null;
    /**
     * User object.
     */
    createdByUser?: User | null;
    /**
     * The data property
     */
    data?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The parentId property
     */
    parentId?: string | null;
    /**
     * The thumbnail property
     */
    thumbnail?: string | null;
    /**
     * The updateDateTime property
     */
    updateDateTime?: string | null;
    /**
     * User object.
     */
    updatedByUser?: User | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Markup collection object.
 */
export interface MarkupCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: Markup[] | null;
}
/**
 * Profile attribute object.
 */
export interface ProfileAttribute extends AdditionalDataHolder, Parsable {
    /**
     * The id of the current attribute.
     */
    attributeId?: string | null;
    /**
     * User or group id that profile attribute is associated with.
     */
    userGroupId?: string | null;
    /**
     * The value of the profile attribute.
     */
    value?: string | null;
}
/**
 * Profile attribute definition object.
 */
export interface ProfileAttributeDefinition extends AdditionalDataHolder, Parsable {
    /**
     * Active Directory field the attribute is mapped from (null if not mapped).
     */
    activeDirectoryMapping?: string | null;
    /**
     * The association type.
     */
    association?: ProfileAttributeDefinition_association | null;
    /**
     * Name of the profile attribute (must be unique).
     */
    attributeName?: string | null;
    /**
     * The profile attribute id.
     */
    id?: string | null;
    /**
     * The systemName property
     */
    systemName?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
export type ProfileAttributeDefinition_association = (typeof ProfileAttributeDefinition_associationObject)[keyof typeof ProfileAttributeDefinition_associationObject];
/**
 * Profile attribute definition collection object.
 */
export interface ProfileAttributeDefinitionCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * Profile attribute definition object.
     */
    results?: ProfileAttributeDefinition | null;
}
/**
 * Property object.
 */
export interface Property extends AdditionalDataHolder, Parsable {
    /**
     * Property definition object.
     */
    definition?: PropertyDefinition | null;
    /**
     * Unique identifier for a server-based property definition
     */
    propertyDefinitionId?: string | null;
    /**
     * The property value associated with the entity and PropertyDefinition
     */
    value?: string | null;
}
/**
 * Property definition object.
 */
export interface PropertyDefinition extends AdditionalDataHolder, Parsable {
    /**
     * Get or sets whether this Property Definition is Active.
     */
    active?: boolean | null;
    /**
     * The value defined in SQL database.
     */
    dataType?: PropertyDefinition_dataType | null;
    /**
     * Get or sets the Display name for this Property Definition 
     */
    displayName?: string | null;
    /**
     * Get the unique identifier for a server-based property definition
     */
    id?: string | null;
    /**
     *  Default Value that will be applied to entities that do not have an existing value associated with this PropertyDefinition 
     */
    initialValue?: string | null;
    /**
     * Get whether or not this is a System Property (as opposed to an userDefined property) 
     */
    isSystem?: boolean | null;
    /**
     * Get the System Name for this Property Definition.
     */
    systemName?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
export type PropertyDefinition_dataType = (typeof PropertyDefinition_dataTypeObject)[keyof typeof PropertyDefinition_dataTypeObject];
/**
 * Property definition collection object.
 */
export interface PropertyDefinitionCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: (PropertyDefinitionExtended | PropertyDefinition)[] | null;
}
export type PropertyDefinitionCollection_results = PropertyDefinitionExtended | PropertyDefinition;
/**
 * property definition object
 */
export interface PropertyDefinitionExtended extends Parsable, PropertyDefinition {
    /**
     * Array of possible values for properties based on this property definition
     */
    listValues?: string[] | null;
}
export type RevisionOptionsEnum = (typeof RevisionOptionsEnumObject)[keyof typeof RevisionOptionsEnumObject];
/**
 * Role object. A role is a collection of permissions that can be assigned to users and groups.
 */
export interface Role extends AdditionalDataHolder, Parsable {
    /**
     * Friendly description of the role's purpose 
     */
    description?: string | null;
    /**
     * A unique identifier of the role.
     */
    id?: string | null;
    /**
     * The name of the role.
     */
    roleName?: string | null;
    /**
     * The system name of the Role.
     */
    systemName?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Role collection object.
 */
export interface RoleCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: Role[] | null;
}
/**
 * Search criteria object.
 */
export interface SearchCriteria extends AdditionalDataHolder, Parsable {
    /**
     * Represents the operator used for the search.
     */
    operator?: SearchCriteria_operator | null;
    /**
     * URL string to the property definition
     */
    propertyDefinitionUrl?: string | null;
    /**
     * The value to use for the search
     */
    searchString?: string | null;
}
export type SearchCriteria_operator = (typeof SearchCriteria_operatorObject)[keyof typeof SearchCriteria_operatorObject];
/**
 * Serializes information the current object
 * @param Account The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAccount(writer: SerializationWriter, account: Partial<Account> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!account || isSerializingDerivedType) { return; }
    writer.writeStringValue("accountEmail", account.accountEmail);
    writer.writeStringValue("accountName", account.accountName);
    writer.writeStringValue("id", account.id);
    writer.writeBooleanValue("isActive", account.isActive);
    writer.writeStringValue("url", account.url);
    writer.writeAdditionalData(account.additionalData);
}
/**
 * Serializes information the current object
 * @param AccountCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAccountCollection(writer: SerializationWriter, accountCollection: Partial<AccountCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!accountCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", accountCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<Account>("results", accountCollection.results, serializeAccount);
    writer.writeAdditionalData(accountCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param BOMComponent The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBOMComponent(writer: SerializationWriter, bOMComponent: Partial<BOMComponent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!bOMComponent || isSerializingDerivedType) { return; }
    writer.writeStringValue("baseQty", bOMComponent.baseQty);
    writer.writeStringValue("baseUOM", bOMComponent.baseUOM);
    writer.writeEnumValue<BOMStructureEnum>("bOMStructure", bOMComponent.bOMStructure);
    writer.writeEnumValue<ComponentTypeEnum>("componentType", bOMComponent.componentType);
    writer.writeStringValue("id", bOMComponent.id);
    writer.writeBooleanValue("isCloaked", bOMComponent.isCloaked);
    writer.writeStringValue("name", bOMComponent.name);
    writer.writeStringValue("uniqueId", bOMComponent.uniqueId);
    writer.writeStringValue("xRefId", bOMComponent.xRefId);
    writer.writeEnumValue<XRefTypeEnum>("xRefType", bOMComponent.xRefType);
    writer.writeAdditionalData(bOMComponent.additionalData);
}
/**
 * Serializes information the current object
 * @param BOMLinksAndRevisions The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBOMLinksAndRevisions(writer: SerializationWriter, bOMLinksAndRevisions: Partial<BOMLinksAndRevisions> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!bOMLinksAndRevisions || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<BOMComponent>("bOMComponents", bOMLinksAndRevisions.bOMComponents, serializeBOMComponent);
    writer.writeCollectionOfObjectValues<ItemBomLink>("itemBomLinks", bOMLinksAndRevisions.itemBomLinks, serializeItemBomLink);
    writer.writeCollectionOfObjectValues<ItemVersion>("itemVersions", bOMLinksAndRevisions.itemVersions, serializeItemVersion);
    writer.writeCollectionOfObjectValues<ItemBomOccurrence>("occurrences", bOMLinksAndRevisions.occurrences, serializeItemBomOccurrence);
    writer.writeBooleanValue("referenceDesignatorsAvailable", bOMLinksAndRevisions.referenceDesignatorsAvailable);
    writer.writeAdditionalData(bOMLinksAndRevisions.additionalData);
}
/**
 * Serializes information the current object
 * @param ChangeOrder The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeOrder(writer: SerializationWriter, changeOrder: Partial<ChangeOrder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!changeOrder || isSerializingDerivedType) { return; }
    writer.writeStringValue("approveDeadline", changeOrder.approveDeadline);
    writer.writeStringValue("closeDate", changeOrder.closeDate);
    writer.writeStringValue("createDate", changeOrder.createDate);
    writer.writeStringValue("description", changeOrder.description);
    writer.writeStringValue("entityType", changeOrder.entityType);
    writer.writeStringValue("id", changeOrder.id);
    writer.writeBooleanValue("isReadOnly", changeOrder.isReadOnly);
    writer.writeStringValue("lastModifiedDate", changeOrder.lastModifiedDate);
    writer.writeStringValue("lastModifiedUserId", changeOrder.lastModifiedUserId);
    writer.writeStringValue("lastTouchedDate", changeOrder.lastTouchedDate);
    writer.writeStringValue("name", changeOrder.name);
    writer.writeStringValue("number", changeOrder.number);
    writer.writeNumberValue("numberOfAttachments", changeOrder.numberOfAttachments);
    writer.writeCollectionOfObjectValues<Property>("properties", changeOrder.properties, serializeProperty);
    writer.writeStringValue("state", changeOrder.state);
    writer.writeNumberValue("stateColor", changeOrder.stateColor);
    writer.writeStringValue("title", changeOrder.title);
    writer.writeStringValue("url", changeOrder.url);
    writer.writeAdditionalData(changeOrder.additionalData);
}
/**
 * Serializes information the current object
 * @param ChangeOrderCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeOrderCollection(writer: SerializationWriter, changeOrderCollection: Partial<ChangeOrderCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!changeOrderCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ChangeOrderCollection_included>("included", changeOrderCollection.included, serializeChangeOrderCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", changeOrderCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<ChangeOrderExtended | ChangeOrder>("results", changeOrderCollection.results, serializeChangeOrderCollection_results);
    writer.writeAdditionalData(changeOrderCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param ChangeOrderCollection_included The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeOrderCollection_included(writer: SerializationWriter, changeOrderCollection_included: Partial<ChangeOrderCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!changeOrderCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ChangeOrderCollection_included_propertyDefinition>("propertyDefinition", changeOrderCollection_included.propertyDefinition, serializeChangeOrderCollection_included_propertyDefinition);
    writer.writeAdditionalData(changeOrderCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param ChangeOrderCollection_included_propertyDefinition The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeOrderCollection_included_propertyDefinition(writer: SerializationWriter, changeOrderCollection_included_propertyDefinition: Partial<ChangeOrderCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!changeOrderCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(changeOrderCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param ChangeOrderCollection_results The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeOrderCollection_results(writer: SerializationWriter, changeOrderCollection_results: Partial<ChangeOrderExtended | ChangeOrder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializeChangeOrderExtended(writer, changeOrderCollection_results as ChangeOrderExtended);
    serializeChangeOrder(writer, changeOrderCollection_results as ChangeOrder);
}
/**
 * Serializes information the current object
 * @param ChangeOrderExtended The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeChangeOrderExtended(writer: SerializationWriter, changeOrderExtended: Partial<ChangeOrderExtended> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!changeOrderExtended || isSerializingDerivedType) { return; }
    serializeChangeOrder(writer, changeOrderExtended, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<User>("assignees", changeOrderExtended.assignees, serializeUser);
}
/**
 * Serializes information the current object
 * @param CursorBasedPagination The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCursorBasedPagination(writer: SerializationWriter, cursorBasedPagination: Partial<CursorBasedPagination> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cursorBasedPagination || isSerializingDerivedType) { return; }
    writer.writeEnumValue<IndexingStatus>("indexingStatus", cursorBasedPagination.indexingStatus);
    writer.writeNumberValue("limit", cursorBasedPagination.limit);
    writer.writeStringValue("nextUrl", cursorBasedPagination.nextUrl);
    writer.writeNumberValue("totalResults", cursorBasedPagination.totalResults);
    writer.writeAdditionalData(cursorBasedPagination.additionalData);
}
/**
 * Serializes information the current object
 * @param ECOComment The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeECOComment(writer: SerializationWriter, eCOComment: Partial<ECOComment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!eCOComment || isSerializingDerivedType) { return; }
    writer.writeStringValue("createDate", eCOComment.createDate);
    writer.writeStringValue("createUserName", eCOComment.createUserName);
    writer.writeStringValue("id", eCOComment.id);
    writer.writeStringValue("message", eCOComment.message);
    writer.writeNumberValue("numberOfAttachments", eCOComment.numberOfAttachments);
    writer.writeObjectValue<ECOComment2>("parent", eCOComment.parent, serializeECOComment2);
    writer.writeCollectionOfObjectValues<ECOComment2>("replies", eCOComment.replies, serializeECOComment2);
    writer.writeStringValue("state", eCOComment.state);
    writer.writeStringValue("subject", eCOComment.subject);
    writer.writeStringValue("url", eCOComment.url);
    writer.writeAdditionalData(eCOComment.additionalData);
}
/**
 * Serializes information the current object
 * @param ECOComment2 The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeECOComment2(writer: SerializationWriter, eCOComment2: Partial<ECOComment2> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!eCOComment2 || isSerializingDerivedType) { return; }
    writer.writeStringValue("createDate", eCOComment2.createDate);
    writer.writeStringValue("createUserName", eCOComment2.createUserName);
    writer.writeStringValue("id", eCOComment2.id);
    writer.writeStringValue("message", eCOComment2.message);
    writer.writeNumberValue("numberOfAttachments", eCOComment2.numberOfAttachments);
    writer.writeObjectValue<ECOComment>("parent", eCOComment2.parent, serializeECOComment);
    writer.writeCollectionOfObjectValues<ECOComment>("replies", eCOComment2.replies, serializeECOComment);
    writer.writeStringValue("state", eCOComment2.state);
    writer.writeStringValue("subject", eCOComment2.subject);
    writer.writeStringValue("url", eCOComment2.url);
    writer.writeAdditionalData(eCOComment2.additionalData);
}
/**
 * Serializes information the current object
 * @param ECOCommentCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeECOCommentCollection(writer: SerializationWriter, eCOCommentCollection: Partial<ECOCommentCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!eCOCommentCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", eCOCommentCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<ECOComment>("results", eCOCommentCollection.results, serializeECOComment);
    writer.writeAdditionalData(eCOCommentCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param Entity The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntity(writer: SerializationWriter, entity: Partial<Entity> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!entity || isSerializingDerivedType) { return; }
    writer.writeStringValue("category", entity.category);
    writer.writeNumberValue("categoryColor", entity.categoryColor);
    writer.writeStringValue("checkinDate", entity.checkinDate);
    writer.writeStringValue("checkoutDate", entity.checkoutDate);
    writer.writeStringValue("checkoutUserName", entity.checkoutUserName);
    writer.writeStringValue("children", entity.children);
    writer.writeStringValue("createDate", entity.createDate);
    writer.writeStringValue("createUserName", entity.createUserName);
    writer.writeStringValue("entityType", entity.entityType);
    writer.writeObjectValue<FileObject>("file", entity.file, serializeFileObject);
    writer.writeStringValue("fullName", entity.fullName);
    writer.writeBooleanValue("hasVisualizationAttachment", entity.hasVisualizationAttachment);
    writer.writeStringValue("id", entity.id);
    writer.writeBooleanValue("isCheckedOut", entity.isCheckedOut);
    writer.writeBooleanValue("isCloaked", entity.isCloaked);
    writer.writeBooleanValue("isLibrary", entity.isLibrary);
    writer.writeBooleanValue("isReadOnly", entity.isReadOnly);
    writer.writeObjectValue<Item>("item", entity.item, serializeItem);
    writer.writeStringValue("lastModifiedDate", entity.lastModifiedDate);
    writer.writeStringValue("name", entity.name);
    writer.writeStringValue("number", entity.number);
    writer.writeObjectValue<Folder>("parent", entity.parent, serializeFolder);
    writer.writeStringValue("parentFolderId", entity.parentFolderId);
    writer.writeCollectionOfObjectValues<Property>("properties", entity.properties, serializeProperty);
    writer.writeStringValue("revision", entity.revision);
    writer.writeNumberValue("size", entity.size);
    writer.writeStringValue("state", entity.state);
    writer.writeNumberValue("stateColor", entity.stateColor);
    writer.writeNumberValue("subfolderCount", entity.subfolderCount);
    writer.writeStringValue("url", entity.url);
    writer.writeNumberValue("version", entity.version);
    writer.writeAdditionalData(entity.additionalData);
}
/**
 * Serializes information the current object
 * @param EntityCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntityCollection(writer: SerializationWriter, entityCollection: Partial<EntityCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!entityCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<EntityCollection_included>("included", entityCollection.included, serializeEntityCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", entityCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<ChangeOrderExtended | ChangeOrder | FileVersionExtended | FileVersion | FolderExtended | Folder | ItemVersion | LinkEntity>("results", entityCollection.results, serializeEntityCollection_results);
    writer.writeAdditionalData(entityCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param EntityCollection_included The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntityCollection_included(writer: SerializationWriter, entityCollection_included: Partial<EntityCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!entityCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<EntityCollection_included_folder>("folder", entityCollection_included.folder, serializeEntityCollection_included_folder);
    writer.writeObjectValue<EntityCollection_included_propertyDefinition>("propertyDefinition", entityCollection_included.propertyDefinition, serializeEntityCollection_included_propertyDefinition);
    writer.writeAdditionalData(entityCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param EntityCollection_included_folder The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntityCollection_included_folder(writer: SerializationWriter, entityCollection_included_folder: Partial<EntityCollection_included_folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!entityCollection_included_folder || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(entityCollection_included_folder.additionalData);
}
/**
 * Serializes information the current object
 * @param EntityCollection_included_propertyDefinition The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntityCollection_included_propertyDefinition(writer: SerializationWriter, entityCollection_included_propertyDefinition: Partial<EntityCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!entityCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(entityCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param EntityCollection_results The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEntityCollection_results(writer: SerializationWriter, entityCollection_results: Partial<ChangeOrderExtended | ChangeOrder | FileVersionExtended | FileVersion | FolderExtended | Folder | ItemVersion | LinkEntity> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializeChangeOrderExtended(writer, entityCollection_results as ChangeOrderExtended);
    serializeChangeOrder(writer, entityCollection_results as ChangeOrder);
    serializeFileVersionExtended(writer, entityCollection_results as FileVersionExtended);
    serializeFileVersion(writer, entityCollection_results as FileVersion);
    serializeFolderExtended(writer, entityCollection_results as FolderExtended);
    serializeFolder(writer, entityCollection_results as Folder);
    serializeItemVersion(writer, entityCollection_results as ItemVersion);
    serializeLinkEntity(writer, entityCollection_results as LinkEntity);
}
/**
 * Serializes information the current object
 * @param ErrorResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeErrorResponse(writer: SerializationWriter, errorResponse: Partial<ErrorResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!errorResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("detail", errorResponse.detail);
    writer.writeStringValue("errorCode", errorResponse.errorCode);
    writer.writeCollectionOfPrimitiveValues<string>("params", errorResponse.params);
    writer.writeNumberValue("statusCode", errorResponse.statusCode);
    writer.writeStringValue("title", errorResponse.title);
    writer.writeAdditionalData(errorResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param FileAssocCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileAssocCollection(writer: SerializationWriter, fileAssocCollection: Partial<FileAssocCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileAssocCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileAssocCollection_included>("included", fileAssocCollection.included, serializeFileAssocCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", fileAssocCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<FileAssociation>("results", fileAssocCollection.results, serializeFileAssociation);
    writer.writeAdditionalData(fileAssocCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param FileAssocCollection_included The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileAssocCollection_included(writer: SerializationWriter, fileAssocCollection_included: Partial<FileAssocCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileAssocCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileAssocCollection_included_folder>("folder", fileAssocCollection_included.folder, serializeFileAssocCollection_included_folder);
    writer.writeObjectValue<FileAssocCollection_included_propertyDefinition>("propertyDefinition", fileAssocCollection_included.propertyDefinition, serializeFileAssocCollection_included_propertyDefinition);
    writer.writeAdditionalData(fileAssocCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param FileAssocCollection_included_folder The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileAssocCollection_included_folder(writer: SerializationWriter, fileAssocCollection_included_folder: Partial<FileAssocCollection_included_folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileAssocCollection_included_folder || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(fileAssocCollection_included_folder.additionalData);
}
/**
 * Serializes information the current object
 * @param FileAssocCollection_included_propertyDefinition The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileAssocCollection_included_propertyDefinition(writer: SerializationWriter, fileAssocCollection_included_propertyDefinition: Partial<FileAssocCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileAssocCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(fileAssocCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param FileAssociation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileAssociation(writer: SerializationWriter, fileAssociation: Partial<FileAssociation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileAssociation || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileVersionExtended>("childFile", fileAssociation.childFile, serializeFileVersionExtended);
    writer.writeEnumValue<FileAssociationTypeEnum>("fileAssocType", fileAssociation.fileAssocType);
    writer.writeObjectValue<FileVersionExtended>("parentFile", fileAssociation.parentFile, serializeFileVersionExtended);
    writer.writeAdditionalData(fileAssociation.additionalData);
}
/**
 * Serializes information the current object
 * @param FileObject The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileObject(writer: SerializationWriter, fileObject: Partial<FileObject> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileObject || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileVersionExtended>("fileVersion", fileObject.fileVersion, serializeFileVersionExtended);
    writer.writeStringValue("id", fileObject.id);
    writer.writeStringValue("url", fileObject.url);
    writer.writeEnumValue<VersionTypeEnum>("versionType", fileObject.versionType);
    writer.writeAdditionalData(fileObject.additionalData);
}
/**
 * Serializes information the current object
 * @param FileVersion The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersion(writer: SerializationWriter, fileVersion: Partial<FileVersion> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileVersion || isSerializingDerivedType) { return; }
    writer.writeStringValue("category", fileVersion.category);
    writer.writeNumberValue("categoryColor", fileVersion.categoryColor);
    writer.writeStringValue("checkinDate", fileVersion.checkinDate);
    writer.writeStringValue("checkoutDate", fileVersion.checkoutDate);
    writer.writeStringValue("checkoutUserName", fileVersion.checkoutUserName);
    writer.writeEnumValue<FileClassificationEnum>("classification", fileVersion.classification);
    writer.writeStringValue("createDate", fileVersion.createDate);
    writer.writeStringValue("createUserName", fileVersion.createUserName);
    writer.writeStringValue("entityType", fileVersion.entityType);
    writer.writeObjectValue<FileObject>("file", fileVersion.file, serializeFileObject);
    writer.writeBooleanValue("hasVisualizationAttachment", fileVersion.hasVisualizationAttachment);
    writer.writeStringValue("id", fileVersion.id);
    writer.writeBooleanValue("isCheckedOut", fileVersion.isCheckedOut);
    writer.writeBooleanValue("isCloaked", fileVersion.isCloaked);
    writer.writeBooleanValue("isOnSite", fileVersion.isOnSite);
    writer.writeBooleanValue("isReadOnly", fileVersion.isReadOnly);
    writer.writeStringValue("lastModifiedDate", fileVersion.lastModifiedDate);
    writer.writeStringValue("name", fileVersion.name);
    writer.writeObjectValue<Folder>("parent", fileVersion.parent, serializeFolder);
    writer.writeStringValue("parentFolderId", fileVersion.parentFolderId);
    writer.writeCollectionOfObjectValues<Property>("properties", fileVersion.properties, serializeProperty);
    writer.writeStringValue("revision", fileVersion.revision);
    writer.writeNumberValue("size", fileVersion.size);
    writer.writeStringValue("state", fileVersion.state);
    writer.writeNumberValue("stateColor", fileVersion.stateColor);
    writer.writeStringValue("url", fileVersion.url);
    writer.writeNumberValue("version", fileVersion.version);
    writer.writeEnumValue<FileVisualizationAttachmentStatusEnum>("visualizationAttachmentStatus", fileVersion.visualizationAttachmentStatus);
    writer.writeAdditionalData(fileVersion.additionalData);
}
/**
 * Serializes information the current object
 * @param FileVersionCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersionCollection(writer: SerializationWriter, fileVersionCollection: Partial<FileVersionCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileVersionCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileVersionCollection_included>("included", fileVersionCollection.included, serializeFileVersionCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", fileVersionCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<FileVersionExtended | FileVersion>("results", fileVersionCollection.results, serializeFileVersionCollection_results);
    writer.writeAdditionalData(fileVersionCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param FileVersionCollection_included The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersionCollection_included(writer: SerializationWriter, fileVersionCollection_included: Partial<FileVersionCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileVersionCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileVersionCollection_included_folder>("folder", fileVersionCollection_included.folder, serializeFileVersionCollection_included_folder);
    writer.writeObjectValue<FileVersionCollection_included_propertyDefinition>("propertyDefinition", fileVersionCollection_included.propertyDefinition, serializeFileVersionCollection_included_propertyDefinition);
    writer.writeAdditionalData(fileVersionCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param FileVersionCollection_included_folder The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersionCollection_included_folder(writer: SerializationWriter, fileVersionCollection_included_folder: Partial<FileVersionCollection_included_folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileVersionCollection_included_folder || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(fileVersionCollection_included_folder.additionalData);
}
/**
 * Serializes information the current object
 * @param FileVersionCollection_included_propertyDefinition The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersionCollection_included_propertyDefinition(writer: SerializationWriter, fileVersionCollection_included_propertyDefinition: Partial<FileVersionCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileVersionCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(fileVersionCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param FileVersionCollection_results The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersionCollection_results(writer: SerializationWriter, fileVersionCollection_results: Partial<FileVersionExtended | FileVersion> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializeFileVersionExtended(writer, fileVersionCollection_results as FileVersionExtended);
    serializeFileVersion(writer, fileVersionCollection_results as FileVersion);
}
/**
 * Serializes information the current object
 * @param FileVersionExtended The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileVersionExtended(writer: SerializationWriter, fileVersionExtended: Partial<FileVersionExtended> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileVersionExtended || isSerializingDerivedType) { return; }
    serializeFileVersion(writer, fileVersionExtended, isSerializingDerivedType)
    writer.writeObjectValue<User>("checkoutUser", fileVersionExtended.checkoutUser, serializeUser);
}
/**
 * Serializes information the current object
 * @param Folder The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolder(writer: SerializationWriter, folder: Partial<Folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!folder || isSerializingDerivedType) { return; }
    writer.writeStringValue("category", folder.category);
    writer.writeNumberValue("categoryColor", folder.categoryColor);
    writer.writeStringValue("children", folder.children);
    writer.writeStringValue("createDate", folder.createDate);
    writer.writeStringValue("createUserName", folder.createUserName);
    writer.writeStringValue("fullName", folder.fullName);
    writer.writeStringValue("id", folder.id);
    writer.writeBooleanValue("isCloaked", folder.isCloaked);
    writer.writeBooleanValue("isLibrary", folder.isLibrary);
    writer.writeBooleanValue("isReadOnly", folder.isReadOnly);
    writer.writeStringValue("name", folder.name);
    writer.writeCollectionOfObjectValues<Property>("properties", folder.properties, serializeProperty);
    writer.writeStringValue("state", folder.state);
    writer.writeNumberValue("stateColor", folder.stateColor);
    writer.writeNumberValue("subfolderCount", folder.subfolderCount);
    writer.writeStringValue("url", folder.url);
    writer.writeAdditionalData(folder.additionalData);
}
/**
 * Serializes information the current object
 * @param FolderCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolderCollection(writer: SerializationWriter, folderCollection: Partial<FolderCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!folderCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FolderCollection_included>("included", folderCollection.included, serializeFolderCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", folderCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<FolderExtended | Folder>("results", folderCollection.results, serializeFolderCollection_results);
    writer.writeAdditionalData(folderCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param FolderCollection_included The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolderCollection_included(writer: SerializationWriter, folderCollection_included: Partial<FolderCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!folderCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FolderCollection_included_folder>("folder", folderCollection_included.folder, serializeFolderCollection_included_folder);
    writer.writeObjectValue<FolderCollection_included_propertyDefinition>("propertyDefinition", folderCollection_included.propertyDefinition, serializeFolderCollection_included_propertyDefinition);
    writer.writeAdditionalData(folderCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param FolderCollection_included_folder The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolderCollection_included_folder(writer: SerializationWriter, folderCollection_included_folder: Partial<FolderCollection_included_folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!folderCollection_included_folder || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(folderCollection_included_folder.additionalData);
}
/**
 * Serializes information the current object
 * @param FolderCollection_included_propertyDefinition The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolderCollection_included_propertyDefinition(writer: SerializationWriter, folderCollection_included_propertyDefinition: Partial<FolderCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!folderCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(folderCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param FolderCollection_results The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolderCollection_results(writer: SerializationWriter, folderCollection_results: Partial<FolderExtended | Folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializeFolderExtended(writer, folderCollection_results as FolderExtended);
    serializeFolder(writer, folderCollection_results as Folder);
}
/**
 * Serializes information the current object
 * @param FolderExtended The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFolderExtended(writer: SerializationWriter, folderExtended: Partial<FolderExtended> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!folderExtended || isSerializingDerivedType) { return; }
    serializeFolder(writer, folderExtended, isSerializingDerivedType)
    writer.writeObjectValue<Folder>("parent", folderExtended.parent, serializeFolder);
    writer.writeStringValue("parentFolderId", folderExtended.parentFolderId);
}
/**
 * Serializes information the current object
 * @param Group The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGroup(writer: SerializationWriter, group: Partial<Group> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!group || isSerializingDerivedType) { return; }
    writer.writeEnumValue<AuthTypeEnum>("authTypes", group.authTypes);
    writer.writeStringValue("createDate", group.createDate);
    writer.writeStringValue("emailDL", group.emailDL);
    writer.writeStringValue("id", group.id);
    writer.writeBooleanValue("isActive", group.isActive);
    writer.writeStringValue("name", group.name);
    writer.writeStringValue("systemName", group.systemName);
    writer.writeStringValue("url", group.url);
    writer.writeAdditionalData(group.additionalData);
}
/**
 * Serializes information the current object
 * @param GroupCollection The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGroupCollection(writer: SerializationWriter, groupCollection: Partial<GroupCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!groupCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", groupCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<Group>("results", groupCollection.results, serializeGroup);
    writer.writeAdditionalData(groupCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param GroupExtended The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGroupExtended(writer: SerializationWriter, groupExtended: Partial<GroupExtended> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!groupExtended || isSerializingDerivedType) { return; }
    serializeGroup(writer, groupExtended, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Account>("accounts", groupExtended.accounts, serializeAccount);
    writer.writeCollectionOfObjectValues<ProfileAttribute>("attributes", groupExtended.attributes, serializeProfileAttribute);
    writer.writeObjectValue<User>("createUser", groupExtended.createUser, serializeUser);
    writer.writeCollectionOfObjectValues<User>("groupManagers", groupExtended.groupManagers, serializeUser);
    writer.writeCollectionOfObjectValues<Group>("groups", groupExtended.groups, serializeGroup);
    writer.writeCollectionOfObjectValues<Role>("roles", groupExtended.roles, serializeRole);
    writer.writeCollectionOfObjectValues<User>("users", groupExtended.users, serializeUser);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Item The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItem(writer: SerializationWriter, item: Partial<Item> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!item || isSerializingDerivedType) { return; }
    writer.writeStringValue("id", item.id);
    writer.writeObjectValue<ItemVersion>("itemVersion", item.itemVersion, serializeItemVersion);
    writer.writeStringValue("url", item.url);
    writer.writeEnumValue<VersionTypeEnum>("versionType", item.versionType);
    writer.writeAdditionalData(item.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemAssociatedFileVersion The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemAssociatedFileVersion(writer: SerializationWriter, itemAssociatedFileVersion: Partial<ItemAssociatedFileVersion> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemAssociatedFileVersion || isSerializingDerivedType) { return; }
    writer.writeObjectValue<FileVersionExtended>("file", itemAssociatedFileVersion.file, serializeFileVersionExtended);
    writer.writeEnumValue<ItemAssociationTypeEnum>("itemAssociationType", itemAssociatedFileVersion.itemAssociationType);
    writer.writeAdditionalData(itemAssociatedFileVersion.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemAssociatedFileVersionCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemAssociatedFileVersionCollection(writer: SerializationWriter, itemAssociatedFileVersionCollection: Partial<ItemAssociatedFileVersionCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemAssociatedFileVersionCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ItemAssociatedFileVersionCollection_included>("included", itemAssociatedFileVersionCollection.included, serializeItemAssociatedFileVersionCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", itemAssociatedFileVersionCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<ItemAssociatedFileVersion>("results", itemAssociatedFileVersionCollection.results, serializeItemAssociatedFileVersion);
    writer.writeAdditionalData(itemAssociatedFileVersionCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemAssociatedFileVersionCollection_included The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemAssociatedFileVersionCollection_included(writer: SerializationWriter, itemAssociatedFileVersionCollection_included: Partial<ItemAssociatedFileVersionCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemAssociatedFileVersionCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ItemAssociatedFileVersionCollection_included_folder>("folder", itemAssociatedFileVersionCollection_included.folder, serializeItemAssociatedFileVersionCollection_included_folder);
    writer.writeObjectValue<ItemAssociatedFileVersionCollection_included_propertyDefinition>("propertyDefinition", itemAssociatedFileVersionCollection_included.propertyDefinition, serializeItemAssociatedFileVersionCollection_included_propertyDefinition);
    writer.writeAdditionalData(itemAssociatedFileVersionCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemAssociatedFileVersionCollection_included_folder The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemAssociatedFileVersionCollection_included_folder(writer: SerializationWriter, itemAssociatedFileVersionCollection_included_folder: Partial<ItemAssociatedFileVersionCollection_included_folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemAssociatedFileVersionCollection_included_folder || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(itemAssociatedFileVersionCollection_included_folder.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemAssociatedFileVersionCollection_included_propertyDefinition The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemAssociatedFileVersionCollection_included_propertyDefinition(writer: SerializationWriter, itemAssociatedFileVersionCollection_included_propertyDefinition: Partial<ItemAssociatedFileVersionCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemAssociatedFileVersionCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(itemAssociatedFileVersionCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemBomLink The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemBomLink(writer: SerializationWriter, itemBomLink: Partial<ItemBomLink> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemBomLink || isSerializingDerivedType) { return; }
    writer.writeStringValue("bomComponentId", itemBomLink.bomComponentId);
    writer.writeStringValue("bomLinkMasterId", itemBomLink.bomLinkMasterId);
    writer.writeStringValue("bomOrder", itemBomLink.bomOrder);
    writer.writeBooleanValue("cad", itemBomLink.cad);
    writer.writeBooleanValue("childHasChildren", itemBomLink.childHasChildren);
    writer.writeStringValue("childItemId", itemBomLink.childItemId);
    writer.writeStringValue("childMasterAndRefDesMaster", itemBomLink.childMasterAndRefDesMaster);
    writer.writeBooleanValue("groupedRow", itemBomLink.groupedRow);
    writer.writeStringValue("groupId", itemBomLink.groupId);
    writer.writeStringValue("id", itemBomLink.id);
    writer.writeBooleanValue("included", itemBomLink.included);
    writer.writeStringValue("instCount", itemBomLink.instCount);
    writer.writeBooleanValue("isStatic", itemBomLink.isStatic);
    writer.writeStringValue("parentItemId", itemBomLink.parentItemId);
    writer.writeStringValue("parentMasterChildMasterAndRefDesMaster", itemBomLink.parentMasterChildMasterAndRefDesMaster);
    writer.writeStringValue("positionNumber", itemBomLink.positionNumber);
    writer.writeCollectionOfObjectValues<Property>("properties", itemBomLink.properties, serializeProperty);
    writer.writeStringValue("quantity", itemBomLink.quantity);
    writer.writeStringValue("refDesId", itemBomLink.refDesId);
    writer.writeStringValue("units", itemBomLink.units);
    writer.writeStringValue("unitSize", itemBomLink.unitSize);
    writer.writeAdditionalData(itemBomLink.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemBomOccurrence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemBomOccurrence(writer: SerializationWriter, itemBomOccurrence: Partial<ItemBomOccurrence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemBomOccurrence || isSerializingDerivedType) { return; }
    writer.writeStringValue("bomLinkMasterId", itemBomOccurrence.bomLinkMasterId);
    writer.writeStringValue("detailId", itemBomOccurrence.detailId);
    writer.writeStringValue("id", itemBomOccurrence.id);
    writer.writeStringValue("parentOccurrenceId", itemBomOccurrence.parentOccurrenceId);
    writer.writeStringValue("path", itemBomOccurrence.path);
    writer.writeStringValue("position", itemBomOccurrence.position);
    writer.writeStringValue("rootItemId", itemBomOccurrence.rootItemId);
    writer.writeAdditionalData(itemBomOccurrence.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemCollection(writer: SerializationWriter, itemCollection: Partial<ItemCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ItemCollection_included>("included", itemCollection.included, serializeItemCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", itemCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<Item>("results", itemCollection.results, serializeItem);
    writer.writeAdditionalData(itemCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemCollection_included The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemCollection_included(writer: SerializationWriter, itemCollection_included: Partial<ItemCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ItemCollection_included_propertyDefinition>("propertyDefinition", itemCollection_included.propertyDefinition, serializeItemCollection_included_propertyDefinition);
    writer.writeAdditionalData(itemCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemCollection_included_propertyDefinition The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemCollection_included_propertyDefinition(writer: SerializationWriter, itemCollection_included_propertyDefinition: Partial<ItemCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(itemCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemVersion The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemVersion(writer: SerializationWriter, itemVersion: Partial<ItemVersion> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemVersion || isSerializingDerivedType) { return; }
    writer.writeStringValue("category", itemVersion.category);
    writer.writeNumberValue("categoryColor", itemVersion.categoryColor);
    writer.writeStringValue("comment", itemVersion.comment);
    writer.writeStringValue("entityType", itemVersion.entityType);
    writer.writeStringValue("id", itemVersion.id);
    writer.writeBooleanValue("isCloaked", itemVersion.isCloaked);
    writer.writeBooleanValue("isLatestObsolete", itemVersion.isLatestObsolete);
    writer.writeBooleanValue("isReadOnly", itemVersion.isReadOnly);
    writer.writeObjectValue<Item>("item", itemVersion.item, serializeItem);
    writer.writeStringValue("name", itemVersion.name);
    writer.writeStringValue("number", itemVersion.number);
    writer.writeCollectionOfObjectValues<Property>("properties", itemVersion.properties, serializeProperty);
    writer.writeStringValue("revision", itemVersion.revision);
    writer.writeStringValue("state", itemVersion.state);
    writer.writeNumberValue("stateColor", itemVersion.stateColor);
    writer.writeStringValue("title", itemVersion.title);
    writer.writeStringValue("url", itemVersion.url);
    writer.writeNumberValue("version", itemVersion.version);
    writer.writeAdditionalData(itemVersion.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemVersionCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemVersionCollection(writer: SerializationWriter, itemVersionCollection: Partial<ItemVersionCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemVersionCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ItemVersionCollection_included>("included", itemVersionCollection.included, serializeItemVersionCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", itemVersionCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<ItemVersion>("results", itemVersionCollection.results, serializeItemVersion);
    writer.writeAdditionalData(itemVersionCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemVersionCollection_included The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemVersionCollection_included(writer: SerializationWriter, itemVersionCollection_included: Partial<ItemVersionCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemVersionCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ItemVersionCollection_included_propertyDefinition>("propertyDefinition", itemVersionCollection_included.propertyDefinition, serializeItemVersionCollection_included_propertyDefinition);
    writer.writeAdditionalData(itemVersionCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ItemVersionCollection_included_propertyDefinition The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeItemVersionCollection_included_propertyDefinition(writer: SerializationWriter, itemVersionCollection_included_propertyDefinition: Partial<ItemVersionCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!itemVersionCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(itemVersionCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Job The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJob(writer: SerializationWriter, job: Partial<Job> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!job || isSerializingDerivedType) { return; }
    writer.writeStringValue("description", job.description);
    writer.writeStringValue("id", job.id);
    writer.writeStringValue("isOnSite", job.isOnSite);
    writer.writeStringValue("jobType", job.jobType);
    writer.writeObjectValue<Job_params>("params", job.params, serializeJob_params);
    writer.writeNumberValue("priority", job.priority);
    writer.writeEnumValue<Job_status>("status", job.status);
    writer.writeStringValue("url", job.url);
    writer.writeAdditionalData(job.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Job_params The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeJob_params(writer: SerializationWriter, job_params: Partial<Job_params> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!job_params || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(job_params.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LinkCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLinkCollection(writer: SerializationWriter, linkCollection: Partial<LinkCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!linkCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<LinkCollection_included>("included", linkCollection.included, serializeLinkCollection_included);
    writer.writeObjectValue<CursorBasedPagination>("pagination", linkCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<LinkEntity>("results", linkCollection.results, serializeLinkEntity);
    writer.writeAdditionalData(linkCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LinkCollection_included The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLinkCollection_included(writer: SerializationWriter, linkCollection_included: Partial<LinkCollection_included> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!linkCollection_included || isSerializingDerivedType) { return; }
    writer.writeObjectValue<LinkCollection_included_folder>("folder", linkCollection_included.folder, serializeLinkCollection_included_folder);
    writer.writeObjectValue<LinkCollection_included_propertyDefinition>("propertyDefinition", linkCollection_included.propertyDefinition, serializeLinkCollection_included_propertyDefinition);
    writer.writeAdditionalData(linkCollection_included.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LinkCollection_included_folder The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLinkCollection_included_folder(writer: SerializationWriter, linkCollection_included_folder: Partial<LinkCollection_included_folder> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!linkCollection_included_folder || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(linkCollection_included_folder.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LinkCollection_included_propertyDefinition The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLinkCollection_included_propertyDefinition(writer: SerializationWriter, linkCollection_included_propertyDefinition: Partial<LinkCollection_included_propertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!linkCollection_included_propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(linkCollection_included_propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LinkEntity The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLinkEntity(writer: SerializationWriter, linkEntity: Partial<LinkEntity> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!linkEntity || isSerializingDerivedType) { return; }
    writer.writeStringValue("createDate", linkEntity.createDate);
    writer.writeStringValue("createUserName", linkEntity.createUserName);
    writer.writeStringValue("entityType", linkEntity.entityType);
    writer.writeObjectValue<Folder>("fromEntity", linkEntity.fromEntity, serializeFolder);
    writer.writeStringValue("id", linkEntity.id);
    writer.writeStringValue("name", linkEntity.name);
    writer.writeObjectValue<Entity>("toEntity", linkEntity.toEntity, serializeEntity);
    writer.writeStringValue("url", linkEntity.url);
    writer.writeAdditionalData(linkEntity.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Markup The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarkup(writer: SerializationWriter, markup: Partial<Markup> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!markup || isSerializingDerivedType) { return; }
    writer.writeStringValue("createDateTime", markup.createDateTime);
    writer.writeObjectValue<User>("createdByUser", markup.createdByUser, serializeUser);
    writer.writeStringValue("data", markup.data);
    writer.writeStringValue("id", markup.id);
    writer.writeStringValue("parentId", markup.parentId);
    writer.writeStringValue("thumbnail", markup.thumbnail);
    writer.writeStringValue("updateDateTime", markup.updateDateTime);
    writer.writeObjectValue<User>("updatedByUser", markup.updatedByUser, serializeUser);
    writer.writeStringValue("url", markup.url);
    writer.writeAdditionalData(markup.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MarkupCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMarkupCollection(writer: SerializationWriter, markupCollection: Partial<MarkupCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!markupCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", markupCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<Markup>("results", markupCollection.results, serializeMarkup);
    writer.writeAdditionalData(markupCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProfileAttribute The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProfileAttribute(writer: SerializationWriter, profileAttribute: Partial<ProfileAttribute> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!profileAttribute || isSerializingDerivedType) { return; }
    writer.writeStringValue("attributeId", profileAttribute.attributeId);
    writer.writeStringValue("userGroupId", profileAttribute.userGroupId);
    writer.writeStringValue("value", profileAttribute.value);
    writer.writeAdditionalData(profileAttribute.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProfileAttributeDefinition The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProfileAttributeDefinition(writer: SerializationWriter, profileAttributeDefinition: Partial<ProfileAttributeDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!profileAttributeDefinition || isSerializingDerivedType) { return; }
    writer.writeStringValue("activeDirectoryMapping", profileAttributeDefinition.activeDirectoryMapping);
    writer.writeEnumValue<ProfileAttributeDefinition_association>("association", profileAttributeDefinition.association);
    writer.writeStringValue("attributeName", profileAttributeDefinition.attributeName);
    writer.writeStringValue("id", profileAttributeDefinition.id);
    writer.writeStringValue("systemName", profileAttributeDefinition.systemName);
    writer.writeStringValue("url", profileAttributeDefinition.url);
    writer.writeAdditionalData(profileAttributeDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProfileAttributeDefinitionCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProfileAttributeDefinitionCollection(writer: SerializationWriter, profileAttributeDefinitionCollection: Partial<ProfileAttributeDefinitionCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!profileAttributeDefinitionCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", profileAttributeDefinitionCollection.pagination, serializeCursorBasedPagination);
    writer.writeObjectValue<ProfileAttributeDefinition>("results", profileAttributeDefinitionCollection.results, serializeProfileAttributeDefinition);
    writer.writeAdditionalData(profileAttributeDefinitionCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Property The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProperty(writer: SerializationWriter, property: Partial<Property> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!property || isSerializingDerivedType) { return; }
    writer.writeObjectValue<PropertyDefinition>("definition", property.definition, serializePropertyDefinition);
    writer.writeStringValue("propertyDefinitionId", property.propertyDefinitionId);
    writer.writeStringValue("value", property.value);
    writer.writeAdditionalData(property.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PropertyDefinition The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePropertyDefinition(writer: SerializationWriter, propertyDefinition: Partial<PropertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!propertyDefinition || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("active", propertyDefinition.active);
    writer.writeEnumValue<PropertyDefinition_dataType>("dataType", propertyDefinition.dataType);
    writer.writeStringValue("displayName", propertyDefinition.displayName);
    writer.writeStringValue("id", propertyDefinition.id);
    writer.writeStringValue("initialValue", propertyDefinition.initialValue);
    writer.writeBooleanValue("isSystem", propertyDefinition.isSystem);
    writer.writeStringValue("systemName", propertyDefinition.systemName);
    writer.writeStringValue("url", propertyDefinition.url);
    writer.writeAdditionalData(propertyDefinition.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PropertyDefinitionCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePropertyDefinitionCollection(writer: SerializationWriter, propertyDefinitionCollection: Partial<PropertyDefinitionCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!propertyDefinitionCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", propertyDefinitionCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<PropertyDefinitionExtended | PropertyDefinition>("results", propertyDefinitionCollection.results, serializePropertyDefinitionCollection_results);
    writer.writeAdditionalData(propertyDefinitionCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PropertyDefinitionCollection_results The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePropertyDefinitionCollection_results(writer: SerializationWriter, propertyDefinitionCollection_results: Partial<PropertyDefinitionExtended | PropertyDefinition> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializePropertyDefinitionExtended(writer, propertyDefinitionCollection_results as PropertyDefinitionExtended);
    serializePropertyDefinition(writer, propertyDefinitionCollection_results as PropertyDefinition);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PropertyDefinitionExtended The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePropertyDefinitionExtended(writer: SerializationWriter, propertyDefinitionExtended: Partial<PropertyDefinitionExtended> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!propertyDefinitionExtended || isSerializingDerivedType) { return; }
    serializePropertyDefinition(writer, propertyDefinitionExtended, isSerializingDerivedType)
    writer.writeCollectionOfPrimitiveValues<string>("listValues", propertyDefinitionExtended.listValues);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Role The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRole(writer: SerializationWriter, role: Partial<Role> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!role || isSerializingDerivedType) { return; }
    writer.writeStringValue("description", role.description);
    writer.writeStringValue("id", role.id);
    writer.writeStringValue("roleName", role.roleName);
    writer.writeStringValue("systemName", role.systemName);
    writer.writeStringValue("url", role.url);
    writer.writeAdditionalData(role.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RoleCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRoleCollection(writer: SerializationWriter, roleCollection: Partial<RoleCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!roleCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", roleCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<Role>("results", roleCollection.results, serializeRole);
    writer.writeAdditionalData(roleCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchCriteria The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchCriteria(writer: SerializationWriter, searchCriteria: Partial<SearchCriteria> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchCriteria || isSerializingDerivedType) { return; }
    writer.writeEnumValue<SearchCriteria_operator>("operator", searchCriteria.operator);
    writer.writeStringValue("propertyDefinitionUrl", searchCriteria.propertyDefinitionUrl);
    writer.writeStringValue("searchString", searchCriteria.searchString);
    writer.writeAdditionalData(searchCriteria.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Session The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSession(writer: SerializationWriter, session: Partial<Session> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!session || isSerializingDerivedType) { return; }
    writer.writeStringValue("accessToken", session.accessToken);
    writer.writeStringValue("id", session.id);
    writer.writeObjectValue<User>("userInformation", session.userInformation, serializeUser);
    writer.writeObjectValue<Vault>("vaultInformation", session.vaultInformation, serializeVault);
    writer.writeAdditionalData(session.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SortCriteria The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSortCriteria(writer: SerializationWriter, sortCriteria: Partial<SortCriteria> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sortCriteria || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("ascending", sortCriteria.ascending);
    writer.writeStringValue("propertyDefinitionUrl", sortCriteria.propertyDefinitionUrl);
    writer.writeAdditionalData(sortCriteria.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param User The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUser(writer: SerializationWriter, user: Partial<User> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!user || isSerializingDerivedType) { return; }
    writer.writeEnumValue<AuthTypeEnum>("authTypes", user.authTypes);
    writer.writeDateValue("createDate", user.createDate);
    writer.writeStringValue("email", user.email);
    writer.writeStringValue("id", user.id);
    writer.writeStringValue("isActive", user.isActive);
    writer.writeStringValue("name", user.name);
    writer.writeStringValue("systemName", user.systemName);
    writer.writeStringValue("url", user.url);
    writer.writeAdditionalData(user.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserCollection(writer: SerializationWriter, userCollection: Partial<UserCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", userCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<User>("results", userCollection.results, serializeUser);
    writer.writeAdditionalData(userCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserExtended The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserExtended(writer: SerializationWriter, userExtended: Partial<UserExtended> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userExtended || isSerializingDerivedType) { return; }
    serializeUser(writer, userExtended, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Account>("accounts", userExtended.accounts, serializeAccount);
    writer.writeStringValue("analyticsId", userExtended.analyticsId);
    writer.writeCollectionOfObjectValues<UserExtended_attributes>("attributes", userExtended.attributes, serializeUserExtended_attributes);
    writer.writeObjectValue<User>("createUser", userExtended.createUser, serializeUser);
    writer.writeStringValue("firstName", userExtended.firstName);
    writer.writeCollectionOfObjectValues<Group>("groups", userExtended.groups, serializeGroup);
    writer.writeBooleanValue("isAdministrator", userExtended.isAdministrator);
    writer.writeStringValue("lastName", userExtended.lastName);
    writer.writeCollectionOfObjectValues<Role>("roles", userExtended.roles, serializeRole);
    writer.writeCollectionOfObjectValues<Vault>("vaults", userExtended.vaults, serializeVault);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserExtended_attributes The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserExtended_attributes(writer: SerializationWriter, userExtended_attributes: Partial<UserExtended_attributes> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userExtended_attributes || isSerializingDerivedType) { return; }
    writer.writeObjectValue<ProfileAttributeDefinition>("definition", userExtended_attributes.definition, serializeProfileAttributeDefinition);
    writer.writeStringValue("value", userExtended_attributes.value);
    writer.writeAdditionalData(userExtended_attributes.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Vault The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVault(writer: SerializationWriter, vault: Partial<Vault> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vault || isSerializingDerivedType) { return; }
    writer.writeStringValue("id", vault.id);
    writer.writeStringValue("name", vault.name);
    writer.writeStringValue("url", vault.url);
    writer.writeAdditionalData(vault.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VaultCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVaultCollection(writer: SerializationWriter, vaultCollection: Partial<VaultCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vaultCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", vaultCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<Vault>("results", vaultCollection.results, serializeVault);
    writer.writeAdditionalData(vaultCollection.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VaultOption The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVaultOption(writer: SerializationWriter, vaultOption: Partial<VaultOption> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vaultOption || isSerializingDerivedType) { return; }
    writer.writeStringValue("id", vaultOption.id);
    writer.writeStringValue("name", vaultOption.name);
    writer.writeStringValue("url", vaultOption.url);
    writer.writeStringValue("value", vaultOption.value);
    writer.writeAdditionalData(vaultOption.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VaultOptionCollection The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVaultOptionCollection(writer: SerializationWriter, vaultOptionCollection: Partial<VaultOptionCollection> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vaultOptionCollection || isSerializingDerivedType) { return; }
    writer.writeObjectValue<CursorBasedPagination>("pagination", vaultOptionCollection.pagination, serializeCursorBasedPagination);
    writer.writeCollectionOfObjectValues<VaultOption>("results", vaultOptionCollection.results, serializeVaultOption);
    writer.writeAdditionalData(vaultOptionCollection.additionalData);
}
/**
 * Session object.
 */
export interface Session extends AdditionalDataHolder, Parsable {
    /**
     * The access token
     */
    accessToken?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * User object.
     */
    userInformation?: User | null;
    /**
     * Vault object.Contains information about the Knowledge Vault.
     */
    vaultInformation?: Vault | null;
}
/**
 * Sort criteria object.
 */
export interface SortCriteria extends AdditionalDataHolder, Parsable {
    /**
     * If true, the sort is ascending. If false, the sort is descending.
     */
    ascending?: boolean | null;
    /**
     * URL string to the property definition
     */
    propertyDefinitionUrl?: string | null;
}
/**
 * User object.
 */
export interface User extends AdditionalDataHolder, Parsable {
    /**
     * The type of account to retrieve. Allowed values are ActiveDirectory, Vault, and Autodesk.
     */
    authTypes?: AuthTypeEnum | null;
    /**
     * The date that the user was created.
     */
    createDate?: Date | null;
    /**
     * The email address of the user.
     */
    email?: string | null;
    /**
     * A unique number that the Vault uses to reference the user.
     */
    id?: string | null;
    /**
     * Is the user active 
     */
    isActive?: string | null;
    /**
     * The login name of the user.
     */
    name?: string | null;
    /**
     * The systemName property
     */
    systemName?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * User collection object.
 */
export interface UserCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: User[] | null;
}
/**
 * User extended object.
 */
export interface UserExtended extends Parsable, User {
    /**
     * Accounts associated with this user. 
     */
    accounts?: Account[] | null;
    /**
     * The analyticsId property
     */
    analyticsId?: string | null;
    /**
     * Profile attributes of this user. 
     */
    attributes?: UserExtended_attributes[] | null;
    /**
     * User object.
     */
    createUser?: User | null;
    /**
     * First name of the user
     */
    firstName?: string | null;
    /**
     * An array of Group objects the user is a direct member of 
     */
    groups?: Group[] | null;
    /**
     * The isAdministrator property
     */
    isAdministrator?: boolean | null;
    /**
     * Last name of the user
     */
    lastName?: string | null;
    /**
     * An array of Role objects associated with this user. 
     */
    roles?: Role[] | null;
    /**
     * An array of KnowledgeVault objects associated with this user. 
     */
    vaults?: Vault[] | null;
}
export interface UserExtended_attributes extends AdditionalDataHolder, Parsable {
    /**
     * Profile attribute definition object.
     */
    definition?: ProfileAttributeDefinition | null;
    /**
     * The value property
     */
    value?: string | null;
}
/**
 * Vault object.Contains information about the Knowledge Vault.
 */
export interface Vault extends AdditionalDataHolder, Parsable {
    /**
     * A unique identifier for the Knowledge Vault.
     */
    id?: string | null;
    /**
     * The name of the Knowledge Vault. This is also the name of the database.
     */
    name?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
}
/**
 * Vault collection object.
 */
export interface VaultCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: Vault[] | null;
}
/**
 * Vault option object.
 */
export interface VaultOption extends AdditionalDataHolder, Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The name of the option
     */
    name?: string | null;
    /**
     * The relative URL to access this object.
     */
    url?: string | null;
    /**
     * The value of the option
     */
    value?: string | null;
}
/**
 * Vault option collection object.
 */
export interface VaultOptionCollection extends AdditionalDataHolder, Parsable {
    /**
     * Cursor-based pagination object.
     */
    pagination?: CursorBasedPagination | null;
    /**
     * The results property
     */
    results?: VaultOption[] | null;
}
export type VersionTypeEnum = (typeof VersionTypeEnumObject)[keyof typeof VersionTypeEnumObject];
export type XRefTypeEnum = (typeof XRefTypeEnumObject)[keyof typeof XRefTypeEnumObject];
/**
 * The type of account to retrieve. Allowed values are ActiveDirectory, Vault, and Autodesk.
 */
export const AuthTypeEnumObject = {
    ActiveDirectory: "ActiveDirectory",
    Vault: "Vault",
    Autodesk: "Autodesk",
} as const;
/**
 * An enumerated value representing the BOMStructure value of Component:- ``Normal`` - 0,- ``Purchased`` - 1,- ``Inseperable`` - 2,- ``Phantom`` - 3,- ``Reference`` - 4,- ``DynamicPhantom`` - 5
 */
export const BOMStructureEnumObject = {
    Normal: "Normal",
    Purchased: "Purchased",
    Inseperable: "Inseperable",
    Phantom: "Phantom",
    Reference: "Reference",
    DynamicPhantom: "DynamicPhantom",
} as const;
/**
 * Enum of BOM Type.
 */
export const BOMTypeEnumObject = {
    Latest: "Latest",
    Historic: "Historic",
} as const;
/**
 * An enumerated value specifying the type of component.  Enum of Component Type:- ``Part`` - 0- ``Assembly`` - 1- ``Virtual`` - 2- ``Standard`` - 3- ``Purchased`` - 4- ``Document`` - 5
 */
export const ComponentTypeEnumObject = {
    Part: "Part",
    Assembly: "Assembly",
    Virtual: "Virtual",
    Standard: "Standard",
    Purchased: "Purchased",
    Document: "Document",
} as const;
/**
 * File association options.
 */
export const FileAssociationTypeEnumObject = {
    Dependency: "Dependency",
    Attachment: "Attachment",
} as const;
/**
 * The classification of the file.
 */
export const FileClassificationEnumObject = {
    None: "None",
    DesignVisualization: "DesignVisualization",
    DesignDocument: "DesignDocument",
    ConfigurationMember: "ConfigurationMember",
    ConfigurationFactory: "ConfigurationFactory",
    ElectricalProject: "ElectricalProject",
    DesignSubstitute: "DesignSubstitute",
    DesignRepresentation: "DesignRepresentation",
    DesignPresentation: "DesignPresentation",
} as const;
/**
 * The design visualization attachment status of the file.
 */
export const FileVisualizationAttachmentStatusEnumObject = {
    None: "None",
    Syncronized: "Syncronized",
    NotSyncronized: "NotSyncronized",
    UserVerified: "UserVerified",
    Legacy: "Legacy",
} as const;
/**
 * options for viewing file history.
 */
export const HistoryOptionsEnumObject = {
    All: "All",
    ReleasedOnly: "ReleasedOnly",
    ReleasedAndRevisionTip: "ReleasedAndRevisionTip",
    RevisionTip: "RevisionTip",
} as const;
/**
 * Indicates the current status of the indexing engine. This status helps users understand whether the indexing operation is complete or still in progress. This is particularly important for customers with large datasets, as indexing can take a considerable amount of time to complete.The statuses include:- ``IndexingComplete`` - All properties and content have been indexed.- ``IndexingProperties`` - File properties are currently being indexed.- ``IndexingContent`` - File content is currently being indexed.- ``NA`` - Not applicable as data not retrieved from index.Note: When the status is either 'IndexingProperties' or 'IndexingContent', the search results are incomplete because the indexes are still being created. Complete search results will be available once fully indexed.
 */
export const IndexingStatusObject = {
    IndexingComplete: "IndexingComplete",
    IndexingProperties: "IndexingProperties",
    IndexingContent: "IndexingContent",
    NA: "NA",
} as const;
/**
 * Item File Link Types.
 */
export const ItemAssociationTypeEnumObject = {
    Primary: "Primary",
    Secondary: "Secondary",
    Tertiary: "Tertiary",
    StandardComponent: "StandardComponent",
    PrimarySub: "PrimarySub",
    SecondarySub: "SecondarySub",
    PinnedAttachment: "PinnedAttachment",
    NotPinnedAttachment: "NotPinnedAttachment",
} as const;
/**
 * The status of the job:- ``Ready`` - The job is ready to be run.- ``Running`` - The job is currently running.- ``Success`` - The job has completed successfully.- ``Failure`` - The job has failed.
 */
export const Job_statusObject = {
    Ready: "Ready",
    Running: "Running",
    Success: "Success",
    Failure: "Failure",
} as const;
/**
 * The association type.
 */
export const ProfileAttributeDefinition_associationObject = {
    None: "None",
    User: "User",
    Group: "Group",
    All: "All",
} as const;
/**
 * The value defined in SQL database.
 */
export const PropertyDefinition_dataTypeObject = {
    String: "String",
    Numeric: "Numeric",
    Bool: "Bool",
    DateTime: "DateTime",
    Image: "Image",
} as const;
/**
 * Revision options:- ``AllRevision`` - All Revisions- ``CurrentRevision`` - Current Revision
 */
export const RevisionOptionsEnumObject = {
    AllRevision: "AllRevision",
    CurrentRevision: "CurrentRevision",
} as const;
/**
 * Represents the operator used for the search.
 */
export const SearchCriteria_operatorObject = {
    Unknown: "Unknown",
    Contains: "Contains",
    DoesNotContain: "DoesNotContain",
    IsExactly: "IsExactly",
    IsEmpty: "IsEmpty",
    IsNotEmpty: "IsNotEmpty",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqualTo: "GreaterThanOrEqualTo",
    LessThan: "LessThan",
    LessThanOrEqualTo: "LessThanOrEqualTo",
    NotEqualTo: "NotEqualTo",
} as const;
/**
 * An enumerated value that specifies the type of version to retrieve.
 */
export const VersionTypeEnumObject = {
    None: "None",
    Latest: "Latest",
    LatestReleased: "LatestReleased",
} as const;
/**
 * An enumerated value that specifies whether the Component is internal or external in relation to the design file.Enum of XRefType  Internal = 0,  External = 1
 */
export const XRefTypeEnumObject = {
    Internal: "Internal",
    External: "External",
} as const;
/* tslint:enable */
/* eslint-enable */
