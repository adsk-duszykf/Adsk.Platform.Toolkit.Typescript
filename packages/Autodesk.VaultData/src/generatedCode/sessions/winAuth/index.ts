/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorResponseFromDiscriminatorValue, createSessionFromDiscriminatorValue, serializeSession, type ErrorResponse, type Session } from '../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WinAuthPostRequestBody_input}
 */
// @ts-ignore
export function createWinAuthPostRequestBody_inputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWinAuthPostRequestBody_input;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WinAuthPostRequestBody}
 */
// @ts-ignore
export function createWinAuthPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWinAuthPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param WinAuthPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWinAuthPostRequestBody(winAuthPostRequestBody: Partial<WinAuthPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "input": n => { winAuthPostRequestBody.input = n.getObjectValue<WinAuthPostRequestBody_input>(createWinAuthPostRequestBody_inputFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WinAuthPostRequestBody_input The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWinAuthPostRequestBody_input(winAuthPostRequestBody_input: Partial<WinAuthPostRequestBody_input> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "appCode": n => { winAuthPostRequestBody_input.appCode = n.getStringValue(); },
        "vault": n => { winAuthPostRequestBody_input.vault = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WinAuthPostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWinAuthPostRequestBody(writer: SerializationWriter, winAuthPostRequestBody: Partial<WinAuthPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!winAuthPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeObjectValue<WinAuthPostRequestBody_input>("input", winAuthPostRequestBody.input, serializeWinAuthPostRequestBody_input);
    writer.writeAdditionalData(winAuthPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WinAuthPostRequestBody_input The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWinAuthPostRequestBody_input(writer: SerializationWriter, winAuthPostRequestBody_input: Partial<WinAuthPostRequestBody_input> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!winAuthPostRequestBody_input || isSerializingDerivedType) { return; }
    writer.writeStringValue("appCode", winAuthPostRequestBody_input.appCode);
    writer.writeStringValue("vault", winAuthPostRequestBody_input.vault);
    writer.writeAdditionalData(winAuthPostRequestBody_input.additionalData);
}
export interface WinAuthPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The input property
     */
    input?: WinAuthPostRequestBody_input | null;
}
export interface WinAuthPostRequestBody_input extends AdditionalDataHolder, Parsable {
    /**
     * The app name to use for server-side audit logging.
     */
    appCode?: string | null;
    /**
     * The knowledge vault to sign in to.
     */
    vault?: string | null;
}
/**
 * Builds and executes requests for operations under /sessions/win-auth
 */
export interface WinAuthRequestBuilder extends BaseRequestBuilder<WinAuthRequestBuilder> {
    /**
     * Create a new session with the windows identity to a specific Knowledge Vault
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Session>}
     * @throws {ErrorResponse} error when the service returns a 400 status code
     */
     post(body: WinAuthPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Session | undefined>;
    /**
     * Create a new session with the windows identity to a specific Knowledge Vault
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: WinAuthPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WinAuthRequestBuilderUriTemplate = "{+baseurl}/sessions/win-auth";
/**
 * Metadata for all the requests in the request builder.
 */
export const WinAuthRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: WinAuthRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSessionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWinAuthPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
