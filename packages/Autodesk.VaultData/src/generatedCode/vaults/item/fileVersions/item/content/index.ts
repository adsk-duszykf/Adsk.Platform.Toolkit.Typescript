/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorResponseFromDiscriminatorValue, type ErrorResponse } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /vaults/{-id}/file-versions/{id}/content
 */
export interface ContentRequestBuilder extends BaseRequestBuilder<ContentRequestBuilder> {
    /**
     * Retrieve the content of a specific file version. Supports both full file download as well as partial content via range requests.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     * @throws {ErrorResponse} error when the service returns a 400 status code
     * @throws {ErrorResponse} error when the service returns a 401 status code
     * @throws {ErrorResponse} error when the service returns a 403 status code
     * @throws {ErrorResponse} error when the service returns a 404 status code
     */
     get(requestConfiguration?: RequestConfiguration<ContentRequestBuilderGetQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * Retrieve metadata for a specific file version content without fetching the full content body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     head(requestConfiguration?: RequestConfiguration<ContentRequestBuilderHeadQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * Retrieve the content of a specific file version. Supports both full file download as well as partial content via range requests.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ContentRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Retrieve metadata for a specific file version content without fetching the full content body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toHeadRequestInformation(requestConfiguration?: RequestConfiguration<ContentRequestBuilderHeadQueryParameters> | undefined) : RequestInformation;
}
/**
 * Retrieve the content of a specific file version. Supports both full file download as well as partial content via range requests.
 */
export interface ContentRequestBuilderGetQueryParameters {
    /**
     * In a multi-site environment, this field tells if the file should be synched to the local site.``true``: File is not on the local site, it will be copied to the local site.``false``: (Default) File is not copied to the local site.
     */
    allowSync?: boolean;
    /**
     * Specify the content disposition of the response header. Pass in 'inline' to allow the file to be displayed inside the web page; 'attachment' or null to save the file. Other values would be directly used as it is, but the behavior can't be guaranteed.
     */
    contentDisposition?: string;
    /**
     * When current file is a dwf associated to an Item, directly or as a CAD file's visualization attachment, to download its watermarked version, supply this File Version's id or its CAD File Version's id as the watermark source.
     */
    wmSrcFileVerId?: string;
    /**
     * When current file is a dwf associated to an Item, to download its watermarked version, supply this Item Version's id as the watermark source.
     */
    wmSrcItemVerId?: string;
}
/**
 * Retrieve metadata for a specific file version content without fetching the full content body
 */
export interface ContentRequestBuilderHeadQueryParameters {
    /**
     * In a multi-site environment, this field tells if the file should be synched to the local site.``true``: File is not on the local site, it will be copied to the local site.``false``: (Default) File is not copied to the local site.
     */
    allowSync?: boolean;
    /**
     * Specify the content disposition of the response header. Pass in 'inline' to allow the file to be displayed inside the web page; 'attachment' or null to save the file. Other values would be directly used as it is, but the behavior can't be guaranteed.
     */
    contentDisposition?: string;
    /**
     * When current file is a dwf associated to an Item, directly or as a CAD file's visualization attachment, to download its watermarked version, supply this File Version's id or its CAD File Version's id as the watermark source.
     */
    wmSrcFileVerId?: string;
    /**
     * When current file is a dwf associated to an Item, to download its watermarked version, supply this Item Version's id as the watermark source.
     */
    wmSrcItemVerId?: string;
}
/**
 * Uri template for the request builder.
 */
export const ContentRequestBuilderUriTemplate = "{+baseurl}/vaults/{%2Did}/file-versions/{id}/content{?allowSync*,contentDisposition*,wmSrcFileVerId*,wmSrcItemVerId*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const ContentRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ContentRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            403: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    head: {
        uriTemplate: ContentRequestBuilderUriTemplate,
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/* tslint:enable */
/* eslint-enable */
