/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorResponseFromDiscriminatorValue, type ErrorResponse } from '../../../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SignedurlGetResponse}
 */
// @ts-ignore
export function createSignedurlGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSignedurlGetResponse;
}
/**
 * The deserialization information for the current model
 * @param SignedurlGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSignedurlGetResponse(signedurlGetResponse: Partial<SignedurlGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { signedurlGetResponse.id = n.getStringValue(); },
        "url": n => { signedurlGetResponse.url = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SignedurlGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSignedurlGetResponse(writer: SerializationWriter, signedurlGetResponse: Partial<SignedurlGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!signedurlGetResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("id", signedurlGetResponse.id);
    writer.writeStringValue("url", signedurlGetResponse.url);
    writer.writeAdditionalData(signedurlGetResponse.additionalData);
}
export interface SignedurlGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The url property
     */
    url?: string | null;
}
/**
 * Builds and executes requests for operations under /vaults/{-id}/file-versions/{id}/signedurl
 */
export interface SignedurlRequestBuilder extends BaseRequestBuilder<SignedurlRequestBuilder> {
    /**
     * A time-limited, cryptographically signed URL providing secure access to download a file resource. Endpoint allows generation of signed download url for given file version Id. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SignedurlGetResponse>}
     * @throws {ErrorResponse} error when the service returns a 400 status code
     * @throws {ErrorResponse} error when the service returns a 401 status code
     * @throws {ErrorResponse} error when the service returns a 403 status code
     * @throws {ErrorResponse} error when the service returns a 404 status code
     */
     get(requestConfiguration?: RequestConfiguration<SignedurlRequestBuilderGetQueryParameters> | undefined) : Promise<SignedurlGetResponse | undefined>;
    /**
     * A time-limited, cryptographically signed URL providing secure access to download a file resource. Endpoint allows generation of signed download url for given file version Id. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SignedurlRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * A time-limited, cryptographically signed URL providing secure access to download a file resource. Endpoint allows generation of signed download url for given file version Id. 
 */
export interface SignedurlRequestBuilderGetQueryParameters {
    /**
     * Specify the content disposition of the response header. Pass in 'inline' to allow the file to be displayed inside the web page; 'attachment' or null to save the file. Other values would be directly used as it is, but the behavior can't be guaranteed.
     */
    contentDisposition?: string;
    /**
     * Duration for the signed url to be valid in seconds. Max allowed time is 180 seconds. Ex: expirationTime=120  
     */
    expirationTime?: number;
    /**
     * When current file is a dwf associated to an Item, directly or as a CAD file's visualization attachment, to download its watermarked version, supply this File Version's id or its CAD File Version's id as the watermark source.
     */
    wmSrcFileVerId?: string;
    /**
     * When current file is a dwf associated to an Item, to download its watermarked version, supply this Item Version's id as the watermark source.
     */
    wmSrcItemVerId?: string;
}
/**
 * Uri template for the request builder.
 */
export const SignedurlRequestBuilderUriTemplate = "{+baseurl}/vaults/{%2Did}/file-versions/{id}/signedurl{?contentDisposition*,expirationTime*,wmSrcFileVerId*,wmSrcItemVerId*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const SignedurlRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SignedurlRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            403: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSignedurlGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
