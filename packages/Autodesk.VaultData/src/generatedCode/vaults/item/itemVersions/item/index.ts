/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorResponseFromDiscriminatorValue, createItemVersionFromDiscriminatorValue, type ErrorResponse, type ItemVersion } from '../../../../models/index.js';
// @ts-ignore
import { AssociatedFilesRequestBuilderRequestsMetadata, type AssociatedFilesRequestBuilder } from './associatedFiles/index.js';
// @ts-ignore
import { BillOfMaterialsRequestBuilderRequestsMetadata, type BillOfMaterialsRequestBuilder } from './billOfMaterials/index.js';
// @ts-ignore
import { ParentsRequestBuilderRequestsMetadata, type ParentsRequestBuilder } from './parents/index.js';
// @ts-ignore
import { ThumbnailRequestBuilderRequestsMetadata, type ThumbnailRequestBuilder } from './thumbnail/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /vaults/{-id}/item-versions/{id}
 */
export interface ItemVersionsItemRequestBuilder extends BaseRequestBuilder<ItemVersionsItemRequestBuilder> {
    /**
     * The associatedFiles property
     */
    get associatedFiles(): AssociatedFilesRequestBuilder;
    /**
     * The billOfMaterials property
     */
    get billOfMaterials(): BillOfMaterialsRequestBuilder;
    /**
     * The parents property
     */
    get parents(): ParentsRequestBuilder;
    /**
     * The thumbnail property
     */
    get thumbnail(): ThumbnailRequestBuilder;
    /**
     * Get item version by its id.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ItemVersion>}
     * @throws {ErrorResponse} error when the service returns a 400 status code
     * @throws {ErrorResponse} error when the service returns a 401 status code
     * @throws {ErrorResponse} error when the service returns a 403 status code
     * @throws {ErrorResponse} error when the service returns a 404 status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ItemVersion | undefined>;
    /**
     * Get item version by its id.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const ItemVersionsItemRequestBuilderUriTemplate = "{+baseurl}/vaults/{%2Did}/item-versions/{id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ItemVersionsItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ItemVersionsItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    associatedFiles: {
        requestsMetadata: AssociatedFilesRequestBuilderRequestsMetadata,
    },
    billOfMaterials: {
        requestsMetadata: BillOfMaterialsRequestBuilderRequestsMetadata,
    },
    parents: {
        requestsMetadata: ParentsRequestBuilderRequestsMetadata,
    },
    thumbnail: {
        requestsMetadata: ThumbnailRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ItemVersionsItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ItemVersionsItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            403: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorResponseFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createItemVersionFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
